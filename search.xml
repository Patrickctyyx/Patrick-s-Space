<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[动态规划初步]]></title>
      <url>https://blog.patrickcty.cc/2017/02/21/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E5%88%9D%E6%AD%A5/</url>
      <content type="html"><![CDATA[<h1 id="动态规划初步"><a href="#动态规划初步" class="headerlink" title="动态规划初步"></a>动态规划初步</h1><h2 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h2><p>首先我们考虑一下以下的问题：</p>
<ul>
<li>什么是动态规划，动态规划与递推有什么关系</li>
<li>动态规划的关键点是什么</li>
<li>动态规划怎么保证每处的值都是最优</li>
<li>动态规划有哪几种解题模板</li>
<li>动态规划有哪些应用</li>
</ul>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>带着这些问题，就要更深的了解动态规划了。</p>
<p>首先回到第一个问题：</p>
<h3 id="什么是动态规划，动态规划与递推有什么关系"><a href="#什么是动态规划，动态规划与递推有什么关系" class="headerlink" title="什么是动态规划，动态规划与递推有什么关系"></a>什么是动态规划，动态规划与递推有什么关系</h3><p>我个人的理解是通过寻求问题的子问题来递推解决问题的一种方法。</p>
<p>而递推是动态规划中要用到的一部分，而且并不只是简单的递推，而是要根据情况进行判断选出最优的结果进行递推，例如：</p>
<blockquote>
<p>d(i, j) = max(d(i + 1, j), d(i + 1, j + 1)) + a(i, j)</p>
</blockquote>
<p>而递推则往往是简单的相邻几项的关系，例如：</p>
<blockquote>
<p>d(i) = 3d(i - 1) + 2</p>
</blockquote>
<p>既然递推不是动态规划的关键，那动态规划的关键点是什么呢？</p>
<p>这样就来到了第二个问题：</p>
<h3 id="动态规划的关键点是什么"><a href="#动态规划的关键点是什么" class="headerlink" title="动态规划的关键点是什么"></a>动态规划的关键点是什么</h3><p>1.状态</p>
<ul>
<li>简单来说就是整个过程中的某个点，以及一些属性</li>
</ul>
<ol>
<li>指标函数&amp;决策&amp;状态转移方程</li>
</ol>
<ul>
<li>指标函数是一个最优的函数，它的一个特定的值往往就是问题的解答，例如</li>
</ul>
<blockquote>
<p>上面的d(i, j)是从(i, j)出发的最大值，那么一个特定的值(1, 1)就是从这个点到最底层的最大的路径长度</p>
</blockquote>
<p>而<strong>指标函数的选取</strong>是动态规划的一个关键，选一个好的指标函数能大大的让问题简化</p>
<p>另外对于同一个状态的选取，指标函数通常有两种互相对称的写法，比如和上面的对称的是：到(i, j)的最大值</p>
<ul>
<li><p>决策是状态转移的方向，通常两个这个状态到下一个状态总是有多种方向可以选择，而我们要选择的总是最佳决策</p>
</li>
<li><p>状态转移方程则是用指标函数来表示不同状态的转移过程，选出最优决策，表示状态间的数学关系</p>
</li>
</ul>
<p>虽然动态规划是一层层推下来的，那如果到了后面的情况发现前面某一步的另一种决策有更优的结果是怎么处理的呢？怎么保证最后的结果总是最优？</p>
<h3 id="动态规划怎么保证每处的值都是最优"><a href="#动态规划怎么保证每处的值都是最优" class="headerlink" title="动态规划怎么保证每处的值都是最优"></a>动态规划怎么保证每处的值都是最优</h3><p>这是由一个叫“最优子结构”的部分保证的，看维基百科上我们可以知道：</p>
<blockquote>
<p>动态规划只能应用于有最优子结构的问题。最优子结构的意思是局部最优解能决定全局最优解（对有些问题这个要求并不能完全满足，故有时需要引入一定的近似）。简单地说，问题能够分解成子问题来解决。</p>
</blockquote>
<p>也就是说因为每一步都是由一个特定的值和最优值组成的，每一步最优值则保证了下一步甚至到结果都是最优值。</p>
<p>当然如果状态和指标函数选取的不好，那么可能就陷入一个“不能保证最优子结构”的情况了，比如杭电上的龟兔赛跑问题，如果选取(i, j)作为状态，i为当前充电站的编号，j为当前还可以跑的里程。因为下一步的里程还是和这一步相关，所以保证了前面的最优并不能保证接下来的都是最优的，这部分就要思考清楚了(这也是最难的部分)。</p>
<h3 id="动态规划有哪几种解题模板"><a href="#动态规划有哪几种解题模板" class="headerlink" title="动态规划有哪几种解题模板"></a>动态规划有哪几种解题模板</h3><p>下面以数字三角形为例</p>
<ul>
<li>递推法<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">int i, j;</div><div class="line">// 总是要把最开始的状态先初始化，这里是最下面一层的状态</div><div class="line">for (int i = 1; i &lt;= n; ++i) d[n][i] = a[n][j];</div><div class="line">// 由于这个图形是二元的，于是有二重循环</div><div class="line">for (int i = n - 1; i &gt;= 1; --i)</div><div class="line">    for (int j = 1; j &lt;= i; ++j)</div><div class="line">        d[i][j] = a[i][j] + max(d[i + 1][j], d[i + 1][j + 1]);</div></pre></td></tr></table></figure>
</li>
</ul>
<p>经过循环进行递推，最后的结果储存在数组d中</p>
<ul>
<li>记忆化搜索</li>
</ul>
<p>在递归的基础上对已经访问的数据进行标记，避免了重叠子问题的多次求解</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">// 初始化，方便之后的判断</div><div class="line">memset(d, -1, sizeof(d));</div><div class="line">int solve(int i, int j)</div><div class="line">&#123;</div><div class="line">    if (d[i][j] &gt;= 0) return d[i][j];</div><div class="line">    // 返回的时候顺便进行了“记忆”</div><div class="line">    return d[i][j] = a[i][j] + (i == n? 0: max(solve(i + 1,j), solve(i + 1, j + 1);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>基本的思想主要就是两种，而解题的关键则是确定状态以及指标函数了</p>
<h3 id="动态规划有哪些应用"><a href="#动态规划有哪些应用" class="headerlink" title="动态规划有哪些应用"></a>动态规划有哪些应用</h3><p>下面就分析一下讲过和做过的题目：</p>
<h4 id="数字三角形"><a href="#数字三角形" class="headerlink" title="数字三角形"></a>数字三角形</h4><ul>
<li>状态：(i, j)，位置</li>
<li>指标函数d(i, j)，从(i, j)出发的最大长度</li>
<li>决策：向下走的方向</li>
<li>状态转移方程<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">d[i][j] = a[i][j] + max(d[i + 1][j], d[i + 1][j + 1]);</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="嵌套矩形（有向无环图不固定起点终点的最大路径）"><a href="#嵌套矩形（有向无环图不固定起点终点的最大路径）" class="headerlink" title="嵌套矩形（有向无环图不固定起点终点的最大路径）"></a>嵌套矩形（有向无环图不固定起点终点的最大路径）</h4><ul>
<li>状态：i，结点</li>
<li>指标函数d(i)，从i出发的最大长度</li>
<li>决策：到下一个结点选择的边</li>
<li>状态转移方程<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">d[i] = max&#123;d[j]&#125;;  // j为和i相邻的结点</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="硬币问题（有向无环图固定起点终点的最大-小路径）"><a href="#硬币问题（有向无环图固定起点终点的最大-小路径）" class="headerlink" title="硬币问题（有向无环图固定起点终点的最大/小路径）"></a>硬币问题（有向无环图固定起点终点的最大/小路径）</h4><ul>
<li>状态：i，结点</li>
<li>指标函数d(i)，从i出发的最大/小长度</li>
<li>决策：到下一个结点选择的硬币的种类（硬币面值要比剩下的钱要小）</li>
<li>状态转移方程<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">d[i] = max(d[i], d[i - v[t]] + 1);  // t是要从大到小（最小数量）进行循环</div><div class="line">// 因此要求出所有的长度也必然要对i进行循环，也就是两层循环</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="多段图最短路径（多段决策）"><a href="#多段图最短路径（多段决策）" class="headerlink" title="多段图最短路径（多段决策）"></a>多段图最短路径（多段决策）</h4><ul>
<li>状态：(i, j)，行，列</li>
<li>指标函数d(i, j)，从(i, j)出发到最后一列的最大长度</li>
<li><strong>阶段</strong>：列</li>
<li>决策：到下一列走的方向</li>
<li>状态转移方程<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">d[i][j] = max(d[i + n][j + 1] + a[i][j]);  // n是三种决策的一个表示，通过循环来判断</div><div class="line">// 如果要按照字典序输出，则最好按照行数的大小进行排序</div></pre></td></tr></table></figure>
</li>
</ul>
<p>注意：<br>这个模型到完成的时候的步数已经确定了，所以可以根据每一步来当做阶段，阶段可以作为状态的一部分来简化模型</p>
<h4 id="0-1背包（多段决策）"><a href="#0-1背包（多段决策）" class="headerlink" title="0-1背包（多段决策）"></a>0-1背包（多段决策）</h4><ul>
<li>状态：(i, j)，当前层，背包剩余容量</li>
<li>指标函数d(i, j)，从(i, j)出发到最后一列的最大长度</li>
<li><strong>阶段</strong>：物品，因为每个物品都只有一个，也是“过了就没有了”，于是也可以用阶段表示</li>
<li>决策：是否把物品放入背包</li>
<li>状态转移方程<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">// 这里j保证了不会有一开始选很大后面没位置选的情况，因为j会从0到最大容量进行循环</div><div class="line">// 前面的情况如果不是最优就会被排除</div><div class="line">// 也是对i对j两层循环</div><div class="line">d[i][j] = max(d[i + 1][j], d[i + 1][j - V[i]]);</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="龟兔赛跑"><a href="#龟兔赛跑" class="headerlink" title="龟兔赛跑"></a>龟兔赛跑</h4><ul>
<li>状态：i，充电站</li>
<li>指标函数d(i, j)，从i到j的过程中充一次电并且时间最短，T(i)到达i最小时间</li>
<li>决策：是否充电</li>
<li>状态转移方程<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">// 也是对i对j两层循环</div><div class="line">d[i] = min(T(i) + d(i, j), T(j));</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="最长上升子序列-LIS"><a href="#最长上升子序列-LIS" class="headerlink" title="最长上升子序列(LIS)"></a>最长上升子序列(LIS)</h4><ul>
<li>状态：i，序列长</li>
<li>指标函数d(i)，长度为i序列的最长长度</li>
<li>决策：新增加的数是否比原来最大的大</li>
<li>状态转移方程<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">// 也是对i对j两层循环</div><div class="line">d[i] = max(0, d(j) | j &lt; i, A[j] &lt; A[i]);</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="最长公共子序列-LCS"><a href="#最长公共子序列-LCS" class="headerlink" title="最长公共子序列(LCS)"></a>最长公共子序列(LCS)</h4><ul>
<li>状态：(i, j)，A，B序列长</li>
<li>指标函数d(i, j)，公共子序列最大长度</li>
<li>决策：两个序列是否正好是最后一位相同</li>
<li>状态转移方程<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">// i从0～m循环，j从0～n循环</div><div class="line">A[i] == B[j]</div><div class="line">d(i, j) = d(i - 1, j - 1) + 1;</div><div class="line"></div><div class="line">else</div><div class="line">d(i, j) = max(d(i - 1, j), d(i, j - 1));</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>动态转移方程的循环往往不止一层，这个地方一定要想清楚。</p>
<p>看了这么多，还是不会做题怎么办？</p>
<p>我也在苦恼这事呢（哭。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[那些严重拖慢做题进度的题以及遇到的坑3]]></title>
      <url>https://blog.patrickcty.cc/2017/02/20/%E9%82%A3%E4%BA%9B%E4%B8%A5%E9%87%8D%E6%8B%96%E6%85%A2%E5%81%9A%E9%A2%98%E8%BF%9B%E5%BA%A6%E7%9A%84%E9%A2%98%E4%BB%A5%E5%8F%8A%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%913/</url>
      <content type="html"><![CDATA[<h1 id="那些严重拖慢做题进度的题以及遇到的坑3"><a href="#那些严重拖慢做题进度的题以及遇到的坑3" class="headerlink" title="那些严重拖慢做题进度的题以及遇到的坑3"></a>那些严重拖慢做题进度的题以及遇到的坑3</h1><p>依旧来自杭电</p>
<h2 id="1045-Fire-Net"><a href="#1045-Fire-Net" class="headerlink" title="1045 Fire Net"></a>1045 Fire Net</h2><blockquote>
<p>Suppose that we have a square city with straight streets. A map of a city is a square board with n rows and n columns, each representing a street or a piece of wall. </p>
<p>A blockhouse is a small castle that has four openings through which to shoot. The four openings are facing North, East, South, and West, respectively. There will be one machine gun shooting through each opening. </p>
<p>Here we assume that a bullet is so powerful that it can run across any distance and destroy a blockhouse on its way. On the other hand, a wall is so strongly built that can stop the bullets. </p>
<p>The goal is to place as many blockhouses in a city as possible so that no two can destroy each other. A configuration of blockhouses is legal provided that no two blockhouses are on the same horizontal row or vertical column in a map unless there is at least one wall separating them. In this problem we will consider small square cities (at most 4x4) that contain walls through which bullets cannot run through. </p>
<p>The following image shows five pictures of the same board. The first picture is the empty board, the second and third pictures show legal configurations, and the fourth and fifth pictures show illegal configurations. For this board, the maximum number of blockhouses in a legal configuration is 5; the second picture shows one way to do it, but there are several other ways. </p>
<p>Your task is to write a program that, given a description of a map, calculates the maximum number of blockhouses that can be placed in the city in a legal configuration. </p>
</blockquote>
<p>分析：</p>
<p>这是一道深度搜索的题，数据这么小是因为循环的次数太多了，也就是时间复杂度太大了</p>
<p>对于放置碉堡的顺序也有讲究，所以不能简单的从第一个开始扫一遍，而是要从每个点出发进行深度搜索，取最大的值才是最终的结果</p>
<p>深度搜索的好处是每次搜索的时候，前一次的状态都可以保留，并且最终状态回退也没那么麻烦</p>
<p>下面是代码：<br>参考了<a href="http://blog.csdn.net/u014235934/article/details/50879794" target="_blank" rel="external">这个链接</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div></pre></td><td class="code"><pre><div class="line">#include&lt;iostream&gt;</div><div class="line">#include&lt;cstdlib&gt;</div><div class="line">#include&lt;cstdio&gt;</div><div class="line">#include&lt;cmath&gt;</div><div class="line">#include&lt;cstring&gt;</div><div class="line">#include &lt;algorithm&gt;</div><div class="line"></div><div class="line">using namespace std;</div><div class="line"></div><div class="line">const int maxn = 10005;</div><div class="line"></div><div class="line">char a[5][5];</div><div class="line">// visit数组，表示每一格的状态，0为空位置，1为碉堡，2为墙</div><div class="line">// 实际上用a数组也可以，不过这里用的是整型数组</div><div class="line">int visit[5][5];</div><div class="line">// 设置为全局变量，便于函数中直接调用</div><div class="line">int mmax, cnt;</div><div class="line">int n;</div><div class="line"></div><div class="line">// 判断从(i, j)出发向上下左右是否会遇到碉堡</div><div class="line">// 也就是是否能在该店放置碉堡</div><div class="line">bool ffind(int i, int j)</div><div class="line">&#123;</div><div class="line">    for (int k = j; k &lt;= n; ++k)</div><div class="line">    &#123;</div><div class="line">        if (visit[i][k] == 2)</div><div class="line">            break;</div><div class="line">        if (visit[i][k] == 1)</div><div class="line">            return false;</div><div class="line">    &#125;</div><div class="line">    for (int k = j; k &gt; 0; --k)</div><div class="line">    &#123;</div><div class="line">        // 是visit而不是a</div><div class="line">        // 所以两个都用的坏处就是容易搞混</div><div class="line">        if (visit[i][k] == 2)</div><div class="line">            break;</div><div class="line">        if (visit[i][k] == 1)</div><div class="line">            return false;</div><div class="line">    &#125;</div><div class="line">    for (int k = i; k &lt;= n; ++k)</div><div class="line">    &#123;</div><div class="line">        if (visit[k][j] == 2)</div><div class="line">            break;</div><div class="line">        if (visit[k][j] == 1)</div><div class="line">            return false;</div><div class="line">    &#125;</div><div class="line">    for (int k = i; k &gt; 0; --k)</div><div class="line">    &#123;</div><div class="line">        // 横纵坐标不要搞错</div><div class="line">        if (visit[k][j] == 2)</div><div class="line">            break;</div><div class="line">        if (visit[k][j] == 1)</div><div class="line">            return false;</div><div class="line">    &#125;</div><div class="line">    return true;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">// 深度搜索</div><div class="line">void dfs()</div><div class="line">&#123;</div><div class="line">    // 每次都保存最大的状态</div><div class="line">    if (cnt &gt; mmax)</div><div class="line">        mmax = cnt;</div><div class="line">    for (int i = 1; i &lt;= n; ++i)</div><div class="line">    &#123;</div><div class="line">        for (int j = 1; j &lt;= n; ++j)</div><div class="line">        &#123;</div><div class="line">            // 没有放置碉堡并且可以放置碉堡</div><div class="line">            if (!visit[i][j] &amp;&amp; ffind(i, j))</div><div class="line">            &#123;</div><div class="line">                visit[i][j] = 1;</div><div class="line">                cnt++;</div><div class="line">                dfs();</div><div class="line">                // 整个搜索完了之后就状态回退</div><div class="line">                // 便于下一个点出发进行深度搜索</div><div class="line">                visit[i][j] = 0;</div><div class="line">                cnt--;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">int main()</div><div class="line">&#123;</div><div class="line"></div><div class="line">    while (scanf(&quot;%d&quot;, &amp;n) &amp;&amp; n != 0)</div><div class="line">    &#123;</div><div class="line">        for (int i = 1; i &lt;= n; ++i)</div><div class="line">        &#123;</div><div class="line">            getchar();</div><div class="line">            for (int j = 1; j &lt;= n; ++j)</div><div class="line">            &#123;</div><div class="line">                scanf(&quot;%c&quot;, &amp;a[i][j]);</div><div class="line">                if (a[i][j] == &apos;X&apos;)</div><div class="line">                    visit[i][j] = 2;</div><div class="line">                else</div><div class="line">                    visit[i][j] = 0;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        cnt = mmax = 0;</div><div class="line">        dfs();</div><div class="line">        printf(&quot;%d\n&quot;, mmax);</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[那些严重拖慢做题进度的题以及遇到的坑2]]></title>
      <url>https://blog.patrickcty.cc/2017/02/19/%E9%82%A3%E4%BA%9B%E4%B8%A5%E9%87%8D%E6%8B%96%E6%85%A2%E5%81%9A%E9%A2%98%E8%BF%9B%E5%BA%A6%E7%9A%84%E9%A2%98%E4%BB%A5%E5%8F%8A%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%912/</url>
      <content type="html"><![CDATA[<h1 id="那些严重拖慢做题进度的题以及遇到的坑2"><a href="#那些严重拖慢做题进度的题以及遇到的坑2" class="headerlink" title="那些严重拖慢做题进度的题以及遇到的坑2"></a>那些严重拖慢做题进度的题以及遇到的坑2</h1><p>杭电205X &amp;&amp; 206X</p>
<h2 id="A-B"><a href="#A-B" class="headerlink" title="A == B ?"></a>A == B ?</h2><blockquote>
<p>Give you two numbers A and B, if A is equal to B, you should print “YES”, or print “NO”.</p>
</blockquote>
<p>这一题是最坑的，AC率只有15.9%，主要原因就是题目条件说得太简略了，后面也有一些题是这样的，有一些时要注意的。</p>
<p>这里A和B并不是简单的数，可能是很长的数，长到没有变量类型可以表示，也可以是000000000000000000.00000000001这种形式很坑的数，所以并不是那么简单</p>
<p>不过Java里面有相应的模块，于是就很容易过了，而用C++就很难搞了</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.util.Scanner;</div><div class="line"><span class="keyword">import</span> java.math.BigDecimal;  <span class="comment">// 大的十进制数</span></div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</div><div class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</div><div class="line">        <span class="keyword">while</span> (in.hasNext()) &#123;</div><div class="line">            BigDecimal A = in.nextBigDecimal;</div><div class="line">            BigDecimal B = in.nextBigDecimal;</div><div class="line">            <span class="keyword">if</span> (A.compareTo(B) == <span class="number">0</span>) &#123;</div><div class="line">                System.out.println(<span class="string">"YES"</span>);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span> &#123;</div><div class="line">                System.out.println(<span class="string">"NO"</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>总结一下，这种涉及到位数很多的数用Java可以比较方便的解决。（得知道有相应的模块233）</p>
<h2 id="Rectangles"><a href="#Rectangles" class="headerlink" title="Rectangles"></a>Rectangles</h2><blockquote>
<p>Given two rectangles and the coordinates of two points on the diagonals of each rectangle,you have to calculate the area of the intersected part of two rectangles. its sides are parallel to OX and OY </p>
</blockquote>
<p>分析：</p>
<p>这一题知道算法就很简单，如果没想清楚就很坑了…比如说我…</p>
<p>方法一：</p>
<ul>
<li>重叠部分长度等于两者长度相加减去最大最小坐标之差，对于x，是下面这种，y也类似<blockquote>
<p>rela_x = fabs(x1 - x2) + fabs(x3 - x4) - (x[3] + x[0])  // x[3], x[0]是最大和最小的坐标</p>
</blockquote>
</li>
</ul>
<p>如果这个值小于零，说明不相交，大于零就是相应的长度</p>
<p>于是当相交的时候，面积就是rela_x * rela_y</p>
<p>方法二：</p>
<ul>
<li>重叠部分的长度总是四个坐标中中间两个的差值，于是面积有<blockquote>
<p>(x[2] - x[1]) * (y[3] - y[1])</p>
</blockquote>
</li>
</ul>
<p>关键就是要相处算法，死讨论情况是很难做出来的…</p>
<h2 id="A-B-Again"><a href="#A-B-Again" class="headerlink" title="A + B Again"></a>A + B Again</h2><blockquote>
<p>There must be many A + B problems in our HDOJ , now a new one is coming.<br>Give you two hexadecimal integers , your task is to calculate the sum of them,and print it in hexadecimal too.<br>Easy ? AC it !</p>
</blockquote>
<p>分析：</p>
<p>说白了就是十六进制的输入和输出，我不知道有相应的内容，于是手动转换…果不其然WA…</p>
<p>直接上代码吧…</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">#include&lt;stdio.h&gt;</div><div class="line">int main()</div><div class="line">&#123;</div><div class="line">    // 15位16进制相当于60位二进制，所以要开大一点</div><div class="line">    long long a, b;</div><div class="line">    // x占位符表示16进制</div><div class="line">    while(scanf(&quot;%llx %llx&quot;, &amp;a, &amp;b) != EOF)</div><div class="line">    &#123;</div><div class="line">        // 不能输出负的十六进制，所以这里要处理一下</div><div class="line">        if (a + b &lt; 0)</div><div class="line">            printf(&quot;-%llx\n&quot;, -(a + b));</div><div class="line">        else</div><div class="line">            printf(&quot;%llx\n&quot;, (a + b));</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>你看吧，基础不牢，地动山摇…</p>
<h2 id="The-sum-problem"><a href="#The-sum-problem" class="headerlink" title="The sum problem"></a>The sum problem</h2><blockquote>
<p>Given a sequence 1,2,3,……N, your job is to calculate all the possible sub-sequences that the sum of the sub-sequence is M.</p>
</blockquote>
<p>分析：</p>
<p>题目本身是很简单的，是连续的数列，都不涉及到动态规划<br>但是隐藏了一个坑，那就是输入的数字范围很大，因此如果不控制复杂度就机器容易超时</p>
<p>在这里用解方程的思想来做：</p>
<ul>
<li>首项为f，末项为e，项数为n<blockquote>
<p>m = (f + e) * n / 2;<br>e - f + 1 = n;</p>
</blockquote>
</li>
</ul>
<p>因此可以用项数和m来表示f解出f，当f为1的时候，n可能取到的值最大，约为sqrt(2m)，也就是说子序列的长度不可能超多这个值，因此循环从1到sqrt(2m)就可以了，当解出来的f是正整数而且不超过范围说明就是所求</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">int len = floor(sqrt(2 * m));</div><div class="line">        double x = 0;</div><div class="line">        for (int i = len; i &gt;= 1; --i)</div><div class="line">        &#123;</div><div class="line">            x = (2.0 * m / i + 1 - i) * 0.5;</div><div class="line">            int a = floor(x);</div><div class="line">            x -= a;</div><div class="line">            if (x == 0 &amp;&amp; (a + i - 1) &lt;= n)</div><div class="line">                printf(&quot;[%d,%d]\n&quot;, a, a + i - 1);</div><div class="line">        &#125;</div></pre></td></tr></table></figure>
<p>补充：</p>
<p>floor()是数学函数，是求一个浮点数的不大于它的最大整数，返回值也是一个double型的浮点数<br>类似的还有:<br>ceil()：求一个浮点数的不小于它的最小整数,返回值也是一个double型的浮点数<br>round():求一个浮点数的四舍五入值，返回也是一个整数，也就是说看小数点第二位四舍五入</p>
<blockquote>
<p>例如：round(1.499999) is 1.000000</p>
</blockquote>
<p>感觉自己是一个木头脑袋…</p>
<h2 id="龟兔赛跑"><a href="#龟兔赛跑" class="headerlink" title="龟兔赛跑"></a>龟兔赛跑</h2><blockquote>
<p>据说在很久很久以前，可怜的兔子经历了人生中最大的打击——赛跑输给乌龟后，心中郁闷，发誓要报仇雪恨，于是躲进了杭州下沙某农业园卧薪尝胆潜心修炼，终于练成了绝技，能够毫不休息得以恒定的速度(VR m/s)一直跑。兔子一直想找机会好好得教训一下乌龟，以雪前耻。<br>最近正值HDU举办50周年校庆，社会各大名流齐聚下沙，兔子也趁此机会向乌龟发起挑战。虽然乌龟深知获胜希望不大，不过迫于舆论压力，只能接受挑战。<br>比赛是设在一条笔直的道路上，长度为L米，规则很简单，谁先到达终点谁就算获胜。<br>无奈乌龟自从上次获胜以后，成了名龟，被一些八卦杂志称为“动物界的刘翔”，广告不断，手头也有了不少积蓄。为了能够再赢兔子，乌龟不惜花下血本买了最先进的武器——“”小飞鸽”牌电动车。这辆车在有电的情况下能够以VT1 m/s的速度“飞驰”，可惜电池容量有限，每次充满电最多只能行驶C米的距离，以后就只能用脚来蹬了，乌龟用脚蹬时的速度为VT2 m/s。更过分的是，乌龟竟然在跑道上修建了很多很多（N个)的供电站，供自己给电动车充电。其中，每次充电需要花费T秒钟的时间。当然，乌龟经过一个充电站的时候可以选择去或不去充电。<br>比赛马上开始了，兔子和带着充满电的电动车的乌龟并列站在起跑线上。你的任务就是写个程序，判断乌龟用最佳的方案进军时，能不能赢了一直以恒定速度奔跑的兔子。</p>
</blockquote>
<p>分析：</p>
<p>这个题目条件十分逗逼，也是一个涉及到动态规划的，在这里先留个坑等看了动态规划的相关内容再回来补充</p>
<h2 id="Treasure-the-new-start-freshmen"><a href="#Treasure-the-new-start-freshmen" class="headerlink" title="Treasure the new start, freshmen!"></a>Treasure the new start, freshmen!</h2><blockquote>
<p>background:<br>A new semester comes , and the HDU also meets its 50th birthday. No matter what’s your major, the only thing I want to tell you is:”Treasure the college life and seize the time.” Most people thought that the college life should be colorful, less presure.But in actual, the college life is also busy and rough. If you want to master the knowledge learned from the book, a great deal of leisure time should be spend on individual study and practise, especially on the latter one. I think the every one of you should take the learning attitude just as you have in senior school.<br>“No pain, No Gain”, HDU also has scholarship, who can win it? That’s mainly rely on the GPA(grade-point average) of the student had got. Now, I gonna tell you the rule, and your task is to program to caculate the GPA.<br>If there are K(K &gt; 0) courses, the i-th course has the credit Ci, your score Si, then the result GPA is<br>GPA = (C1 <em> S1 + C2 </em> S2 +……+Ci * Si……) / (C1 + C2 + ……+ Ci……) (1 &lt;= i &lt;= K, Ci != 0)<br>If there is a 0 &lt;= Si &lt; 60, The GPA is always not existed.</p>
</blockquote>
<p>这题其实是水题，但是一直WA</p>
<p>有几个坑：</p>
<ul>
<li>学分和成绩都可以是小数，所以要用double类型的，这里题目中没有说出来，以后要长一点心！</li>
<li>break使用的时候要慎重！特别是在输入数据的时候，提前break了后面输入的数据就都是错的！</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[《爆裂鼓手》]]></title>
      <url>https://blog.patrickcty.cc/2017/02/19/%E3%80%8A%E7%88%86%E8%A3%82%E9%BC%93%E6%89%8B%E3%80%8B/</url>
      <content type="html"><![CDATA[<h1 id="《爆裂鼓手》"><a href="#《爆裂鼓手》" class="headerlink" title="《爆裂鼓手》"></a>《爆裂鼓手》</h1><h2 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ACM集训了这么多天，当我知道明天可以休息一天的时候，内心十分激动，于是在这个不用赶着A题的晚上，看了这部电影。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;说实话一下子真的难以下笔，于是我再次重新过了一次剧情这才对整个脉络有了进一步的了解。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;故事的主要人物是Andrew与Fletcher，核心冲突也是在他们两人之间展开的。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fletcher是一个怪人，但是他是一个很厉害的指挥家。他会做出一些怪异的举动，比如进入课堂然后让其中的一些学生演奏相应的片段来挑人到Studio Bank中去而上课的老师却不敢说什么，他会故意逼走一个没走音的学生，他会凭借自己的喜好随意辱骂吼学生，也因此让Sean选择自杀…</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;但是根据他自己的话他是想激发学生的潜力，而那些承受不了的，那个被逼走的都是因为他们“不够优秀”。虽然他的教学方式以及思想行为都十分偏激，但不可否认的是他的初衷是比较好的，同时也确实有一定的成绩。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;令我比较在意的是，在他讲述肖恩·凯西的死的时候，他哭了出来，但是从后面我们可以知道他是死于抑郁症，Fletcher的哭究竟是因为真的为他感到惋惜还是因为自责呢？由于他是一个很怪的人，所以这个还真的不好判断。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;另一边，Andrew也是一个奇怪的人，他十分热爱打鼓，并有才华，但是他没有朋友，家人也对他不怎么重视，他对待感情的态度也很奇怪。在与Nicole见面的四次中，有三次他是很低落的，另外在成为core的时候他似乎忽视了Nicole的短信？我能明显感觉到Nicole并不是他真正所爱，感觉有一种自我的因素掺杂在感情里面——因为加入Studio Bank而表白，因为失去core的地位而分手，因为再次上台演出而又想和Nicole和好。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;音乐才是他真正喜爱的内容，为了音乐，或者是为了乐队中的地位，他拼命练习，连练到流血，出车祸都要继续，也正是因为太过偏执，他才不甘心失去core地位，他才与Fletcher积怨，虽然我觉得大家都讨厌Fletcher…也正是因为偏执，他才能忍受住Fletcher的“折磨”，一步一步达到要求，以及最后的爆发。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在那场演奏的事故中，Andrew打了Fletcher，他也因此被退学。比较值得注意的是当那个女律师（应该是吧？）让他为Fletcher的坏行为作证，在很长一番思想斗争之后他终于同意作证了，之后他放弃了音乐梦，Fletcher也不再是教师了。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;之后他们再次相遇并且“冰释前嫌”，Andrew再次上台演奏，结果是Fletcher是为了报复他的举报之仇，但是Andrew用自己的演奏予以反击并且在最后也打动了Fletcher，最终电影在Fletcher和Andrew二人的对峙演奏中结束了。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;最后Andrew用自己行为让Fletcher认可了他，并且他自己的一口恶气也出了。鉴于Fletcher的古怪性格，他做出这种报复的行为也不算不可能，不过我之前一直以为Fletcher还是有感情的，所以当他报复的时候我还是很意外的。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;另外在维基百科上看到：</p>
<blockquote>
<p>安德鲁为此极度不满下，为了让佛列契改变主意而专心打鼓，打鼓打到两只手上的磨出的茧子流血。一刻起，安德鲁的性格发生了巨变，开始从彬彬有礼变的狂妄自大，甚至认为自己的女朋友妮可会拖自己的后腿而与她分手。</p>
</blockquote>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;尽管我并不是很认可这种说法，不过好像还是有一定的道理。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;总之这部电影还是看的很爽的，但是事后分析起来却感觉一脸懵逼，而且十分具有讽刺意味，可能是我没看懂吧…而且分析这个真的不比ACM轻松…</p>
<h2 id="评分"><a href="#评分" class="headerlink" title="评分"></a>评分</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;8/10。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;不知道这部电影想表达什么，可能是我没看懂。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ACM递推归纳]]></title>
      <url>https://blog.patrickcty.cc/2017/02/18/ACM%E9%80%92%E6%8E%A8%E5%BD%92%E7%BA%B3/</url>
      <content type="html"><![CDATA[<h1 id="ACM递推归纳"><a href="#ACM递推归纳" class="headerlink" title="ACM递推归纳"></a>ACM递推归纳</h1><p>递推是我众多不擅长的项目中的比较显著的一个…题目做得太艰难了。</p>
<h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>递推中增加一个元素，在头部加和尾部加是同一种情况！！！因此考虑了尾部就不用考虑头部了！！！吃了好多亏orz。</p>
<h2 id="超级楼梯"><a href="#超级楼梯" class="headerlink" title="超级楼梯"></a>超级楼梯</h2><blockquote>
<p>有一楼梯共M级，刚开始时你在第一级，若每次只能跨上一级或二级，要走上第M级，共有多少种走法？</p>
</blockquote>
<p>分析：</p>
<p>因为只能走一级或者两级，所以最后一步有两种情况：</p>
<ol>
<li>走一步，剩下n-1和之前的相同</li>
<li>走两步，剩下n-2和之前的相同</li>
</ol>
<p>于是有：</p>
<blockquote>
<p>a[n] = a[n - 1] + a[n - 2]</p>
</blockquote>
<h2 id="一只小蜜蜂"><a href="#一只小蜜蜂" class="headerlink" title="一只小蜜蜂"></a>一只小蜜蜂</h2><blockquote>
<p>有一只经过训练的蜜蜂只能爬向右侧相邻的蜂房，不能反向爬行。请编程计算蜜蜂从蜂房a爬到蜂房b的可能路线数。<br>其中，蜂房的结构如下所示。<br><img src="https://okdkbnczs.qnssl.com/image/ACM/2044.jpg" alt="此处输入图片的描述"></p>
</blockquote>
<p>分析：</p>
<p>a到b的可能性本质上就是爬行b-a距离的可能性。而每一步有两个选择，右边或者斜右边，剩下的就和上面的几乎一样了，于是有：</p>
<blockquote>
<p>a[i] = a[i - 1] + a[i - 2]</p>
</blockquote>
<h2 id="LELE的RPG难题"><a href="#LELE的RPG难题" class="headerlink" title="LELE的RPG难题"></a>LELE的RPG难题</h2><blockquote>
<p>有排成一行的ｎ个方格，用红(Red)、粉(Pink)、绿(Green)三色涂每个格子，每格涂一色，要求任何相邻的方格不能同色，且首尾两格也不同色．求全部的满足要求的涂法.</p>
</blockquote>
<p>分析：</p>
<p>如果n增加一，就要根据增加前最后一个格子的颜色来判断了：</p>
<ul>
<li>如果最后一个不和第一个相同，也就是满足条件，就直接是a[n - 1]了，增加的一块只有一个选择</li>
<li>如果相同，那么前面n-2个一定是满足条件的，就是a[n - 2]，增加的一块有两个选择</li>
</ul>
<p>于是有：</p>
<blockquote>
<p>a[i] = a[i - 1] + 2 * a[i - 2]</p>
</blockquote>
<h2 id="骨牌铺方格"><a href="#骨牌铺方格" class="headerlink" title="骨牌铺方格"></a>骨牌铺方格</h2><blockquote>
<p>在2×n的一个长方形方格中,用一个1× 2的骨牌铺满方格,输入n ,输出铺放方案的总数.<br>例如n=3时,为2× 3方格，骨牌的铺放方案有三种</p>
</blockquote>
<p>分析：</p>
<p>这道题之前就把我卡住了，不过现在看到这么多难题之后反而觉得不难了…</p>
<p>因为骨牌的尺寸是1*2，因此横着摆放和竖着摆放是不同的，而竖着摆放一个就能填满，横着摆放两个才能填满，于是：</p>
<ul>
<li>当前情况是n-1的时候多加了一块竖着的</li>
<li>当前情况是n-2的时候多加了两块横着的</li>
</ul>
<p>于是有：</p>
<blockquote>
<p>a[i] = a[i - 1] + a[i - 2]</p>
</blockquote>
<h2 id="阿牛的EOF牛肉串"><a href="#阿牛的EOF牛肉串" class="headerlink" title="阿牛的EOF牛肉串"></a>阿牛的EOF牛肉串</h2><blockquote>
<p>长度为n的只由”E” “O” “F”三种字符组成的字符串（可以只有其中一种或两种字符，但绝对不能有其他字符）,阿牛同时禁止在串中出现O相邻的情况</p>
</blockquote>
<p>分析：</p>
<p>末尾有两种可能，是O或者是其他的</p>
<ul>
<li>是E或F，那么前面n-1就一定满足，即为a[n-1]</li>
<li>是O的话，O前一位一定是E或F，根据上面的，有a[n-2]</li>
</ul>
<p>综合起来，于是有：</p>
<blockquote>
<p>a[n] = 2 * (a[n - 1] + a[n - 2])</p>
</blockquote>
<h2 id="神、上帝以及老天爷"><a href="#神、上帝以及老天爷" class="headerlink" title="神、上帝以及老天爷"></a>神、上帝以及老天爷</h2><blockquote>
<p>首先，所有参加晚会的人员都将一张写有自己名字的字条放入抽奖箱中；<br>然后，待所有字条加入完毕，每人从箱中取一个字条；<br>最后，如果取得的字条上写的就是自己的名字，那么“恭喜你，中奖了！”</p>
<p>大家可以想象一下当时的气氛之热烈，毕竟中奖者的奖品是大家梦寐以求的Twins签名照呀！不过，正如所有试图设计的喜剧往往以悲剧结尾，这次抽奖活动最后竟然没有一个人中奖！</p>
<p>我的神、上帝以及老天爷呀，怎么会这样呢？</p>
<p>不过，先不要激动，现在问题来了，你能计算一下发生这种情况的概率吗？</p>
</blockquote>
<p>分析：</p>
<p>注：此处a[n]依旧是可能性而不是概率<br>这是一个错位排序的问题，增加一个元素考虑两种情况：</p>
<ul>
<li>前面n-1已经构成错排，那么直接把最后一个和前面n-1任意一个交换就可以了，即为(n - 1) * a[n - 1]</li>
<li>前面n-1不构成错排，新加的元素交换之后构成错排，于是有n-2个元素构成错排，而不构成的元素有n - 1种情况，即为(n -1) * a[n - 2]</li>
</ul>
<p>于是有：</p>
<blockquote>
<p>a[n] = (a[n - 1] + a[n - 2]) * (n - 1)</p>
</blockquote>
<h2 id="考新郎"><a href="#考新郎" class="headerlink" title="考新郎"></a>考新郎</h2><blockquote>
<p>假设一共有N对新婚夫妇,其中有M个新郎找错了新娘,求发生这种情况一共有多少种可能.</p>
</blockquote>
<p>分析：</p>
<p>这也是一道错排的题，和上面几乎一样。不过是M个错排，另外N-M个是组合</p>
<p>于是有：</p>
<blockquote>
<p>a[n] = (a[n - 1] + a[n - 2]) <em> (n - 1)<br>rst = a[n] </em> C(N,M)</p>
</blockquote>
<p>注：a[n]是错排的可能性，rst才是结果</p>
<h2 id="折线分割平面"><a href="#折线分割平面" class="headerlink" title="折线分割平面"></a>折线分割平面</h2><blockquote>
<p>我们看到过很多直线分割平面的题目，今天的这个题目稍微有些变化，我们要求的是n条折线分割平面的最大数目。比如，一条折线可以将平面分成两部分，两条折线最多可以将平面分成7部分，具体如下所示。</p>
</blockquote>
<p><img src="https://okdkbnczs.qnssl.com/image/ACM/2050.jpg" alt="此处输入图片的描述"></p>
<p>分析：</p>
<p>直线相交的时候每增加N个交点会增加N+1个平面<br>1.N条直线相交，平面数为</p>
<blockquote>
<p>1 + 1 + 2 + .. + n = 1 + n * (n + 1) / 2</p>
</blockquote>
<p>2.N组平行线相交<br>第N次添加的时候，会增加两个2N-2个交点，此时会增加两个2N-1个平面，此时平面数为</p>
<blockquote>
<p>1 + 2 + 6 + … + 4n - 2 = 2 <em> n </em> n + 1</p>
</blockquote>
<p>3.N组折线相交<br>相比上面，每组直线相交就会少一个平面，于是少N个平面，平面数就是上面的减N</p>
<blockquote>
<p>2 <em> n </em> n + 1 - n</p>
</blockquote>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>这部分代码并不难，难的是找出递推关系。</p>
<p>这么多组下来之后可以发现很多都是与前两次的状态有关的，因为根据特殊的条件可以分成两种情况讨论，不过找出这个讨论的条件也不是一件容易的事情。希望这次的踩坑能给之后的带来一些帮助吧！</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[那些严重拖慢做题进度的题以及遇到的坑]]></title>
      <url>https://blog.patrickcty.cc/2017/02/17/%E9%82%A3%E4%BA%9B%E4%B8%A5%E9%87%8D%E6%8B%96%E6%85%A2%E5%81%9A%E9%A2%98%E8%BF%9B%E5%BA%A6%E7%9A%84%E9%A2%98%E4%BB%A5%E5%8F%8A%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/</url>
      <content type="html"><![CDATA[<h1 id="那些严重拖慢做题进度的题以及遇到的坑"><a href="#那些严重拖慢做题进度的题以及遇到的坑" class="headerlink" title="那些严重拖慢做题进度的题以及遇到的坑"></a>那些严重拖慢做题进度的题以及遇到的坑</h1><p>杭电204X</p>
<h2 id="进制转换"><a href="#进制转换" class="headerlink" title="进制转换"></a>进制转换</h2><p>这一题的关键是用字符数组来捕捉每一位的数，因为存在十进制以上的数，还要捕捉特定的那些字母，对于其他的就可以用数字和字符的关系来进行转换。</p>
<p>还有一个细节就是负号，取余的时候用正数会比较方便，因此最后不要忘记负号。</p>
<p>关键代码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">switch (n % r)</div><div class="line">&#123;</div><div class="line">    case 10:</div><div class="line">        a[i] = &apos;A&apos;;</div><div class="line">        break;</div><div class="line">    case 11:</div><div class="line">        a[i] = &apos;B&apos;;</div><div class="line">        break;</div><div class="line">    case 12:</div><div class="line">        a[i] = &apos;C&apos;;</div><div class="line">        break;</div><div class="line">    case 13:</div><div class="line">        a[i] = &apos;D&apos;;</div><div class="line">        break;</div><div class="line">    case 14:</div><div class="line">        a[i] = &apos;E&apos;;</div><div class="line">        break;</div><div class="line">    case 15:</div><div class="line">        a[i] = &apos;F&apos;;</div><div class="line">        break;</div><div class="line">    default:</div><div class="line">        a[i] = &apos;0&apos; + n % r;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>遇到的坑：</p>
<ul>
<li>一开始没有加default，为了图方便最后一个case没加break，后来加了default之后没意识到…狠狠坑了我一把</li>
<li>做题的时候思路要清晰，需要对余数大于小于10进行分类讨论，一个default就直接包含其中一种情况了</li>
<li>当感觉难以下手的时候不妨在纸上写下自己的思路！！！</li>
</ul>
<h2 id="一张桌子吃饭的并查集问题"><a href="#一张桌子吃饭的并查集问题" class="headerlink" title="一张桌子吃饭的并查集问题"></a>一张桌子吃饭的并查集问题</h2><p>并查集这个其实不是很难，只要把模板套上去就可以了</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">int fa[maxn];  // fa是father的简写</div><div class="line"></div><div class="line">void init(int n)</div><div class="line">&#123;</div><div class="line">    for (int i = 0; i &lt; n; ++i)</div><div class="line">    &#123;</div><div class="line">        fa[i] = i;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int find(int n)</div><div class="line">&#123;</div><div class="line">    if (fa[n] == n)</div><div class="line">        return n;</div><div class="line">    return fa[n] = find(fa[n]);  // 赋值语句的前半句可以减少递归次数从而提高程序的效率</div><div class="line">&#125;</div><div class="line"></div><div class="line">void connect(int x, int y)</div><div class="line">&#123;</div><div class="line">    x = fa[x];</div><div class="line">    y = fa[y];</div><div class="line">    if (x != y)</div><div class="line">        fa[x] = y;  // 连接的是头头</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>遇到的坑：</p>
<ul>
<li>要注意的是实际问题的编号很可能不是从0开始的，所以init函数循环可能要改一下才符合实际情况，今天就是这个地方一直WA</li>
</ul>
<h2 id="输出杨辉三角"><a href="#输出杨辉三角" class="headerlink" title="输出杨辉三角"></a>输出杨辉三角</h2><p>这一题其实并不难，我是用杨辉三角的每个数的公式做的，也就是用到了排列组合的性质，然而排列组合的公式挖了个大坑</p>
<p>组合数公式：Cn,m = An,m / m!</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">if (n - m &lt; m)</div><div class="line">    m = n - m;</div><div class="line">for (int i = 0; i &lt; m; ++i)</div><div class="line">    rst *= (m - i);</div><div class="line">for (int j = 2; j &lt;= m; ++j)</div><div class="line">    rst /= m;</div><div class="line">retrurn rst;</div></pre></td></tr></table></figure>
<p>遇到的坑：</p>
<ul>
<li>主要是忘记公式了，再加上思维很混乱于是就一直都有问题</li>
</ul>
<h2 id="求集合中的A-B"><a href="#求集合中的A-B" class="headerlink" title="求集合中的A-B"></a>求集合中的A-B</h2><p>其实挺简单的，多来几个循环进行判断就可以了</p>
<p>遇到的坑：</p>
<ul>
<li>初始化的两个输入值中可以有一个为零的，所以在输入的判断中就不能直接<code>while (scanf(&quot;%d %d&quot;, &amp;n, &amp;m) != EOF &amp;&amp; m &amp;&amp; n)</code>了，而是要在while中进行break:<code>if (n == 0 &amp;&amp; m == 0) break;</code></li>
</ul>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>今天做题的效率十分低下，就是因为出现了这些大大小小的问题，希望以后做题的时候思路可以更清晰一点，不要再在这些坑爹的问题上耽误时间了，吃一堑长一智！</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[求最大公约数和最小公倍数]]></title>
      <url>https://blog.patrickcty.cc/2017/02/15/%E6%B1%82%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0%E5%92%8C%E6%9C%80%E5%B0%8F%E5%85%AC%E5%80%8D%E6%95%B0/</url>
      <content type="html"><![CDATA[<h1 id="求最大公约数和最小公倍数"><a href="#求最大公约数和最小公倍数" class="headerlink" title="求最大公约数和最小公倍数"></a>求最大公约数和最小公倍数</h1><h2 id="最小公倍数"><a href="#最小公倍数" class="headerlink" title="最小公倍数"></a>最小公倍数</h2><p>公式：</p>
<blockquote>
<p>最小公倍数 = x * y / x与y的最大公约数</p>
</blockquote>
<h2 id="最大公约数"><a href="#最大公约数" class="headerlink" title="最大公约数"></a>最大公约数</h2><ul>
<li>辗转相除法：用大的数除以小的数，如果有余数，就用小的数除以余数，一直到没有余数，这时候当前的除数也就是上一轮的余数为最大公约数</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">if (x &lt; y)</div><div class="line">    swap(x, y);</div><div class="line">while (x % y)</div><div class="line">&#123;</div><div class="line">    c = x % y;</div><div class="line">    x = y;</div><div class="line">    y = c;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>最大公约数就是y， 也就是除尽之前的余数</p>
<ul>
<li>相减法：用大的数减小的数，如果相减后的结果不和小的数相同，则继续相减，得到相同的结果就是余数</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">if (x &lt; y)</div><div class="line">    swap(x, y);</div><div class="line">while (x - y != y)</div><div class="line">&#123;</div><div class="line">    c = x - y;</div><div class="line">    x = y;</div><div class="line">    y = c;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>最大公约数就是y</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ACM输入输出套路汇总]]></title>
      <url>https://blog.patrickcty.cc/2017/02/15/ACM%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E5%A5%97%E8%B7%AF%E6%B1%87%E6%80%BB/</url>
      <content type="html"><![CDATA[<h1 id="ACM输入输出套路汇总"><a href="#ACM输入输出套路汇总" class="headerlink" title="ACM输入输出套路汇总"></a>ACM输入输出套路汇总</h1><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>注意输入不要死套模板！比如刚才有道题输入可以有一个为零，但是我套模板就卡了半天！一直没发现错误！</p>
<h3 id="输入中有一-多个n来指示输入的情况"><a href="#输入中有一-多个n来指示输入的情况" class="headerlink" title="输入中有一/多个n来指示输入的情况"></a>输入中有一/多个n来指示输入的情况</h3><ul>
<li>输入的都是数字/字符</li>
</ul>
<p>这个就比较简单了，直接两层循环读取输入的数字</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">scanf(&quot;%d&quot;, &amp;n);</div><div class="line">while (n--)</div><div class="line">&#123;</div><div class="line">    scanf(&quot;%d&quot;, &amp;num);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>后面读取的是字符串</li>
</ul>
<p>这个地方容易遇到坑，字符串一直都是比较麻烦的</p>
<p>1.用gets()读取字符串<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">char a[1000];</div><div class="line">gets(a);</div></pre></td></tr></table></figure></p>
<p>2.用scanf读取字符串<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">char a[1000];</div><div class="line">scanf(&quot;%s&quot;, a);</div></pre></td></tr></table></figure></p>
<p>但是注意两者都是有坑的！</p>
<p>gets()输入的时候如果前面还有输入的就要加一个getchar()<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">scanf(&quot;%d&quot;, &amp;n);</div><div class="line">getchar()</div><div class="line">char a[1000];</div><div class="line">gets(a);</div></pre></td></tr></table></figure></p>
<p>原因是gets会把前面scanf输入没有读取的换行符也当做需要的读取进去，这就导致读取的内容“少一行”，所以要用一个getchar来吸收这个换行符。<br>还有就是gets由于<a href="http://www.cnblogs.com/ngnetboy/archive/2012/11/26/2789410.html" target="_blank" rel="external">存在安全隐患</a>被废除了，用倒是可以用，不过官方不推荐，所以最好不要用，不过gets比fgets方便一些，竞赛的话，看个人喜好了。</p>
<p>关于fgets</p>
<blockquote>
<p>定义函数：har <em> fgets(char </em> s, int size, FILE * stream);</p>
<p>函数说明：fgets()用来从参数stream 所指的文件内读入字符并存到参数s 所指的内存空间, 直到出现换行字符、读到文件尾或是已读了<strong><em>size-1</em></strong> 个字符为止, 最后会加上NULL 作为字符串结束.</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">char a[1000];</div><div class="line">fgets(a, 1000, stdin);  // 这家伙把换行符也读进去了，输出的时候就不用加换行符了</div></pre></td></tr></table></figure>
<p>scanf输入的时候字符串中<strong>不能有空格</strong>！不然就会在空格处停下来，有空格的就不考虑scanf.</p>
<h3 id="没有设有特定的提示输入来告诉你输入多少"><a href="#没有设有特定的提示输入来告诉你输入多少" class="headerlink" title="没有设有特定的提示输入来告诉你输入多少"></a>没有设有特定的提示输入来告诉你输入多少</h3><p>这时候就要用输入函数的返回值来判断了</p>
<ul>
<li>scanf</li>
</ul>
<p>当输入成功的时候，返回值是输入成功的数字的大小，部分成功也会返回成功个数。而发生错误或者end of file则返回EOF</p>
<p>所以可以这样判断:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">while (scanf(&quot;%d %d&quot;, &amp;m, &amp;n) == 2 &amp;&amp; m &amp;&amp; n)</div><div class="line">&#123;&#125;</div></pre></td></tr></table></figure></p>
<p>或者:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">while (scanf(&quot;%d&quot;, &amp;m) != EOF)</div><div class="line">&#123;&#125;</div></pre></td></tr></table></figure></p>
<p>上面这种也可以简写为:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">while (~scanf(&quot;%d&quot;, &amp;m))</div><div class="line">&#123;&#125;</div></pre></td></tr></table></figure></p>
<ul>
<li>gets/fgets</li>
</ul>
<p>这两个函数在成功的时候都会返回相应的指针，也就是数组名， 而失败就会返回NULL，因此可以:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">while (gets(a))</div><div class="line">&#123;&#125;</div></pre></td></tr></table></figure></p>
<p>输入的话基本就是这两大类了，其中根据不同的情况再做改变，比如说输入0结束，这就很简单了，稍微改一下就可以了。</p>
<h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>输出的话主要是要判断是不是最后一个元素，像一行输出特别多组数据的时候特别要注意，因为涉及到换行。</p>
<p>下面这种就是缩短了循环，把特殊情况独立出来了，这样就避免了判断，当然判断i是不是等于n-1也是可以的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">for (int i = 0; i &lt; n - 1; ++i)</div><div class="line">&#123;</div><div class="line">    printf(&quot;%d &quot;, a[i]);</div><div class="line">&#125;</div><div class="line">printf(&quot;%d\n&quot;, a[n - 1]);</div></pre></td></tr></table></figure></p>
<p>还有的是最后一行不留换行等等，一定要看清楚题！不然很容易踩坑！暂时想到这么多，后面还有新的再补充！</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[《偷影子的人》]]></title>
      <url>https://blog.patrickcty.cc/2017/02/13/%E3%80%8A%E5%81%B7%E5%BD%B1%E5%AD%90%E7%9A%84%E4%BA%BA%E3%80%8B/</url>
      <content type="html"><![CDATA[<h1 id="《偷影子的人》"><a href="#《偷影子的人》" class="headerlink" title="《偷影子的人》"></a>《偷影子的人》</h1><h2 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;和《追风筝的人》《摆渡人》一样，这本书也是十分畅销的欧美小说，并且这三本还被并列提到，但是我感觉无论是从内从还是题材上，《追风筝的人》比起另外两本都更胜一筹。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;男主小时候就是一个普通的小孩子，但是他有一个神奇的能力——与影子交谈。总感觉“我”是一个十分奇怪的人，可能也是因为爸爸的离开，以及进入新的环境。能力让“我”结识了吕克，伊凡，克蕾尔…并且用这个能力帮助了其他人。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;比较有趣的一个人物就是伊凡了，伊凡一开始是学校的一名保安，他在操场上解救了受罚打扫操场的“我”，伊凡也是“我”用能力第一个帮助的人，也是“我”的第一个朋友。不过伊凡这个人还是有一定的疑点，每次伊凡与“我”见面的时候都只有两个人，而且那次工具房的火灾中，也只有“我”记得伊凡的存在，最可疑的是，最后在凌晨三四点那个时候，伊凡出现在了学校操场，那个老地方，来引导我走出内心的彷徨。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;回想这些疑点，我比较同意伊凡是“我”内心的投影这个说法，他总是在“我”最迷茫最无助的时候出现，特别是最后一次的时间，出现得太奇怪，不过也不排除是作者为了填坑而强行增加的段落…</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;另外一个比较重要的人物就是苏菲了，苏菲是“我”的前女朋友，但是由于“我”不能承受起这份感情，他们分手了，苏菲在分手的时候的那张字条上的话真的十分让人触动。也是那么体贴，让我想起了你的那番话，即使分手了，他们还是好朋友，还能一起吃饭，一起玩耍。而我呢，我却选择不再联系，相忘于江湖。这应该也不是一件坏事吧，正是因为爱的深沉才难以放下，正是因为距离，所以做朋友，就更难找到一直保持关系的理由。就像苏菲最后找到了吕克，我希望你也能找到爱你的，让你快快乐乐的那个人。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;最后克雷尔这个结局还是很棒的，不过我总感觉很扯，这么多年的默默守候，这么多年的等待一个杳无音讯的人，甚至是小时候的一个人。尽管小说中刻画得很美好，不过现实中真的会这么顺利么？不过小说毕竟是小说，能给予我们温暖与感动不就够了么？</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;看的时候，看完都感觉心里暖暖的，这样的小说，似乎也不错呢～–</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[《Heidi》]]></title>
      <url>https://blog.patrickcty.cc/2017/02/11/%E3%80%8AHeidi%E3%80%8B/</url>
      <content type="html"><![CDATA[<h1 id="《海蒂和爷爷》"><a href="#《海蒂和爷爷》" class="headerlink" title="《海蒂和爷爷》"></a>《海蒂和爷爷》</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;每个人的心都是一座孤岛，但是就是有这样的存在，能连接孤岛，但相反也同样会有这样的存在让孤岛更加封闭。而海蒂无疑是前一种。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;其实本片的原名是《Heidi》，我也觉得这样更为合理，因为Heidi就是那个连接孤岛的人。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我觉得海蒂某种方面上和《摆渡人》中的迪伦是有点相像的，她们都是那么善良，那么乐观。即使被姨妈抛弃到爷爷这里，即使一开始不被爷爷待见，他还是留在爷爷身边。就这样，她慢慢打开了爷爷的心，让爷爷一开始的想把她送走，到照顾她，为她打造椅子，疼爱她…</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当海蒂与爷爷以及朋友彼得过着无拘无束的日子的时候，把海蒂抛弃的姑妈又把海蒂骗到豪宅里去了，为了可怜的赏钱。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在豪宅中，海蒂认识了因为疾病而不能走路的大小姐克拉拉，海蒂的出现，让克拉拉的笑容重新洋溢在脸上。但是她并不快乐，她被困在豪宅中了，即使学会了礼仪，即使学会认字，即使吃的住的都是最好的，他都不快乐，她是一只鸟，属于天空，而豪宅就像一只笼子，将她困住了，思念成疾的她甚至梦游在门口眺望着故乡。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;最后她终于回到了故乡，并且之后也把克拉拉“带”了过来，在一次出去游玩的过程中，因为轮椅被彼得推下悬崖，克拉拉不能移动，但是看到了飞着的蝴蝶，克拉拉奇迹般的站了起来，并且又能再次再地上行走。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这部电影人物比较多，但是又完全不显得杂乱，即使只出现过很少的时间的任务，性格特点也十分凸显。</p>
<h2 id="人物"><a href="#人物" class="headerlink" title="人物"></a>人物</h2><h3 id="海蒂"><a href="#海蒂" class="headerlink" title="海蒂"></a>海蒂</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;她善良，包容，她愿意把自己的一半午餐分给皮特让他不打山羊。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;她率真向往自由，电影开始的时候，就有海蒂脱下她一身的洋装，在草丛中奔跑～这个与她回到爷爷身边的时候的情景相互呼应～</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;她关心他人，在豪宅的时候，“偷面包”的情景多次出现，而她并不是因为没见过世面，而是记住了彼得的奶奶不能吃硬面包于是想把她吃的软面包送给她，真是一个体贴的孩子~</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;她打开了爷爷的内心，打开了克拉拉的内心。他的笑容如冬日的卵样，夏日的清风，直击人心。她用她的笑容默默地改变这个世界，所幸世界没有改变她的笑容～</p>
<h3 id="爷爷"><a href="#爷爷" class="headerlink" title="爷爷"></a>爷爷</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;爷爷是一个被人误解的人，他独自生活在山上，一直被人当怪物看待。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;但事实上爷爷是一个很棒的人，他勤恳，善良，理解他人。他只是封闭了他的心灵，我想这很有可能是他的老伴还有女儿女婿的过世所造成的。所幸海蒂出现了，海蒂打开了他封闭的内心，他愿意接纳他人了，甚至还变得风趣了，最后看他撩克拉拉的奶奶的时候，真的好暖啊哈哈。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;最令我印象深刻的有两处，第一处是海蒂听彼得说爷爷杀了人之后的怀疑，但是爷爷只是镇定地说了下面这句话：</p>
<blockquote>
<p>人们就喜欢谈论些坏的东西，你需要自己做判断，相信自己的眼睛和耳朵还是相信那些流言？</p>
</blockquote>
<p><img src="https://okdkbnczs.qnssl.com/image/movies/heidiC1.png" alt="爷爷的话1"><br><img src="https://okdkbnczs.qnssl.com/image/movies/heidiC.png" alt="爷爷的话2"></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;另一处就是当彼得把克拉拉的轮椅推下悬崖之后爷爷察觉到了对彼得说话的场景，真的是帅爆了！！！</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;爷爷忍受着寂寞，无视着他人的眼光，封闭地过着，但幸运的是他遇到了海蒂，他放开了他自己。真的很让人欣慰。</p>
<h3 id="克拉拉"><a href="#克拉拉" class="headerlink" title="克拉拉"></a>克拉拉</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;克拉拉不是脾气古怪，只是太孤独了。没有同龄人的陪伴，没有了父母的陪伴，被困在家里，造就了她内心的忧郁。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;因此当她知道海蒂要离开时的，是那么的失态，那么的耍大小姐脾气，她的痛苦，恐怕只有她自己才能理解。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;不过正是有了海蒂，她的痛苦才会被隐藏，而海蒂走的时候，那种绝望，又再次扑面而来。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;其实她是一个性格很好的人，她也有着温暖的笑容~</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;而在阿尔卑斯山上，看到那一望无际的美景，看到飞舞的蝴蝶，再加上友情，她的伤终于痊愈，她也勇敢的站了起来，终于她克服了内心的障碍，重新开始了行走~</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;丢掉了轮椅的同时，锁着内心的锁链也丢掉了，她完全打开了内心，她重新找到了自我~</p>
<h3 id="彼得"><a href="#彼得" class="headerlink" title="彼得"></a>彼得</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这是一个比较矛盾的人，他偷吃海蒂的东西，他在海蒂被姨妈强行接走的时候不向爷爷说情况，他把克拉拉的轮椅推下悬崖。他性格古怪，嫉妒，自我。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;不过从背后我们可以看出彼得并不是那么一无是处，至少他陪海蒂度过了那么多个白天，他是海蒂的好朋友。而我相信海蒂一定也让他改变了不少~</p>
<h3 id="姨妈"><a href="#姨妈" class="headerlink" title="姨妈"></a>姨妈</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;姨妈出现的场景虽然不多，但总是很狼狈，放下海蒂之后狼狈地逃走，狼狈地被爷爷赶走，狼狈地抓着海蒂逃走233。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;她为了一点钱不惜让海蒂，爷爷，彼得得生活都改变了。自私，不负责任，两面三刀的形象跃然于荧幕之上。</p>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;影片真的让人觉得暖暖的~最后的结局也十分棒~情节也比较紧凑，真的有好多可以回味的内容~</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;还有克拉拉妹子也很漂亮呀~</p>
<p><img src="https://okdkbnczs.qnssl.com/image/movies/heidi2.jpg" alt="原来妹子这么高～"></p>
<h2 id="评分"><a href="#评分" class="headerlink" title="评分"></a>评分</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9/10。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;剧情丰富，情节温暖，人物性格丰满，好片~</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[《摆渡人》]]></title>
      <url>https://blog.patrickcty.cc/2017/02/11/%E3%80%8A%E6%91%86%E6%B8%A1%E4%BA%BA%E3%80%8B/</url>
      <content type="html"><![CDATA[<h1 id="《摆渡人》"><a href="#《摆渡人》" class="headerlink" title="《摆渡人》"></a>《摆渡人》</h1><h2 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;一开听到这个名字我是拒绝的，原因就是那个之前微博上大家都喜欢，然而网友却不认可的事情。还好这本同名的书与这件事并没有任何关系。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;其实一开始的剧情是十分吸引人的，本来以为是一个普通的看望父亲的旅途，没想到火车出现了事故，本来以为只女主一个人活下来了，没想到她原来是在这次事故中丧生了。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;前半本书讲述的就是迪伦和崔斯坦一起穿越荒原的过程。从一开始的怀疑，到之后的初步了解，然后是深厚友谊，最后终于变成了爱情。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这一部分描写得还不错，关系也发展得很合理，不过我总觉得这部分很乏味。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;但是当最后的时候，迪伦的感情开始爆发，他们又不得不分开。比较巧妙的一点就是迪伦的情绪会直接影响到环境，特别是最后在湖面上那一部分，表现得尤其到位。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;第二部分是穿过荒原以后，后来穿过荒原之后迪伦坚定了对崔斯坦的感情，并且决定做出一个没有人成功的行动：返回荒原，寻找崔斯坦。她独自克服重重困难以后他们终于又汇合了，最后他们一起回到了现实世界，并且崔斯坦也终于成为了一个真正的人。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这本书最大的亮点就是人物心理活动的描写，人物的情感一直十分到位。不过我还是喜欢剧情类的……所以这本书看起来有时候会很乏味……</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;比较有趣的就是崔斯坦这个人，摆渡了无数人，那些人在意的却只是他们自己，迪伦是第一个也是唯一一个关心在意他的人。或许正是迪伦改变了他，他不再只是一个冷冰冰的摆渡机器，迪伦让他成为了一个真正的人。他也是一个会犹豫迟疑的人类，而不是无畏万能的摆渡人。正是因为这样，他才和迪伦一起，回到人类世界，成为真正的人类。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;很幸运再这么久的孤独之后，他终于能遇到对的人，在渡别人的时候把自己也渡了。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;最后的结尾也很有意思，迪伦在隧道里被救治，而崔斯坦并不在身边，但当她被抬出隧道，崔斯坦在那个同样的地方等着她。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;爱情真好。(脸红</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[《嫌疑人X的献身》]]></title>
      <url>https://blog.patrickcty.cc/2017/02/09/%E3%80%8A%E5%AB%8C%E7%96%91%E4%BA%BAX%E7%9A%84%E7%8C%AE%E8%BA%AB%E3%80%8B/</url>
      <content type="html"><![CDATA[<h1 id="《嫌疑人X的献身》"><a href="#《嫌疑人X的献身》" class="headerlink" title="《嫌疑人X的献身》"></a>《嫌疑人X的献身》</h1><h2 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这是我在kindle上看完的第一本书，我个人是对悬疑比较抗拒的，但是因为在家实在太无聊以及坑爹的网速于是我就点开了沉睡在kindle中的这本书。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这本书的悬疑还是到位的，在叙述中一直隐藏了一个真相直到书的最后才揭露。故事情节不就不多说了，人物以及人物背后的情感才是给我留下来最深印象的部分。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这本书里有三种爱情。</p>
<h3 id="死缠烂打不择手段的爱情——富坚"><a href="#死缠烂打不择手段的爱情——富坚" class="headerlink" title="死缠烂打不择手段的爱情——富坚"></a>死缠烂打不择手段的爱情——富坚</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;他就是造成这一切的男人，在失业之后，他的本性暴露：一个暴躁无能的男人，用暴力来发泄自己的无能。即使分手之后依旧死缠烂打，用流氓的行为来纠缠，最后不慎被靖子勒死。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这种人，可以说是最差劲的男友的模板，也是最令人厌恶的前男友的模板。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;现在对家庭暴力以及离婚后的纠缠不休似乎并没有什么好的处理方法，特别是国内，家庭暴力一般都被大事化小小事化了，如果法律的武器能严惩这类人那就再好不过啦，不过这中间似乎还有很长的路要走呢。</p>
<h3 id="隐忍不逾界的爱情——工藤"><a href="#隐忍不逾界的爱情——工藤" class="headerlink" title="隐忍不逾界的爱情——工藤"></a>隐忍不逾界的爱情——工藤</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;工藤先生对靖子的帮助不可谓不大，当靖子还在酒廊的时候他就照顾她的生意，即使开房的要求被拒绝了也还是继续像朋友那样。当得知靖子已经结婚后就保持了距离，不再私下单独见面。当发现富坚对她不好之后更是出钱请律师帮她摆脱渣男。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;容易让人诟病的是上面的这些事都是在他有妻子女儿的时候做的，书里的说法是因为妻子重病，工藤为了寻找心里的慰藉而去酒廊。这也算是在情理之中吧。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在得知靖子的前老公死亡后，他出现了，并且想和靖子在一起。为什么不早点时间找到靖子呢？因为他有家室，因为他没有理由再去找她。而现在，他的妻子已亡，孩子也不在他的身边，再加上她的前男友刚刚去世，这是一个绝佳的时机。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;对于这样一个君子，叫君子应该不为过，我是十分佩服的，如果他和靖子在一起了我想她一定会幸福的。</p>
<h3 id="大爱无言——石神"><a href="#大爱无言——石神" class="headerlink" title="大爱无言——石神"></a>大爱无言——石神</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;而石神的爱情则是本书中最为壮烈又深沉的，因此我把它放在了最后。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;爱情的起源是因为靖子“救了”他，当他感觉人生灰暗没有意义准备上吊自杀的时候，靖子出现了，点亮了他灰暗的人生。但是他并没有采取什么特别的行动，只是默默注意着靖子，并且每次在靖子在的时候去照顾他的生意。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;而当靖子杀死富坚之后他又帮靖子处理尸体，出谋划策甚至为了他不惜杀死另一个人来帮她掩盖真相。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;即使知道靖子喜欢的不是自己，即使知道靖子对工藤的感觉，即使他吃了醋，给工藤发了骚扰信息（也许只是为了掩盖案情？），但最后石神还是牺牲了自己想让靖子和工藤一起过上幸福的生活。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;究竟是什么让他付出了这么多？我想一是因为靖子对于他来说就是救赎，再加上他的那个做出自认为最合理行为的性格，于是就有了为了自己的救赎把自己都搭进去的行为。尽管小说中把石神描述得很神：天才数学家，设局把警察耍得团团转，十分冷静…但是书中从细节还流露出了他也是一个有血有肉的人，他也会因为有喜欢的人而在意外表，他也会吃醋。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这份爱情是如此的厚重，又如此的隐蔽，只是这爱情可惜结局并不好。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;而靖子无疑是一个幸运又不幸的人，他被这么多人爱，没没有得到自己的爱情。</p>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;珍爱生命，远离渣男…</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[《断背山》]]></title>
      <url>https://blog.patrickcty.cc/2017/02/09/%E3%80%8A%E6%96%AD%E8%83%8C%E5%B1%B1%E3%80%8B/</url>
      <content type="html"><![CDATA[<h1 id="《断背山》"><a href="#《断背山》" class="headerlink" title="《断背山》"></a>《断背山》</h1><h2 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这是一部经典的电影，我说这个，相信很多人会笑。尽管题材比较敏感，但不可否认的是这确实是一部好电影。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;看之前我还很忐忑，因为害怕可能有些不适应以及那些敏感的原因，不过在看的时候，我真的完全抛开这些了。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这是一部很克制的电影，特别是男主的爱情表现上很克制，但是他们的爱情却并不克制。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;他们相遇于断背山，相爱与断背山，可以说断背山就是他们爱情的象征。但是由于工作结束了，他们不得不分开，从此多年杳无音讯。多年后他们又相见了…</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;剧情这部分<a href="https://zh.m.wikipedia.org/zh-cn/%E6%96%B7%E8%83%8C%E5%B1%B1" target="_blank" rel="external">维基百科</a>写得很好，一些细节也指出来了。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;他们的爱情是如此克制，因为世俗不让他们光明正大的那么做，同性恋被人仇恨，他们也都有家室。他们是最苦的异地恋，每年只有很少的时间可以相见。也因为这个，恩尼斯也与妻子离婚，后来谈的女友也没有走到一起，而杰克过的生活也不幸福，每天都被思念所困扰。最后杰克在轮胎打气的时候死亡，恩尼斯也一个人过着生活…</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;杰克是那个主动的一个，也是将两人的煎熬表现出来的那一个，两人的开始也是因为杰克不知觉的行为。而恩尼斯是那个默默忍受，很少言语的那个，尽管他没有明确表达出他的感情，不过我相信他承受的一定不比杰克少。最让我触动的是他们最后一次见面在断背山的那一幕场景，这是他们相遇的第二十个年头，生活太残酷了，他们也不得不低头，杰克梦想中的那种美好的日子也是再也没办法继续了…</p>
<p><img src="https://okdkbnczs.qnssl.com/image/movies/brokebackM.png" alt="嗯哼"></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;结尾的场景也十分动人，借用维基百科的段落：</p>
<blockquote>
<p>最后，艾尼斯的大女儿驱车来访，邀请他参加她的婚礼，艾尼斯默然，忆起杰克，过往的沧海桑田，对比女儿走向婚姻的结局，是喜悦，更多的是怅然。一直未能尽人父关怀的艾尼斯答应了女儿的邀约，女儿展露笑容。目送女儿走后，艾尼斯打开衣柜，柜门钉著一张断背山的明信片，两件老衬衣挂在明信片下，但此回艾尼斯已将自己的衬衣“包裹”住杰克了。艾尼斯蹙眉，轻声呢喃：“杰克，我发誓……”。</p>
</blockquote>
<h2 id="评分"><a href="#评分" class="headerlink" title="评分"></a>评分</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9/10。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;经典不必多说，情节很让人触动。即使是很久之前看的电影，但是一回想起来，脑海还是会被忧伤占据。</p>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;说实话，写这一篇的时候我也不知道说些什么，因此内容也比较凌乱。那种悲伤的感觉，很难表达出来。所以就只能这样了。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[一加三T使用体验]]></title>
      <url>https://blog.patrickcty.cc/2017/02/05/%E4%B8%80%E5%8A%A0%E4%B8%89T%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/</url>
      <content type="html"><![CDATA[<h1 id="一加3T使用体验"><a href="#一加3T使用体验" class="headerlink" title="一加3T使用体验"></a>一加3T使用体验</h1><h2 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;前段时间，手机屏幕摔坏了，因为早就有了换手机的想法，于是也就不打算继续用下去了。但是当时市面上一直没有比较完美的手机，各方面比较符合我要求的就是S7 Edge了，然而由于是比较旧的机型，用的还是Micro USB接口，再就是在京东上看到的那些屏幕品控差的一些评价，最重要的是国行依旧昂贵的价格，让我放弃了。港行还有其他渠道的话，虽然比较便宜，但是因为这是一个大坑，我也不敢去趟，于是还是放弃了。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;后来我想到，既然一部手机不能满足我的要求，那两部呢？最后锁定在了一加3T和荣耀8。一加的拍照和性能，荣耀的小屏和吊炸天的玻璃后壳，如果两者可以合并那简直是完美啊。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;再考虑到拍照和Google的方便程度之后，我先选择的是一加3T。到现在为止已经挺长时间了，这么长的深度使用时间，再加上家里没网，正好只能安心写了233。</p>
<h2 id="总体评价"><a href="#总体评价" class="headerlink" title="总体评价"></a>总体评价</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;是一部好手机，性能没的说，日常使用也很舒服，只是有一些小毛病让人感觉系统优化还需要继续加油。</p>
<h2 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h2><ul>
<li>屏幕</li>
</ul>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这一代饱受诟病的就是这块5.5’1080P的Amoled屏幕，很多人都说辣眼睛，然而我可是用过pro5的5.7’1080P的Amoled屏幕，所以其实并没有网上说的那么不好。只不过自动亮度真的是太坑爹了，每次都特别亮，还是得手动调…还是pro5自动亮度优化得好。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;然后经过大米的推荐我开了屏幕的sRGB模式，第一次感觉非常偏黄，不过用久了感觉就是之前的屏幕加上了一个LOMO风格滤镜，现在用久了看起来完全没有什么不适应的感觉。</p>
<ul>
<li>外观</li>
</ul>
<p><img src="https://okdkbnczs.qnssl.com/image/others358033289.jpg" alt="俯视图"></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;说实话，外观比照片好看多了，到手之前我觉得背后的摄像头十分的丑，其实拿到手之后感觉整体真的很棒：后壳的弧度，以及简约的设计，硬朗的边角不至于下滑，那个摄像头的外观反而不重要了。而且这次耳机的开孔在下面！终于移到下面来了！之前在上面总感觉十分的违和…而且这次放到下面使得机身顶部没有开孔！一体化！</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;另外就是纳米注塑条真的很优雅，不知道比pro5的金属三段式高到哪里去了，pro5后盖的那些裂纹真的太操蛋了，而且超级容易裂开…从此金属三段式一生黑…</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;一个槽点就是音量键和电源键十分松动，而且似乎还不是个例…不过我还可以接受吧…</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;颜色也挺好！自从用了pro5的黑色前面板之后，就不想再用白色面板了，因为现在的黑边设计，总是会有一些黑边出现，和白色就有些冲突，而黑色就完全一体化了～因此在枪灰和薄荷金之间果断选择了枪灰。这个颜色还挺不错的，类似于淡淡的咖啡色，看起来也很大气。（要是有黑色就最好了。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;另外值得一提的就是三段式按键，真的很方便啊，之前切换静音状态总是要好几步动作，现在直接一按就方便了～</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;home键也挺好用，尽管不能按压但是完全不会不习惯啊，倒是另外两个按键感觉一般，还是魅族的mBack要方便的多！至少完全避免了误触的问题！而且一个键的功能非要放在三个键上感觉还是有点太不简洁了。不过好的地方是按键可以自定义长按，双击的功能，这一点还是很好的～</p>
<ul>
<li>软件</li>
</ul>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;直接内置Google Service真的不能更爽！安了Play市场之后就自动激活了！之前用的pro5 Play市场一直是只能看不能下载软件的…终于可以更新shadowsocks了。(逃</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;氢OS的简约真的很棒，很多地方都接近于原生，这一点是我最喜欢的！</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;天气的app简直不能再棒！整体简约风格真的美极了！而且没有乱七八糟的资讯什么的功能！没有莫名其妙消不掉的红点！最棒的是重力感应的天气动画！炫酷到爆啊有木有！</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;氢视窗也很棒，把功能整合到一起了，桌面再也不需要小部件了～尽管现在用的频率还不多，不过真的很方便啊！</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;不过还是有不少地方用起来不爽的，比如把图标拖到文件夹里面去，有多困难只有用过的知道…还有桌面的背景，为什么其他界面都是毛玻璃啊，为什么图标一行只有三个…之前用的Nova，但是看在氢视窗于是就没有换回Nova，不过这图标排列还是需要我去适应orz。还有就是一些细节比如多任务如果锁定了就不能手动把这一个删掉，而之前flyme，MIUI都可以直接删掉的…另一个比较严重的问题就是误触，真的好容易误触…动不动就点不动了…原来是误触。之前还没意识到这个的严重性，现在我只想心疼一下用Z11和S7e的兄弟233。要吐槽的是滚动截图…虽然支持这个功能，不过只是单纯的把图拼起来…中间还有黑边…</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;细节的问题还有不少，不过类似原生真的太棒了，权限管理也够用，至少不用让我下载第三方的控制后台什么的app了！现在升了7.0终于摆脱了pro5万年的5.1~233。</p>
<ul>
<li>拍照</li>
</ul>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;尽管排的比较少，不过现在感觉还不错，不过可能是心理作用233，毕竟评测的都给这个摄像头很高的分233。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;之前用3T拍过夜景，感觉用了假的光学防抖…拍出来的照片都发虚…看着论坛上面对这个吐槽也很大…而且还是相位对焦…似乎是单色温闪光灯…这种地方就不要节省成本啦！</p>
<ul>
<li>续航</li>
</ul>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;并不尿崩并不尿崩并不尿崩！3400mAh感觉真的不错啊，有时候用一天还剩20%的电，至少现在对我来说是不错的。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Dash闪充的话，比起魅族的mCharge还是差了一点，明显感觉充电比pro5慢，但是可能是电池容量的问题，不过24W还是比20W高一些的。Dash这个速度已经很棒了，至少比某果万年的5V1A要好得多233。</p>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;似乎没有什么可说的了，总体而言一加3T使用体验真的很棒，因为我不玩游戏所以性能对我来说绝对是大大的够用的，也没有卡顿，2799的价格也能接受，比某爱国品牌还是要好一些滴。只是官方的保护壳太贵了orz，虽然材料看起来真的很棒啊。还在纠结要不要入一个中233。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;期待一加能做的越来越好把，氢OS也不要发展成ADUI那样就好了，继续轻且有趣～继续Never Settle！</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[那些很棒的设计]]></title>
      <url>https://blog.patrickcty.cc/2017/02/03/%E9%82%A3%E4%BA%9B%E5%BE%88%E6%A3%92%E7%9A%84%E8%AE%BE%E8%AE%A1/</url>
      <content type="html"><![CDATA[<h1 id="那些很棒的设计"><a href="#那些很棒的设计" class="headerlink" title="那些很棒的设计"></a>那些很棒的设计</h1><ul>
<li>大的盒装牛奶</li>
</ul>
<p><img src="https://okdkbnczs.qnssl.com/image/others/milk.jpg" alt="大的盒装牛奶"></p>
<p>就像标签上描述的一样，当你打开盖子的时候，也就顺便把牛奶打开了，不然徒手打开锡纸可没那么简单。</p>
<ul>
<li>麦斯威尔的速溶咖啡</li>
</ul>
<p><img src="https://okdkbnczs.qnssl.com/image/others/coffee.jpg" alt="麦斯威尔的速溶咖啡"></p>
<p>左侧那个热熔的区域，让撕开变成一个更简单的事情了，尽管从另一边也可以比较轻松地撕开，不过这个设计，让人眼前一亮～</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[我们各自乘风破浪]]></title>
      <url>https://blog.patrickcty.cc/2017/02/02/%E6%88%91%E4%BB%AC%E5%90%84%E8%87%AA%E4%B9%98%E9%A3%8E%E7%A0%B4%E6%B5%AA/</url>
      <content type="html"><![CDATA[<h1 id="我们各自乘风破浪"><a href="#我们各自乘风破浪" class="headerlink" title="我们各自乘风破浪"></a>我们各自乘风破浪</h1><h2 id="《乘风破浪》"><a href="#《乘风破浪》" class="headerlink" title="《乘风破浪》"></a>《乘风破浪》</h2><blockquote>
<p>我欲乘风破浪，踏遍黄沙海洋</p>
<p>与其误会一场，也要不负勇往</p>
<p>–Jam《七月上》</p>
</blockquote>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当我看到这个电影名的时候，这两句歌词马上跃然于我的脑海。看过电影之后才发现无论是旋律还是歌词都十分符合电影的意境。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;乘风破浪，和后会无期一样，这个名字也十分有韩寒特色，也是一个一看到就让人有无穷联想的名字。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这是一个关于兄弟义气的故事，这是一个好故事，老套，却又别有韵味。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;今天我们四人帮再度聚首，也是一年中难得的所有人都能到的时候了。四个不同的城市，各自有各自所忙的事情，各自有各自的生活，再也不是学校中的友谊就是一切了。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;不过总算是聚到了一起，大家还是熟悉的大家。之后，一起去看了《乘风破浪》。</p>
<p><img src="https://okdkbnczs.qnssl.com/image/diary1828665460.jpg" alt="老图1！～"></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;说实话，对这部片子我的第一印象是不是很好的，因为一是看了预告片感觉整部片子拍的乱七八糟，二是之前乘风破浪歌歌词内容所引起的争议，不过因为其他两部新年档的似乎更烂，于是决定看这一部，不过看完之后整体感觉剧情并不像预告片那样乱，整体还是挺好的。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;内容比较老套，感觉和《夏洛特烦恼》以及《重返二十岁》有点类似。主角在一次带着父亲飙车的过程中被火车撞到，昏迷之际穿越回了父亲年轻时的那个年代。认识到了父亲的讲义气，好的一面，并且和父亲一起出生入死。直到见证了自己的出生才终于醒来，回到了正常的时间。结局设置的还不错，留下了充分的想象空间。</p>
<blockquote>
<p>究竟他是不是真正穿越回了过去？<br>那个手势他的父亲还记得。但是如果真的穿越了父亲一定会知道关于阿浪的事情。没穿越的话孩子又是谁照顾的？</p>
</blockquote>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;想象空间留的比较足所以bug并不能算是真的存在。</p>
<h2 id="人物"><a href="#人物" class="headerlink" title="人物"></a>人物</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;另外，和《后会无期》一样，这部电影的人物也都十分活灵活现。讲义气，固执，神经大条，中二，热血，靠谱的阿正。傻乎乎，同样讲义气，中二的六一。以及不合群，默默离开的小马。温柔，在背后支撑着阿正的小花。还有同样讲义气，逗逼的阿浪。这一个个鲜活又平凡的人物构成了一个平凡又精彩的故事，即使出场比较少的小马，人物表现得也十分出彩。可以说人物是本片的一大亮点。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;但是一个人是可能改变的，阿浪原本眼中的老爸，就和年轻时时的形象完全不同，这种反差，也值得人仔细思考。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;得一友如阿正，得一妻如阿花，人生之幸运也。</p>
<h2 id="评分"><a href="#评分" class="headerlink" title="评分"></a>评分</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;总分8/10。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;人物9/10，情节7/10，结尾9/10。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;人物刻画以及结尾都比较出彩，情节还是比较老套。和兄弟一起看还是比较爽的。</p>
<h2 id="回归标题"><a href="#回归标题" class="headerlink" title="回归标题"></a>回归标题</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这次聚会之后，下次再次见面又不知道时何时，今后大家只怕会是更加忙碌，更难再见面了，但现在的我们也不是以前那个懵懂的少年了，我们有自己的目标，有自己的想法，有自己的安排，有属于自己的未来，这样也就够了。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;能抽出一天的时间，大家一起闲扯，一起打牌，一起看电影，一起吃饭，岂不也是人生一件快乐的事情？嗯哼？</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;以后嘛，就要各自乘风破浪咯～</p>
<p><img src="https://okdkbnczs.qnssl.com/image/diary495860735.jpg" alt="老图2～"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[《一个叫欧维的男人决定去死》]]></title>
      <url>https://blog.patrickcty.cc/2017/02/01/%E3%80%8A%E4%B8%80%E4%B8%AA%E5%8F%AB%E6%AC%A7%E7%BB%B4%E7%9A%84%E7%94%B7%E4%BA%BA%E5%86%B3%E5%AE%9A%E5%8E%BB%E6%AD%BB%E3%80%8B/</url>
      <content type="html"><![CDATA[<h1 id="《一个叫欧维的男人决定去死》"><a href="#《一个叫欧维的男人决定去死》" class="headerlink" title="《一个叫欧维的男人决定去死》"></a>《一个叫欧维的男人决定去死》</h1><h2 id="简短感受"><a href="#简短感受" class="headerlink" title="简短感受"></a>简短感受</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;受过伤的人，会把自己的内心封闭起来，会披上一身的刺。只有再次遇到愿意拥抱这身刺的人，他才会愿意暴露自己的脆弱，拿出自己的真心。受过伤的，是欧维，而去拥抱的，是帕维娜。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;欧维是一个命途多舛的人，在很小的时候，母亲就过世了，这时候父亲抚平了他内心的伤痕；而当他成为青年，父亲因为看到欧维的成绩太高兴以至于没注意被火车撞死，索尼娅的出现，帮助她走过了阴霾区，他们也过上了一段时间的幸福生活；然而之后的大巴车坠落山坡的事故中，索尼娅肚子中的孩子不幸夭折，索尼娅也被困在了轮椅上，后来索尼娅被癌症带走，无人可以抚慰他让他封闭了内心，成为了“刺头”；最后击垮他的是他被工厂辞退，他决定去死。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;说实话，欧维确实是一个令人烦的邻居，大事小事都要去管，并且态度很差，但是其实大家都知道他是一个深深爱着社区的人，是一个刀子嘴豆腐心的人，他也给了邻居们还有其他人很多帮助，而这些帮助也多次挽救了他的性命。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;故事是以欧维的几次自杀为分割来进行的，中间穿插着对过去的回忆，在临死之际，在不清醒的时候，回想着过去那些开心或者痛苦的时刻。邻居帕维纳的出现，阻止了好几次欧维的自杀，同是也慢慢的让欧维逐渐脱去了他那尖锐的外衣。欧维在她的“指导”下，去修了邻居的暖气，去教她开车，去接纳一个同志，去和其他人一起巡视，去收养那只受伤的猫……最后也是在帕维纳的帮助下，欧维说出了他的悲伤的过去，也让他得到了解脱，他开始找到了久违的幸福。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;而穿插的回忆，也很值得一提。从以前开始，欧维就是责任感，正义感爆棚却又十分木讷的人。尽管不善言语，尽管脾气很糟，但是他的行为，依旧为他带来了索尼娅，而索尼娅也让他成为了一个幸福的人，一个不那么暴躁的人。让我印象比较深刻的是，当知道他即将有孩子，他马上着手去做一个摇篮；为了妻子能好好进出教室，他冒着雨连夜做出了辅导。我想，正是因为看到了欧维的这些优点，索尼娅才决定把自己的一生托付给这个木讷的男人吧。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;生活中的灾难和变故真的很能摧残一个人，爱情也能让一个人变得更好。我突然想到了五月天《好好》中的那句歌词“我们都要把自己照顾好，好到遗憾无法打扰”，无论怎样，我们都要把自己照顾好，这样我们才能以最好的状态迎接我们的“索尼娅”以及“帕维纳”——那些能走进你心的人。</p>
<h2 id="评分"><a href="#评分" class="headerlink" title="评分"></a>评分</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;8.5/10。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;叙述方法很棒，感情很到位，只是比较琐碎，也是适合在安静的时候观看，最后也会有一种如沐春风的感觉～</p>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;平淡生活中的爱情才是真正的爱情。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;那些遗憾，就让它随风而去吧～</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[写完Java无聊于是就有了这样的一篇安利]]></title>
      <url>https://blog.patrickcty.cc/2017/02/01/%E5%86%99%E5%AE%8CJava%E6%97%A0%E8%81%8A%E4%BA%8E%E6%98%AF%E5%B0%B1%E6%9C%89%E4%BA%86%E8%BF%99%E6%A0%B7%E7%9A%84%E4%B8%80%E7%AF%87%E5%AE%89%E5%88%A9/</url>
      <content type="html"><![CDATA[<h3 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h3><p>必然是ubuntu</p>
<ul>
<li>可定制性高(好吧说白了我对linux了解不多，主要是因为好看方便才用的)</li>
<li>对开发者友好：安装什么模块之类的一行代码就解决了</li>
<li>流畅：谁用谁知道</li>
<li>逼格高</li>
</ul>
<p>当然我不玩游戏</p>
<p>当然我也想体验macOS</p>
<p>如果是习惯windows又想试试linux，装Deepin吧</p>
<h3 id="编程工具"><a href="#编程工具" class="headerlink" title="编程工具"></a>编程工具</h3><p>我选IDE</p>
<ul>
<li>相比编辑器，一体成型，不用折腾</li>
<li>看着顺眼（Vim的logo太丑，逃</li>
<li>不会用Vim这些…</li>
<li>学习成本相比Vim这些低太多了…</li>
<li>集成了数据库，控制台，终端…真心方便</li>
</ul>
<h3 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h3><p>必然Chrome</p>
<ul>
<li>火狐一天崩溃一百次的flash</li>
<li>丰富的插件</li>
<li>logo很漂亮…</li>
<li>Google光环加成</li>
<li>就是很吃内存…</li>
</ul>
<h3 id="笔记工具"><a href="#笔记工具" class="headerlink" title="笔记工具"></a>笔记工具</h3><p>有道云笔记</p>
<ul>
<li>一开始在支持MarkDown之前我还是无感的</li>
<li>然后这个MarkDown编辑器真的好用到没边</li>
<li>MarkDown是个好东西，不知道？自己学，五分钟上手</li>
<li>就是没有Linux的桌面版，然后网页版很捉急分屏的时候全部挤在一坨了…</li>
</ul>
<h3 id="暂时就想到这些了"><a href="#暂时就想到这些了" class="headerlink" title="暂时就想到这些了"></a>暂时就想到这些了</h3><p>以后有想法再更新吧</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[《无间道》]]></title>
      <url>https://blog.patrickcty.cc/2017/02/01/%E3%80%8A%E6%97%A0%E9%97%B4%E9%81%93%E3%80%8B/</url>
      <content type="html"><![CDATA[<h1 id="《无间道》"><a href="#《无间道》" class="headerlink" title="《无间道》"></a>《无间道》</h1><h2 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这部电影的名字一直如雷贯耳，最近翻豆瓣电影的时候在很高的排名看到了这部电影，并且小米请了梁朝伟做了代言人，于是就决定去看了～</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;说实话，这部片子不太适合我，因为这种让我看得提心吊胆的片子我看的时候总会感觉不太舒服233。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这部片子足够精彩更足够刺激，两个组织以及两个卧底的相互博弈。片中梁朝伟和刘德华的演技都足够好，都演出了作为卧底的在那种时刻内心的焦虑等等。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;比较遗憾的是梁朝伟在电影中最终还是死了，说实话我挺喜欢这个角色的～</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;电影还探讨了一些其他方面的内容，关于正义与邪恶的选择。做卧底真的是一件很难的事情，特别是在黑社会中，随时都可能有生命危险，而且还会被几乎所有人误解，如果不是有一颗坚强的心脏以及出色的硬件条件，一个人是很容易走上不归路的。我庆幸阿仁也就是梁朝伟饰演的角色在剧中做到了，尽管如此艰难，在那十年中，他坚持住了自己，他依然信奉着绝对的正义，但也是因为这个，他最后被另一个卧底给击毙了。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;而刘德华饰演的刘警官，则是改邪归正，在黄警官死后，他的观点改变了，他亲手了结了他曾经的boss，浪子回头，千金不换。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;又想起了《湄公河行动》里面的那些军人，正是有了他们的奉献，我们才能过上如此安逸的生活，向他们送上我由衷的感谢！</p>
<h2 id="评分"><a href="#评分" class="headerlink" title="评分"></a>评分</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9/10。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;情节内涵都好的没话说，只是不是很适合我233。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[《我是传奇》]]></title>
      <url>https://blog.patrickcty.cc/2017/02/01/%E3%80%8A%E6%88%91%E6%98%AF%E4%BC%A0%E5%A5%87%E3%80%8B/</url>
      <content type="html"><![CDATA[<h1 id="《我是传奇》"><a href="#《我是传奇》" class="headerlink" title="《我是传奇》"></a>《我是传奇》</h1><h2 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;看到是威尔史密斯主演的就很有看的欲望～本以为是一部末日片结果没想到是一部丧尸片233。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;故事的背景是人类研制出了一种抗癌的药物，可以治疗癌症，但是没想到这种药物产生了一种严重的病毒，很多生物都被感染了变成了“夜魔”——攻击性很强，头脑退化，见不得阳光的类似于丧尸的状态。这种病毒通过空气传播，只有很少人可以免疫，而主角是纽约唯一一个幸存者。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;故事情节比较普通，就是主角一人生活在纽约，白天搜寻幸存者打猎，晚上待在屋子里防止被夜魔袭击并且在地下室研制治疗的药物。有一些槽点就是明明已经过去了三年，结果屋子里还是有电…而且水和粮食都比较充足…这种只有一个人在的世界最大的问题不就应该是这种生活用品么…不过好在也不是很影响…倒是没有这些反而不太好发展剧情了233。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;白天就是描述主角的日常活动，晚上则是插叙病毒刚到来时候与家人分别到家人死去的过程。其中主角神边那只狗狗真的很通人性啊～可惜在一次事故中主角中了夜魔的圈套狗狗也在这次中被感染不得不被杀死了，主角也因此想自杀，好在最后女主及时赶来救了他。女主在一个多小时的时候才出现233。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;最后的结局倒是挺值得一提，这部电影有两个结局。我个人比较喜欢第一个：原来那些夜魔袭击主角是因为夜魔头的女朋友被男主抓到实验室做实验了，男主把她还回去之后他们就停止攻击了，这时候药物应该成功研制出来了，男主和女主也踏上了旅途。比较引人思考的是夜魔居然有相当的智慧，而且女主所说的幸存者大本营也不知道是否存在，两人带着希望上路了。这两个地方都留下了充分的想象空间。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;另外一个结局就是当夜魔攻破了玻璃门的时候，男主和他们同归于尽了，女主就带着研制成功的药去到了大本营。看了这个结局之后再看第一个结局就更加觉得第一个结局比较有深意了，不过都挺不错的～</p>
<h2 id="评分"><a href="#评分" class="headerlink" title="评分"></a>评分</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7/10。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;一开始看的时候室友都不在…一个人看有点方233。故事中规中矩，第一个结局比较有深意。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[我的2016(2)——碎碎念]]></title>
      <url>https://blog.patrickcty.cc/2017/02/01/%E6%88%91%E7%9A%842016(2)%E2%80%94%E2%80%94%E7%A2%8E%E7%A2%8E%E5%BF%B5/</url>
      <content type="html"><![CDATA[<h1 id="我的2016-2-——碎碎念"><a href="#我的2016-2-——碎碎念" class="headerlink" title="我的2016(2)——碎碎念"></a>我的2016(2)——碎碎念</h1><p>嘿嘿这些回忆是来自空间，上一篇是来自朋友圈，后面就重心放在朋友圈了所以空间更新就少了。</p>
<p>不过这一篇逻辑有点混乱呢，就当我碎碎念吧～</p>
<h2 id="依然总是会不由自主地会想起过去的时光"><a href="#依然总是会不由自主地会想起过去的时光" class="headerlink" title="依然总是会不由自主地会想起过去的时光"></a>依然总是会不由自主地会想起过去的时光</h2><h2 id="看了超级讽刺的英剧黑镜"><a href="#看了超级讽刺的英剧黑镜" class="headerlink" title="看了超级讽刺的英剧黑镜"></a>看了超级讽刺的英剧黑镜</h2><h2 id="还是一直很受不了身边的某些人（也许不知不觉自己也被别人讨厌了"><a href="#还是一直很受不了身边的某些人（也许不知不觉自己也被别人讨厌了" class="headerlink" title="还是一直很受不了身边的某些人（也许不知不觉自己也被别人讨厌了"></a>还是一直很受不了身边的某些人（也许不知不觉自己也被别人讨厌了</h2><h2 id="经常会因为一个人而感到孤单，很多时候需要别人的陪伴"><a href="#经常会因为一个人而感到孤单，很多时候需要别人的陪伴" class="headerlink" title="经常会因为一个人而感到孤单，很多时候需要别人的陪伴"></a>经常会因为一个人而感到孤单，很多时候需要别人的陪伴</h2><h2 id="大一上又被语文英语拯救了"><a href="#大一上又被语文英语拯救了" class="headerlink" title="大一上又被语文英语拯救了"></a>大一上又被语文英语拯救了</h2><h2 id="回家那一天和男神还有傻吊一起夜游武汉，才发现原来的大汉口也只是这么小"><a href="#回家那一天和男神还有傻吊一起夜游武汉，才发现原来的大汉口也只是这么小" class="headerlink" title="回家那一天和男神还有傻吊一起夜游武汉，才发现原来的大汉口也只是这么小"></a>回家那一天和男神还有傻吊一起夜游武汉，才发现原来的大汉口也只是这么小</h2><h2 id="以前从未如此想过家，回家的感觉是没办法用言语来形容的"><a href="#以前从未如此想过家，回家的感觉是没办法用言语来形容的" class="headerlink" title="以前从未如此想过家，回家的感觉是没办法用言语来形容的"></a>以前从未如此想过家，回家的感觉是没办法用言语来形容的</h2><h2 id="终于等到了龙族四"><a href="#终于等到了龙族四" class="headerlink" title="终于等到了龙族四"></a>终于等到了龙族四</h2><h2 id="回学校看了老师，熊楚原他们还上讲台装了一波逼"><a href="#回学校看了老师，熊楚原他们还上讲台装了一波逼" class="headerlink" title="回学校看了老师，熊楚原他们还上讲台装了一波逼"></a>回学校看了老师，熊楚原他们还上讲台装了一波逼</h2><h2 id="经历了春晚的各种抢红包摇红包，然而并没有搞到什么钱233，敬业福也没搞到"><a href="#经历了春晚的各种抢红包摇红包，然而并没有搞到什么钱233，敬业福也没搞到" class="headerlink" title="经历了春晚的各种抢红包摇红包，然而并没有搞到什么钱233，敬业福也没搞到"></a>经历了春晚的各种抢红包摇红包，然而并没有搞到什么钱233，敬业福也没搞到</h2><h2 id="无数个对鞭炮深恶痛绝的回家的早上"><a href="#无数个对鞭炮深恶痛绝的回家的早上" class="headerlink" title="无数个对鞭炮深恶痛绝的回家的早上"></a>无数个对鞭炮深恶痛绝的回家的早上</h2><h2 id="引力波刷爆了屏幕"><a href="#引力波刷爆了屏幕" class="headerlink" title="引力波刷爆了屏幕"></a>引力波刷爆了屏幕</h2><h2 id="那些疯狂秀恩爱的日子"><a href="#那些疯狂秀恩爱的日子" class="headerlink" title="那些疯狂秀恩爱的日子"></a>那些疯狂秀恩爱的日子</h2><h2 id="男神轩的情人节视频十分令人印象深刻"><a href="#男神轩的情人节视频十分令人印象深刻" class="headerlink" title="男神轩的情人节视频十分令人印象深刻"></a>男神轩的情人节视频十分令人印象深刻</h2><h2 id="那些和傻吊一起泡咖啡馆的日子"><a href="#那些和傻吊一起泡咖啡馆的日子" class="headerlink" title="那些和傻吊一起泡咖啡馆的日子"></a>那些和傻吊一起泡咖啡馆的日子</h2><h2 id="闪电侠追到了第三季"><a href="#闪电侠追到了第三季" class="headerlink" title="闪电侠追到了第三季"></a>闪电侠追到了第三季</h2><h2 id="喜欢上了柴犬"><a href="#喜欢上了柴犬" class="headerlink" title="喜欢上了柴犬"></a>喜欢上了柴犬</h2><h2 id="傻吊的小说开始连载"><a href="#傻吊的小说开始连载" class="headerlink" title="傻吊的小说开始连载"></a>傻吊的小说开始连载</h2><h2 id="那些黎锐晚上开车的日子"><a href="#那些黎锐晚上开车的日子" class="headerlink" title="那些黎锐晚上开车的日子"></a>那些黎锐晚上开车的日子</h2><h2 id="暑假依然疯狂想家"><a href="#暑假依然疯狂想家" class="headerlink" title="暑假依然疯狂想家"></a>暑假依然疯狂想家</h2><h2 id="恩阿拉斯加犬也很可爱"><a href="#恩阿拉斯加犬也很可爱" class="headerlink" title="恩阿拉斯加犬也很可爱"></a>恩阿拉斯加犬也很可爱</h2><h2 id="去李文菁家蹭吃蹭喝～荷花亭小分队再聚首"><a href="#去李文菁家蹭吃蹭喝～荷花亭小分队再聚首" class="headerlink" title="去李文菁家蹭吃蹭喝～荷花亭小分队再聚首"></a>去李文菁家蹭吃蹭喝～荷花亭小分队再聚首</h2><h2 id="发现一中有人进暨大，简直惊喜（虽然现在都没有找到他们的联系方式"><a href="#发现一中有人进暨大，简直惊喜（虽然现在都没有找到他们的联系方式" class="headerlink" title="发现一中有人进暨大，简直惊喜（虽然现在都没有找到他们的联系方式"></a>发现一中有人进暨大，简直惊喜（虽然现在都没有找到他们的联系方式</h2><h2 id="不一样的19岁，或许是因为身边的你们吧"><a href="#不一样的19岁，或许是因为身边的你们吧" class="headerlink" title="不一样的19岁，或许是因为身边的你们吧"></a>不一样的19岁，或许是因为身边的你们吧</h2><h2 id="也曾有过一段时间出bug出到飞起的时候"><a href="#也曾有过一段时间出bug出到飞起的时候" class="headerlink" title="也曾有过一段时间出bug出到飞起的时候"></a>也曾有过一段时间出bug出到飞起的时候</h2><h2 id="恩从9月卖鞋卖到11月…卖东西真的是一件烦人的事情"><a href="#恩从9月卖鞋卖到11月…卖东西真的是一件烦人的事情" class="headerlink" title="恩从9月卖鞋卖到11月…卖东西真的是一件烦人的事情"></a>恩从9月卖鞋卖到11月…卖东西真的是一件烦人的事情</h2><h2 id="荧光夜跑，还是很嗨的"><a href="#荧光夜跑，还是很嗨的" class="headerlink" title="荧光夜跑，还是很嗨的"></a>荧光夜跑，还是很嗨的</h2><h2 id="姐姐终于结婚了，一晃这么多年过去了，还记得小时候抢遥控器的时候"><a href="#姐姐终于结婚了，一晃这么多年过去了，还记得小时候抢遥控器的时候" class="headerlink" title="姐姐终于结婚了，一晃这么多年过去了，还记得小时候抢遥控器的时候"></a>姐姐终于结婚了，一晃这么多年过去了，还记得小时候抢遥控器的时候</h2><h2 id="看了海贼王第一部在中国上映的电影，说实话很失望"><a href="#看了海贼王第一部在中国上映的电影，说实话很失望" class="headerlink" title="看了海贼王第一部在中国上映的电影，说实话很失望"></a>看了海贼王第一部在中国上映的电影，说实话很失望</h2><h2 id="再一次献血～"><a href="#再一次献血～" class="headerlink" title="再一次献血～"></a>再一次献血～</h2><h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>这一篇是对上一篇的补充，基于空间。</p>
<p>另外勤发说说真是个好习惯233，至少总结的时候知道这一年发生了什么～恩以后不会删除以前发的内容啦。</p>
<p>写到这里的时候电脑突然没电了，吓死了还好没关机…</p>
<p>相信看到这里的都是真爱。(逃</p>
<h2 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h2><p>感谢在我最低落的时候疏导我的类俺就！</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[我的2016]]></title>
      <url>https://blog.patrickcty.cc/2017/02/01/%E6%88%91%E7%9A%842016/</url>
      <content type="html"><![CDATA[<h1 id="我的2016"><a href="#我的2016" class="headerlink" title="我的2016"></a>我的2016</h1><h2 id="谈了一场不算久的三年前的恋爱"><a href="#谈了一场不算久的三年前的恋爱" class="headerlink" title="谈了一场不算久的三年前的恋爱"></a>谈了一场不算久的三年前的恋爱</h2><h2 id="和队友一起学习了Python"><a href="#和队友一起学习了Python" class="headerlink" title="和队友一起学习了Python"></a>和<a href="http://www.ecohnoch.cn/" target="_blank" rel="external">队友</a>一起学习了Python</h2><h2 id="狂热的喜欢了一段时间的球鞋，后来卖了好几个月的鞋子之后退烧了"><a href="#狂热的喜欢了一段时间的球鞋，后来卖了好几个月的鞋子之后退烧了" class="headerlink" title="狂热的喜欢了一段时间的球鞋，后来卖了好几个月的鞋子之后退烧了"></a>狂热的喜欢了一段时间的球鞋，后来卖了好几个月的鞋子之后退烧了</h2><h2 id="和队友一起搞了一阵子公众号，写了好几篇推文～"><a href="#和队友一起搞了一阵子公众号，写了好几篇推文～" class="headerlink" title="和队友一起搞了一阵子公众号，写了好几篇推文～"></a>和<a href="http://www.ecohnoch.cn/" target="_blank" rel="external">队友</a>一起搞了一阵子公众号，写了好几篇推文～</h2><h2 id="在家看到了几场大雪"><a href="#在家看到了几场大雪" class="headerlink" title="在家看到了几场大雪"></a>在家看到了几场大雪</h2><h2 id="经历了广州的回南天"><a href="#经历了广州的回南天" class="headerlink" title="经历了广州的回南天"></a>经历了广州的回南天</h2><h2 id="见证了科比，石佛，加内特的退役"><a href="#见证了科比，石佛，加内特的退役" class="headerlink" title="见证了科比，石佛，加内特的退役"></a>见证了科比，石佛，加内特的退役</h2><h2 id="养过一学期的猫"><a href="#养过一学期的猫" class="headerlink" title="养过一学期的猫"></a>养过一学期的猫</h2><h2 id="跑了620-48KM的路"><a href="#跑了620-48KM的路" class="headerlink" title="跑了620.48KM的路"></a>跑了620.48KM的路</h2><h2 id="看完了很长的《大秦帝国》"><a href="#看完了很长的《大秦帝国》" class="headerlink" title="看完了很长的《大秦帝国》"></a>看完了很长的《大秦帝国》</h2><h2 id="见证了两个三比一逆转，总决赛输了真的很可惜"><a href="#见证了两个三比一逆转，总决赛输了真的很可惜" class="headerlink" title="见证了两个三比一逆转，总决赛输了真的很可惜"></a>见证了两个三比一逆转，总决赛输了真的很可惜</h2><h2 id="用手按碎了手机屏幕并且就这样用了好久"><a href="#用手按碎了手机屏幕并且就这样用了好久" class="headerlink" title="用手按碎了手机屏幕并且就这样用了好久"></a>用手按碎了手机屏幕并且就这样用了好久</h2><h2 id="跟着宿舍结伴成长计划出去玩了好几次"><a href="#跟着宿舍结伴成长计划出去玩了好几次" class="headerlink" title="跟着宿舍结伴成长计划出去玩了好几次"></a>跟着宿舍结伴成长计划出去玩了好几次</h2><h2 id="开始搞Flask，跟着志平的代码编写官网后台"><a href="#开始搞Flask，跟着志平的代码编写官网后台" class="headerlink" title="开始搞Flask，跟着志平的代码编写官网后台"></a>开始搞Flask，跟着志平的代码编写官网后台</h2><h2 id="看了好几部发人深省的电影"><a href="#看了好几部发人深省的电影" class="headerlink" title="看了好几部发人深省的电影"></a>看了好几部发人深省的电影</h2><h2 id="去了云南旅游，自己安排"><a href="#去了云南旅游，自己安排" class="headerlink" title="去了云南旅游，自己安排"></a>去了云南旅游，自己安排</h2><h2 id="和家人去了上海"><a href="#和家人去了上海" class="headerlink" title="和家人去了上海"></a>和家人去了上海</h2><h2 id="成为了网研的会长，和网研的大家一起忙着网研的事情"><a href="#成为了网研的会长，和网研的大家一起忙着网研的事情" class="headerlink" title="成为了网研的会长，和网研的大家一起忙着网研的事情"></a>成为了网研的会长，和网研的大家一起忙着网研的事情</h2><h2 id="部署官网用了好久，最后在大家的帮助下解决了问题"><a href="#部署官网用了好久，最后在大家的帮助下解决了问题" class="headerlink" title="部署官网用了好久，最后在大家的帮助下解决了问题"></a>部署官网用了好久，最后在大家的帮助下解决了问题</h2><h2 id="经历了windows的莫名用不了键盘转向了Linux"><a href="#经历了windows的莫名用不了键盘转向了Linux" class="headerlink" title="经历了windows的莫名用不了键盘转向了Linux"></a>经历了windows的莫名用不了键盘转向了Linux</h2><h2 id="又一年新生的到来"><a href="#又一年新生的到来" class="headerlink" title="又一年新生的到来"></a>又一年新生的到来</h2><h2 id="十一回家了"><a href="#十一回家了" class="headerlink" title="十一回家了"></a>十一回家了</h2><h2 id="尽力了一场狂热的装系统"><a href="#尽力了一场狂热的装系统" class="headerlink" title="尽力了一场狂热的装系统"></a>尽力了一场狂热的装系统</h2><h2 id="入了硬件的坑，内存，显示屏，SSD，机械键盘"><a href="#入了硬件的坑，内存，显示屏，SSD，机械键盘" class="headerlink" title="入了硬件的坑，内存，显示屏，SSD，机械键盘"></a>入了硬件的坑，内存，显示屏，SSD，机械键盘</h2><h2 id="因为SSD装系统的操作错误，不得不重新安装系统配置环境"><a href="#因为SSD装系统的操作错误，不得不重新安装系统配置环境" class="headerlink" title="因为SSD装系统的操作错误，不得不重新安装系统配置环境"></a>因为SSD装系统的操作错误，不得不重新安装系统配置环境</h2><h2 id="学习了爬虫的基本知识"><a href="#学习了爬虫的基本知识" class="headerlink" title="学习了爬虫的基本知识"></a>学习了爬虫的基本知识</h2><h2 id="看了几场发布会，被小米MIX惊艳到了"><a href="#看了几场发布会，被小米MIX惊艳到了" class="headerlink" title="看了几场发布会，被小米MIX惊艳到了"></a>看了几场发布会，被小米MIX惊艳到了</h2><h2 id="买了爱乐压，进了手冲咖啡的坑"><a href="#买了爱乐压，进了手冲咖啡的坑" class="headerlink" title="买了爱乐压，进了手冲咖啡的坑"></a>买了爱乐压，进了手冲咖啡的坑</h2><h2 id="经历了母校暨大的110校庆"><a href="#经历了母校暨大的110校庆" class="headerlink" title="经历了母校暨大的110校庆"></a>经历了母校暨大的110校庆</h2><h2 id="班赛的参与者变成了旁观者，目送着他们拿了冠军"><a href="#班赛的参与者变成了旁观者，目送着他们拿了冠军" class="headerlink" title="班赛的参与者变成了旁观者，目送着他们拿了冠军"></a>班赛的参与者变成了旁观者，目送着他们拿了冠军</h2><h2 id="失败了好几次的域名备案终于通过了"><a href="#失败了好几次的域名备案终于通过了" class="headerlink" title="失败了好几次的域名备案终于通过了"></a>失败了好几次的域名备案终于通过了</h2><h2 id="新一轮的复习周"><a href="#新一轮的复习周" class="headerlink" title="新一轮的复习周"></a>新一轮的复习周</h2><h2 id="重新爱上了篮球"><a href="#重新爱上了篮球" class="headerlink" title="重新爱上了篮球"></a>重新爱上了篮球</h2><h2 id="做起来了自己的个人博客，尽管是使用模板～"><a href="#做起来了自己的个人博客，尽管是使用模板～" class="headerlink" title="做起来了自己的个人博客，尽管是使用模板～"></a>做起来了自己的个人博客，尽管是使用模板～</h2><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>感谢所有陪我走过这一年的大家～</p>
<p>这一年发生了很多事情，心态也转变了好多次，至于现在是对是错，还是未知，拭目以待吧！</p>
<p>2017也要继续加油哦！</p>
<p>P.S.一定有很多精彩的瞬间被我遗漏了，想到再补充。</p>
<h2 id="最后的最后，感谢曾一直以来陪着我的你，没有你我的2016就是不完整的。"><a href="#最后的最后，感谢曾一直以来陪着我的你，没有你我的2016就是不完整的。" class="headerlink" title="最后的最后，感谢曾一直以来陪着我的你，没有你我的2016就是不完整的。"></a>最后的最后，感谢曾一直以来陪着我的你，没有你我的2016就是不完整的。</h2>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[铁人三项第一天]]></title>
      <url>https://blog.patrickcty.cc/2017/02/01/%E9%93%81%E4%BA%BA%E4%B8%89%E9%A1%B9%E7%AC%AC%E4%B8%80%E5%A4%A9/</url>
      <content type="html"><![CDATA[<h2 id="wireshark"><a href="#wireshark" class="headerlink" title="wireshark"></a>wireshark</h2><p>检测流量抓包并且强大的过滤器可以让你比较方便得到所需信息。</p>
<ul>
<li>==ip.src== xxx.xxx.xxx.xxx这个是用来根据请求者ip过滤</li>
<li>==ip.dst==是目标ip</li>
<li>还有==http.method==用来根据http方法过滤</li>
<li>==http/tcp/ftp==是指定查看http/tcp/ftp</li>
<li>以及==http contains XXX==查看http相关的XXX</li>
<li>等等</li>
</ul>
<p>根据这些来查看相应的请求包来获得信息</p>
<h2 id="虚拟机服务器"><a href="#虚拟机服务器" class="headerlink" title="虚拟机服务器"></a>虚拟机服务器</h2><p>已经配好了的服务器虚拟机，浓浓的上世纪的UI</p>
<p>不过改成桥接模式之后秘制连不上网…</p>
<h2 id="中国菜刀"><a href="#中国菜刀" class="headerlink" title="中国菜刀"></a>中国菜刀</h2><p>一个黑客相关的软件，在今天的课上主要是运行植入的木马，然后不断通过木马POST内容来进行文件查看文件下载等黑客行为。</p>
<h2 id="御剑"><a href="#御剑" class="headerlink" title="御剑"></a>御剑</h2><p>一个用来暴力破解扫描文件目录的软件…真的十分暴力…</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[铁人三项第二天]]></title>
      <url>https://blog.patrickcty.cc/2017/02/01/%E9%93%81%E4%BA%BA%E4%B8%89%E9%A1%B9%E7%AC%AC%E4%BA%8C%E5%A4%A9/</url>
      <content type="html"><![CDATA[<p>这周六过得跟周三一样…      ——题记</p>
<h2 id="今天上午主要介绍了破解WordPress"><a href="#今天上午主要介绍了破解WordPress" class="headerlink" title="今天上午主要介绍了破解WordPress"></a>今天上午主要介绍了破解WordPress</h2><h3 id="漏洞所在点"><a href="#漏洞所在点" class="headerlink" title="漏洞所在点"></a>漏洞所在点</h3><ul>
<li>登录提示太明显，会准确的提示到用户名错误还是密码错误</li>
<li>没有验证码</li>
<li>没有对多次错误登录的ip做限制</li>
</ul>
<h3 id="破解方法"><a href="#破解方法" class="headerlink" title="破解方法"></a>破解方法</h3><ul>
<li>暴力破解</li>
</ul>
<h3 id="使用工具"><a href="#使用工具" class="headerlink" title="使用工具"></a>使用工具</h3><ul>
<li>BurpSuite（暴力破解的工具</li>
<li>中国菜刀（破解登入植入木马后的操作</li>
<li>御剑（扫描网站目录</li>
</ul>
<h3 id="使用BurpSuite"><a href="#使用BurpSuite" class="headerlink" title="使用BurpSuite"></a>使用BurpSuite</h3><p>见pdf文档</p>
<h4 id="需要注意的是"><a href="#需要注意的是" class="headerlink" title="需要注意的是"></a>需要注意的是</h4><ul>
<li>拦截功能不仅仅是在提交密码的时候有用</li>
<li>只要提交表单都可以，通过BurpSuite来修改一些选项使得提交可以顺利进行</li>
<li>记得最后要关闭拦截</li>
</ul>
<h3 id="使用中国菜刀"><a href="#使用中国菜刀" class="headerlink" title="使用中国菜刀"></a>使用中国菜刀</h3><p>这兄弟不是第一次见面了</p>
<h4 id="一些特点"><a href="#一些特点" class="headerlink" title="一些特点"></a>一些特点</h4><ul>
<li>中国菜刀需要配合一句话木马一起使用</li>
<li>也就是说一般包含eval关键字</li>
<li>读取中国菜刀关键字一般要根据他的字段名进行解码，比如php的在木马中就指明了base64解码</li>
<li>一般中国菜刀是通过木马进行POST请求对服务器进行操作，因此POST是关键字</li>
<li>而且一般内容都是由-&gt;|    |&lt;-包围的</li>
</ul>
<h3 id="关于御剑"><a href="#关于御剑" class="headerlink" title="关于御剑"></a>关于御剑</h3><ul>
<li>通过这个可以找到网站隐藏的入口</li>
<li>有时候可以得到意外的信息（信息泄露</li>
<li>原来原理也是通过字典进行碰撞，怪不得有那么多404</li>
<li>抓包过滤的关键词也是http contains 404</li>
</ul>
<h3 id="另外"><a href="#另外" class="headerlink" title="另外"></a>另外</h3><ul>
<li>TCP流中有两种颜色，分别对应了用户端和服务器端，可以通过两种颜色数据量的大小来判断动作，比如服务器端发回的比较多就很可能是在下载</li>
<li>信息分析的本质就是根据抓的包，通过黑客行为的关键字来进行过滤，再对过滤出来的包进行分析</li>
<li>FTP传输都是明文，也就是说可以通过FTP的抓包来得到FTP的用户名和密码</li>
<li>FTP的230表示所求的文件操作已成功，很多时候可以用来快速找出用户名和密码</li>
<li>TCP是三次握手，用户-&gt;服务器-&gt;用户，如果最后一项缺少的话服务器端就会陷入等待，这也是黑客攻击的一种手段</li>
<li>302也就是跳转，很多时候可以判断登陆成功</li>
</ul>
<h3 id="提高安全意识"><a href="#提高安全意识" class="headerlink" title="提高安全意识"></a>提高安全意识</h3><ul>
<li>密码要设置的复杂一些，不然有经验的黑客很容易破解</li>
<li>网站一定要设置验证码，可以有效防止这种暴力破解以及一定程度上防止机器人</li>
<li>错误提示尽量模糊一些</li>
<li>多次登陆不成功最好也有一定的处理</li>
</ul>
<h2 id="下午主要是做了一些题目"><a href="#下午主要是做了一些题目" class="headerlink" title="下午主要是做了一些题目"></a>下午主要是做了一些题目</h2><p>第一题都做不出来我的内心是崩溃的…后面就一直在干一些有的没的事了…哎做的很不好…</p>
<h3 id="一些收获"><a href="#一些收获" class="headerlink" title="一些收获"></a>一些收获</h3><ul>
<li>图片损坏的话可能是因为文件头字段有损坏，同类型的图片头部的字段都是相同的</li>
<li>kali Linux做安全测试比较方便</li>
<li>图片的备注可能包含了信息，可以直接右键看，当然也会被保存在图片的内容中，直接用记事本打开也能看到</li>
<li>对于字段长度限制的输入，可以直接改js或html代码</li>
<li>表单不能成功提交？用BurpSuite拦截修改再提交</li>
</ul>
<p>后面讲题的时候还是收获挺大的，普及了好多相关的思想和知识！继续加油！</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[《太空旅客》]]></title>
      <url>https://blog.patrickcty.cc/2017/02/01/%E3%80%8A%E5%A4%AA%E7%A9%BA%E6%97%85%E5%AE%A2%E3%80%8B/</url>
      <content type="html"><![CDATA[<h1 id="《太空旅客》"><a href="#《太空旅客》" class="headerlink" title="《太空旅客》"></a>《太空旅客》</h1><h2 id="闲话"><a href="#闲话" class="headerlink" title="闲话"></a>闲话</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;和高中同学一起看的电影～看的都有点饿了233。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这是一部值得深思的电影，就像一个朋友说的一样，太空旅客问题，也是一个神问题。你是选择自己独自绝望，还是找另外一个人和你一起绝望，但是会让一个无辜的人也绝望呢？</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;说实话，电影开始很久一段时间都是很平淡的，甚至是太平淡了。男主角因为一次小行星撞击事故意外的提前90年从旅途中醒来，开始的一段时间里面都是描述男主一个人在飞船上的生活。直到后来男主花了很久终于下定决心叫醒了女主。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这一部分开始，就一直有一颗大石头悬在头上，特别是每次见亚瑟的时候，都很担心女主会知道真相。不过试想你是被叫醒的，知道真相之后我想你一定也会怒不可遏，甚至十分怨恨叫醒你的。最后果然是亚瑟打破了平静，“无意中”把真相告诉了女主。我本来以为会一直围绕感情来展开，没想到这时候危机出现了。于是男女主一起解决了问题拯救了整个飞船。尽管灾难比较强行，不过如果没有灾难，这关系还真的不太好继续发展。几个出现时间超过一分钟的“人”角色，都是比较熟悉的面孔，星爵，大表姐，还有黑客帝国的墨菲斯。不过演的都很好，看的时候并没有出戏。墨菲斯的设置也很巧妙，既没有太多的抢过主角的风头，又巧妙地让男女主能去往需要高权限的地方，还缓和了男女主额关系，真的是点睛之笔。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;最后经历了那么多，女主也原谅了男主，而且即使男主最后发现了重新冬眠的方法，女主还是选择留下来和男主一起～最后的结局也比较有意思，男主种下来的树，让整个飞船变成了一个小型的自然生态系统，虽然可能性不清楚，不过确实有意思～</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;最后就是关于那个问题了，如果是我，我会很想找个人陪我，不过我也知道如果叫醒了另一个人，很可能就是叫醒了一个恨你一辈子的人，所以我也不知道该怎么选择，这也是一个令人头疼的问题，不过电影里给出的解答还是很让人满意的！</p>
<h2 id="评分"><a href="#评分" class="headerlink" title="评分"></a>评分</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;8.5/10。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;前面节奏还是太慢了，看起来有点无趣，中间冲突爆发又拖了好久，不过情节还是很赞的，特别是结尾～对宇宙的刻画也是很让人欣喜的～</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[使用API来获取数据]]></title>
      <url>https://blog.patrickcty.cc/2017/02/01/%E4%BD%BF%E7%94%A8API%E6%9D%A5%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE/</url>
      <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><ul>
<li>使用http请求后台数据返回json结果</li>
</ul>
<h3 id="一些门槛"><a href="#一些门槛" class="headerlink" title="一些门槛"></a>一些门槛</h3><ul>
<li>设置验证：调用api时要用特定的api_key</li>
<li>上面的api_key一般是要注册之后才能生成</li>
<li>比较大型的网站的api则有更高的门槛:</li>
<li>注册一个app用来获得token,api_key,甚至前面对应的secret</li>
</ul>
<p>坑爹的是使用twitter的api不知为啥连接不上去…</p>
<h3 id="联想"><a href="#联想" class="headerlink" title="联想"></a>联想</h3><p>在官网www.jnugeek.cn项目中，就用REST的思路构造了一些api，而前端就是通过ajax请求来调用这些api<br>只不过上面这个api比较不同没有门槛</p>
<h3 id="Google大法好"><a href="#Google大法好" class="headerlink" title="Google大法好"></a>Google大法好</h3><p>Google有好多api！</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[《怦然心动》]]></title>
      <url>https://blog.patrickcty.cc/2017/02/01/%E3%80%8A%E6%80%A6%E7%84%B6%E5%BF%83%E5%8A%A8%E3%80%8B/</url>
      <content type="html"><![CDATA[<h1 id="《怦然心动》"><a href="#《怦然心动》" class="headerlink" title="《怦然心动》"></a>《怦然心动》</h1><h2 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h2><p>这部电影真的是太太太太太好看了～简直是我有生以来看过的最好看的电影！</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这是一部感情题材的电影，而让它与众不同的是，它讲述的是最单纯最朴实的感情，从幼年到初中，从单面的喜欢到互相的喜欢。没有疯狂，没有狗血，一切都是那么的自然，又是那么的美好。（看到这里我不得我吐槽万恶的资本主义，你们就这样放纵你们的接班人，看来得把你们请到中国磨砺一下了。（逃</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;影片是从很小的时候开始的，见男主的第一面，女主就缠着他，并且在之后很多年都是这样。刚开始是以男主为第一人称叙述自己的一些想法，这时候妹子还是单方面的喜欢男主。后来就变成女主为第一人称叙述了，不得不说这种叙述手法真的太巧秒了！作为一部情感电影，这样真的能够充分的把男女之间的心理表现出来，并且二者的对比也很明显，这样就让观众能更加清晰地体会到男主之间那模糊懵懂的感情～</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;但是女主没有一直这样“死缠烂打”，由于种种原因，女主对男主的感情逐渐有了微妙的变化，直到最后“不喜欢”，而男主也在这个过程中由害怕变成了喜欢。到最后情感完全倒过来了，还是很有戏剧性的～不得不说导演对情感的把握真的太到位了，看电影的时候沉浸感特别强，感觉自己完全代入到电影中了，随着人称的切换而不断地切换心情～最棒的是男主最后踏出了那一步，他不再是一个懦夫，而女主最后也接受了～故事到这里就结束了，给我们留下了充足的想象空间～</p>
<h2 id="人物"><a href="#人物" class="headerlink" title="人物"></a>人物</h2><h3 id="朱丽"><a href="#朱丽" class="headerlink" title="朱丽"></a>朱丽</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;妹子真的是太可爱了太讨人喜欢了！！！</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;咳咳，恢复正经。妹子不但人长得好看，而且性格十分奔放，并且还很坚韧。在第一次见面以及后来的几年中都一直追着男主不放。这种主动的妹子真的是太棒了～</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;但是菜不仅仅是这样，妹子喜欢爬到梧桐树上眺望远处的风景，但是在梧桐树要被砍的时候，妹子守在树上，阻止其他人砍树。我想这是一种勇敢的表现吧，敢于追求同时也敢于保护自己喜爱的东西，愿意用自己的身体去守护～</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;还有之后的能干，不论是在展览上孵出了小鸡，把小鸡养大照顾的很好并且生了很多鸡蛋还是后来的修剪花园把破败的前院打理的一派生机。妹子用自己的行为证明了能力，我想她并不想证明什么，只是因为她喜爱，只是因为她想做。源于意愿，源于热爱。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;以及妹子的体贴，无论是照顾家人的感情，不愿意因为自己的情绪毁了妈妈认为很重要的事情，还是愿意去看完因为事故而智力受损的伯伯。她是发自真心的为她们着想，她的心灵，是真的闪耀着明亮的光芒。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;很庆幸后来妹子想清楚了自己的感情，没有盲目的追求爱情，很庆幸妹子最终收获了她一直期望的爱情～</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;妹子现在是我的女神了～嘿嘿嘿，超过超杀女了～</p>
<h3 id="布莱斯"><a href="#布莱斯" class="headerlink" title="布莱斯"></a>布莱斯</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;电影中布莱斯是一个典型的立体人物，人物刻画得真的很到位。从小时候因为妹子的缠人而产生的对妹子的畏惧，到后来因为舍弃了妹子没有和她一起保护那棵梧桐树开始，一直到丢妹子的鸡蛋被妹子发现并讨厌，布莱斯的态度发生了很大的变化。他也逐渐看到了妹子身上的闪光点。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个人物刻画的十分真实，他的心理想法行为也都描述的很到位，正是因为他，电影的半边天被撑起来了～</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;不得不说这也是一个颜值从小到大都爆满的…高冷的男神…</p>
<h3 id="布莱斯的爸爸"><a href="#布莱斯的爸爸" class="headerlink" title="布莱斯的爸爸"></a>布莱斯的爸爸</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;布莱斯的爸爸引起了剧中的核心冲突。从对话中可以知道他过去也是一个有天赋的搞音乐的，但是由于经济的限制没能继续下去。可能是因为这件事还有其他一些不为人知的挫败，他变得很毒舌，势利，瞧不起妹子他们一家，瞧不起其他有困难的人…</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我觉得他也是很可悲的，自己过得消极还把消极的情绪发泄给全家人，并且强制他们接受，是典型的大男子主义。而反过来妹子的爸爸，在妹子悲伤的时候会用自己的方式给妹子安慰，在妹子最喜欢的树被砍倒的时候自己画了一副给妹子，同时十分照顾妹子的情绪，连和妹子妈妈吵架之后都会亲自到妹子房间里面给她道歉。而且还十分支持孩子的行为，支持他的两个儿子搞音乐，而不像布莱斯的爸爸那样直接否定。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;看到这两家的对比之后，我也深刻意识到做一个好家长的重要性，不仅是对孩子，还是对其他的家人都是至关重要的。还好布莱斯的家里面有一个好妈妈，一定程度上限制了布莱斯爸爸对布莱斯的其他影响。做一个好爸爸，不仅要支撑起这个家的经济，还要照顾好妈妈的生活与心灵，还要能和孩子交心，不因为辈分而全盘忽视孩子的想法，而是一种平等的又付出更多的朋友关系。妹子性格这么好妹子爸爸分不开的，有这样的一个爸爸，也是很幸福的一件事啊。我希望我以后也能做这样一名优秀的家长。</p>
<h3 id="布莱斯的外公邓肯"><a href="#布莱斯的外公邓肯" class="headerlink" title="布莱斯的外公邓肯"></a>布莱斯的外公邓肯</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;布莱斯的外公也是一个重要的带领布莱斯成长的人，外公的性格也很好，她能发现人的优点，也是因为外公，布莱斯才会有后面对妹子态度的转变，布莱斯才会去发现那些其他人不一样的地方。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;而且外公人也很好，他也帮妹子修剪好了花园～外公也很有素质，即使布莱斯的爸爸嘴巴那么恶毒，外公还是仅仅据理力争并没有做出什么出格的事情～嘿嘿我的外公也是这么好的人～有这么好的外公也是一种幸福～</p>
<h2 id="评分"><a href="#评分" class="headerlink" title="评分"></a>评分</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10/10。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我看过最好看的一部电影，没有之一。感情课外十分到位，很真挚，整部电影看下来一直很开心，电影中的幸福也传达到了我的心中。我想这就是一部电影的最高境界吧，能真真正正的感染人心。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[加速吧，patrickcty.cc！]]></title>
      <url>https://blog.patrickcty.cc/2017/02/01/%E5%8A%A0%E9%80%9F%E5%90%A7%EF%BC%8Cpatrickcty-cc%EF%BC%81/</url>
      <content type="html"><![CDATA[<h1 id="加速吧，patrickcty-cc！"><a href="#加速吧，patrickcty-cc！" class="headerlink" title="加速吧，patrickcty.cc！"></a>加速吧，patrickcty.cc！</h1><h2 id="瞎扯"><a href="#瞎扯" class="headerlink" title="瞎扯"></a>瞎扯</h2><p>最近时间比较零散，系统学习新知识的时间并不多，于是乎就这零碎的时间，折腾一下博客，然而由于各种原因，还是耗费了大量的时间233。</p>
<p>众所周知，Github Pages加载出来的页面在每次刷新都要重新加载所有元素，因此，如果你的博客里面包含大量的图片的话，加载速度会被拖到很慢，为了让我的博客加载速度变快，我决定把图片这些静态文件丢到七牛云里面了。</p>
<p>但事情并没有那么简单，我之前是用CloudFlare来升级https的，而之前用的七牛云都是http的外链，因为混合http和https的网站不安全，我是想全局采用https，这就是我遇到的第一个难点。</p>
<h2 id="艰难的尝试"><a href="#艰难的尝试" class="headerlink" title="艰难的尝试"></a>艰难的尝试</h2><p>现在的情况是，域名是在腾讯云申请的，ssl是用的CloudFlare的，静态文件准备放在七牛云上。</p>
<p>于是首要的问题就是静态文件的问题了，要把他们丢在七牛云上，并且要是https外链。于是就去创建对象存储，然而我没发现可以直接生成https，而是被自定义域名导到CDN去了，而CDN里面有一个比较明显的https选项。</p>
<p>然而要想使用这个https，必须得有证书的key和value，然而因为我用的是CloudFlare生成的证书，并不能看到key和value，正好七牛云上可以申请证书，于是乎决定就近在七牛云上申请一个证书。</p>
<p>然而证书申请得秘制慢，第一次我没有配置CNAME，于是证书一直卡在循环验证那个地方，后来决定把博客的域名换成blog开头的二级域名，于是又重新申请了一个证书并且配置了CNAME，然而这个证书还是下来的异常慢，别人都是十分钟二十分钟下来了，我的却一直都没有下来…还检查了好几遍CNAME的配置，都确定没有问题了，还是没出来。真的是有查成绩的感觉，一直在看有没有出来233。</p>
<p>到了申请第二个证书的第二天，起床后突然想起来了，然后一查发现出来了233，真的是和查成绩并且发现成绩还不错的心情一模一样233。然而在证书出来之前，我试着创建一个http的CDN，然而发现域名需要备案…囧rz。也就是说，虽然证书出来了，然而没什么卵用233。</p>
<p>然而我还有另一个备案了的域名，索性先创建了一个CDN，并且就在那里放着了。之后发现这个域名绑定的对象储存可以直接使用https产生外链。（我一直以为要相应的CDN才能产生https外链，事实是只要是对象储存都可以选择产生https外链，但是如果你想要绑定自己的域名就必须要CDN了。）于是高兴地把静态文件都丢到了七牛云上。</p>
<p>然而由于我之前改域名就把DNS服务器又改成腾讯云的了，而要想比较省心的使用https的话DNS服务器要用CloudFlare的，你以为就把服务器改过来就可以了么…就算我改过来了，他还死活不更新…一直用的还是腾讯云的DNS服务器…比较玄学的是，我都把腾讯云的域名解析都给停了结果域名还是可以解析出来…而且是用腾讯云的解析的…不过这样一大圈下来，我终于搞清楚腾讯云DNs服务器还有CloudFlare的真相了。</p>
<p>最后在吃完晚饭后，我惊喜的发现，博客上出现了绿色的小锁！DNS服务器终于变成CloudFlare的了，到此，几乎已经大功告成了，最后我把本地调试好的push上去，再看，速度果然提升了不少！而且https小锁还在～大功告成！真的是累死我啦。（心累…</p>
<p>P.S.中途最让我心累的就是笔记本的网总是断…每次以为自己要成功的时候就断网，搞得我十分崩溃orz，好在最后成功了。</p>
<h2 id="收获-amp-amp-干货"><a href="#收获-amp-amp-干货" class="headerlink" title="收获&amp;&amp;干货"></a>收获&amp;&amp;干货</h2><p>上面bb了那么多其实都是日记，整个过程我还是学到了不少知识的。</p>
<h3 id="关于域名解析"><a href="#关于域名解析" class="headerlink" title="关于域名解析"></a>关于域名解析</h3><p>其实这部分我在<a href="https://blog.patrickcty.cc/2016/12/27/https%EF%BC%8C%E6%83%B3%E8%A6%81%E4%BD%BF%E7%94%A8%E4%BD%A0%E6%B2%A1%E9%82%A3%E4%B9%88%E5%AE%B9%E6%98%93/">上一篇</a>相关的文章就提到过，不过当时的理解还比较片面，这次更深入理解了相关的内容。</p>
<ul>
<li>A记录指向一个ipv4地址，也就是服务器的公网ip，这部分只要服务器里面没有什么问题，在域名解析的记录中把记录值设置为这个ipv4地址就可以了。至于主机记录，说白了就是你的二级域名前面的那个东西，当然直接用主域名也可以的。这部分可以参考腾讯云的提示：</li>
</ul>
<blockquote>
<ul>
<li>www： 解析后的域名为www.qcloud.com。</li>
<li>@： 直接解析主域名 qcloud.com。</li>
<li>*： 泛解析，匹配其他所有域名 *.qcloud.com。</li>
<li>mail： 将域名解析为mail.qcloud.com，通常用于解析邮箱服务器。</li>
<li>二级域名： 如：abc.qcloud.com，填写abc。</li>
<li>手机网站： 如：m.qcloud.com，填写m。</li>
</ul>
</blockquote>
<ul>
<li>CNAME记录说白了就是别名，也就是说尽管你的名字是这个，但是本质还是原本的域名里面的。在这里我就是把我github的那个域名指到自定义的域名，一般CNAME也是用在这种自定义的情况下。记录值就是原本的域名，主机记录和上面的一样。</li>
<li>至于另外的MX等暂时没用到就没仔细研究啦，等以后需要再去折腾～</li>
</ul>
<h3 id="关于CloudFlare"><a href="#关于CloudFlare" class="headerlink" title="关于CloudFlare"></a>关于CloudFlare</h3><p>CloudFlare为什么能生成ssl呢？原理我在上一篇里面也说到过。</p>
<p>说白了就是你的域名由CloudFlare来接管，在接管的过程中它帮你进行了加密并且搞定了ssl证书。而让CloudFlare接管域名就是把DNS的服务器换成CloudFlare的服务器，一开始我还以为对于每个域名，它的域名服务器都是单独生成的呢…</p>
<p>看来是我想得太高大上了，其实就是把DNS服务器换成CloudFlare的就可以了，然后再在CloudFlare里面进行相应的配置，比如DNS的记录，这个和腾讯云上的是一模一样的，只不过因为是英文所以你懂的…</p>
<p>还有就是Pages Rules，比如可以让你把所有的请求都导到https上，其实这个在nginx可也以做到，不过既然在这里搞定了，也不需要再去服务器上配置了。</p>
<p>还有一个用到的就是Crypto，也就是ssl相关，也是很简单就可以设置好了。</p>
<p>使用CloudFlare的好处就是方便，无论是证书还是自动重定向，都比较方便，不需要你去nginx上一个个的敲出来了，不过这种的话安全性自然不如自己配置来得高，这个就要自己来衡量了。</p>
<p>另外CloudFlare还有很多强大的功能，不过这些都是Pro版的，需要付费。我就没研究啦。</p>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>用CloudFlare管理域名，用七牛云管理静态文件，用Github Pages托管，用Hexo作为框架，一个快速的静态个(电)人(影)博客就这样搞定啦！</p>
<p>虽然过程比较艰难，不过看着快了好多倍的加载速度，内心还是十分高兴的～</p>
<p>不过这么棒的博客可不能就这样荒废了，以后要多输出一点干货啦～</p>
<p>另外明天就是除夕啦，虽然我不喜欢过年，不过还是挺高兴呢～</p>
<p>以上。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[《垫底辣妹》]]></title>
      <url>https://blog.patrickcty.cc/2017/02/01/%E3%80%8A%E5%9E%AB%E5%BA%95%E8%BE%A3%E5%A6%B9%E3%80%8B/</url>
      <content type="html"><![CDATA[<h1 id="《垫底辣妹》"><a href="#《垫底辣妹》" class="headerlink" title="《垫底辣妹》"></a>《垫底辣妹》</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;最近是考试周，经历了复习周每天的紧张，按照我的惯例考试周会“浪起来”，正好充了爱奇艺会员，看电影也会方便一些。但是只是看电影看完之后并没有什么感觉，之后反而会感觉很无聊，于是索性每看一部电影都写一下自己的感受。恩就从垫底辣妹开始。</p>
<h2 id="吐槽"><a href="#吐槽" class="headerlink" title="吐槽"></a>吐槽</h2><p>关于高考的毒鸡汤233。<br>妹子其实没那么好看，不过身材确实不错（逃。<br>居然是根据真实情况改编！</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;今天在考完毛概之后看完了这部电影，总体感觉还是不错的，人物情节都比较到位，虽然都是一些比较老的套路，比如努力考上大学，关键时刻家庭矛盾发生等等。不过整体效果居然还不错，也没有带给人那种很不切实际的感觉。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;影片描述的是一个基础超级差的辣妹在高二进入补习班之后好好学习考上庆应大学的故事。虽然听起来很扯淡但是看了电影的人都会觉得还是有真实性的，影片中同时也伴随着许多冲突矛盾，学校与老师的冲突，家庭之间的各种矛盾，自己的绝望等等。这些让这一部电影丰满，也让人物形象更立体。</p>
<h3 id="大学-amp-高考"><a href="#大学-amp-高考" class="headerlink" title="大学&amp;高考"></a>大学&amp;高考</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在分析人物之前我觉得有必要先讨论一下日本大学和高考的问题。我之后还特意查了一下庆应大学的排名，恩全世界三十多名，是的全世界的排名，日本私立最好的大学。突然很怀疑人生…为什么我出生在了中国…不过日本高考的情况和中国不尽相同，所以可比性也没那么强。不过要是突然有老师对一个垫底的人说他可以考清华或者差一点复旦，那恐怕连我也会嘲讽一番…有了这个背景再去回想一下影片中的人物就会有完全不同的感觉。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;然后日本的高考是分两次的，一次是全国统考，再就是面对想考学校的测试了。详细可以看<a href="https://www.zhihu.com/question/27664102" target="_blank" rel="external">知乎这个问题</a>，整体特别是第二次考试还是没那么容易的。感觉比我国高考更加人性化，不过更加考验综合素质。按照我国国情也没办法使用日本的方法，我国高考要是不是一锤子定音或许会好一些。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这一部分的最后还是要说的事哪里都有厉害的人，与其抱怨制度，不如提高自身的综合实力，这样不管身处什么环境都能脱颖而出。</p>
<h3 id="人物"><a href="#人物" class="headerlink" title="人物"></a>人物</h3><ul>
<li><p>主角<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;比较打动我的就是妹子拼了命的精神，一边要陪着姐妹，一遍要玩了命的补以前落下的内容。她的那种没日没夜的学习，从电影中看到的是放学后在补习班学习，回到家之后学通宵。这样的高强度，并且还忍受着学校老师，父亲的嘲笑，能一直坚持下来确实是一件非常难的事情。我想如果像妹子那样没日没夜的学，考上庆应大学确实有可能，只可惜妹子的毅力不是一般人能达到的。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;还有就是妹子的乐观，面对如此的压力，她最终一直挺过来了，尽管中途有过想放弃的念头。她的乐观帮助她渡过了许多的困难，这也是值得学习的。</p>
</li>
<li><p>爸爸<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;父亲在成长中对孩子的作用也是巨大的。在父亲的偏爱下，被寄予厚望的儿子承受了巨大的压力，被忽视的女儿也在心理有了一定程度的叛逆与反抗。而父亲的存在也引发了剧中的很多矛盾，补习班另外一个补习的学生也是因为父亲的影响而不想学习。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;想要做一个好的父亲，很难，但也很重要。对孩子很重要，对家庭的和谐也很重要。</p>
</li>
<li><p>妈妈<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;可以说妹子之所以撑到最后妈妈的支持与理解是不可或缺的。从影片一开始把妹子送进女子学校并且告诉她学习不是最重要的，到后来拼命打工资助妹子上补习班，给妹子提供精神的帮助。妈妈一直都发挥了重要的作用。我想如果不是有妈妈的理解与包容，这个家庭早就支离破碎。当爸爸明明那么不好，偏袒弟弟忽视其他家人的时候，她却依然觉得爸爸是个好男人。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;做一个好妈妈也同样重要，我想她确实做到了。</p>
</li>
<li><p>老师<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我想改变妹子命运的，就是这个坚信妹子的老师了吧。即使妹子基础很差，即使很多人都不看好妹子，他还是尽自己的努力，相信着她，用他的方法，鼓励着妹子让她能一直走下去，鼓励着补习班的所有人。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;希望我们每个人的生命中都有这样的人能无条件相信着你，并一直鼓励着你，陪伴着你走过那一个个漫长的黑夜。</p>
</li>
<li><p>同学（补习班）<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;算是全片中一个隐藏的爱情的菜单吧，人物塑造的还是很棒的～从他的一些脸红偷瞄等小动作还有后面的跟着妹子改变发型也都可以体会他的内心。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;另外又是一个可以看出来父亲对孩子影响之深的例子。</p>
</li>
<li><p>姐妹<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;其中有一段就是四姐妹在温泉里面的交谈，她们同样是对妹子的支持以及为了妹子的未来愿意暂时不去“打扰”她，得友如此，也是人生的一大幸运的事情。试想自己身边的一个好朋友有一些看起来异想天开的目标，你是会嘲讽还是会支持甚至牺牲自己来支持？</p>
</li>
<li><p>学校老师<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;是妹子的“神助攻”，各种刷妹子的怒气值，也算是妹子成功的一个特殊的因素。</p>
</li>
</ul>
<h2 id="因素"><a href="#因素" class="headerlink" title="因素"></a>因素</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;无条件的信任，背后默默的支持，外界的嘲讽，自身强大的意志力与执行力。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这四点就是妹子成功的因素，尽管看起来非常“电影般的理想”，不过这的确也适合生活中其他的困难。</p>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这部电影的受众人群不仅仅是学生，对老师，对家长都有不小的教育作用，还是值得一看的。</p>
<h2 id="个人评分"><a href="#个人评分" class="headerlink" title="个人评分"></a>个人评分</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;8/10。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;电影整体还是很好的，一些老内容对整体有所减分。（我也说不出来哪里减分，不过主观上就是这样啦。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[第十章-采集JavaScript]]></title>
      <url>https://blog.patrickcty.cc/2017/02/01/%E7%AC%AC%E5%8D%81%E7%AB%A0-%E9%87%87%E9%9B%86JavaScript/</url>
      <content type="html"><![CDATA[<h2 id="核心模块：selenium-webdriver"><a href="#核心模块：selenium-webdriver" class="headerlink" title="核心模块：selenium.webdriver"></a>核心模块：selenium.webdriver</h2><h3 id="核心原理：webdriver模仿浏览器发出各种指令"><a href="#核心原理：webdriver模仿浏览器发出各种指令" class="headerlink" title="核心原理：webdriver模仿浏览器发出各种指令"></a>核心原理：webdriver模仿浏览器发出各种指令</h3><h3 id="事例"><a href="#事例" class="headerlink" title="事例"></a>事例</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">driver = webdriver.PhantomJS(executable_path=<span class="string">'your_path'</span>)</div><div class="line">driver.get(<span class="string">'http://www.jnugeek.cn/'</span>)</div></pre></td></tr></table></figure>
<ul>
<li>这里就相当于模仿浏览器发送get请求</li>
<li>PhantomJS是一个没有GUI的浏览器</li>
<li>说白了还是间接用浏览器</li>
</ul>
<h3 id="关于selenium"><a href="#关于selenium" class="headerlink" title="关于selenium"></a>关于selenium</h3><ul>
<li>selenium有一个类似于BeautifulSoa的选择器</li>
<li>可以很方便的定位到网页的某个元素</li>
<li>而且他的命名也十分清楚明了</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">driver.find_element_by_tag_name(<span class="string">'div'</span>)</div></pre></td></tr></table></figure>
<h3 id="总之，在浏览器面前，JS就会乖乖的显示出来啦"><a href="#总之，在浏览器面前，JS就会乖乖的显示出来啦" class="headerlink" title="总之，在浏览器面前，JS就会乖乖的显示出来啦"></a>总之，在浏览器面前，JS就会乖乖的显示出来啦</h3>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[第九章-表单与登录窗口]]></title>
      <url>https://blog.patrickcty.cc/2017/02/01/%E7%AC%AC%E4%B9%9D%E7%AB%A0-%E8%A1%A8%E5%8D%95%E4%B8%8E%E7%99%BB%E5%BD%95%E7%AA%97%E5%8F%A3/</url>
      <content type="html"><![CDATA[<h2 id="核心模块-Requests"><a href="#核心模块-Requests" class="headerlink" title="核心模块:Requests"></a>核心模块:Requests</h2><h3 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h3><h4 id="关键点："><a href="#关键点：" class="headerlink" title="关键点："></a>关键点：</h4><ul>
<li>找到字段名name属性对应的内容</li>
<li>对应的值就是要提交的数据</li>
<li>用requests.post()提交数据</li>
</ul>
<h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h3><h4 id="关键点：-1"><a href="#关键点：-1" class="headerlink" title="关键点："></a>关键点：</h4><ul>
<li>找到字段名name属性对应的内容</li>
<li>对应的值就是用户名或者密码</li>
<li>如果涉及到cookie就用r.cookies</li>
<li>当然上面那个是为了保存登录状态以用来查看需要登录的界面才需要了</li>
<li>用session也是一个很好的选择session会持续跟踪会话信息，不仅是cookie,甚至header等等，即使变了也会一直纪录</li>
<li>要用的话就要先requests.session()建立一个对象</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[从零开始的腾讯云部署Flask应用生活]]></title>
      <url>https://blog.patrickcty.cc/2017/02/01/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E8%85%BE%E8%AE%AF%E4%BA%91%E9%83%A8%E7%BD%B2Flask%E5%BA%94%E7%94%A8%E7%94%9F%E6%B4%BB/</url>
      <content type="html"><![CDATA[<h3 id="2016-09-08-12-00-34开通腾讯云服务器"><a href="#2016-09-08-12-00-34开通腾讯云服务器" class="headerlink" title="2016-09-08 12:00:34开通腾讯云服务器"></a>2016-09-08 12:00:34开通腾讯云服务器</h3><p>说实话，这个时候我对云服务器的概念还是一脸懵逼的，我所有的认识，就是只要把应用放在上面，从外面就可以访问了，抱着这个简单的想法我就开始做准备活动了，没想到这项工作居然会如此浩大，如此艰难。</p>
<p>刚开始我安装的系统是CentOS7.2，因为都是Linux，这个比较靠前，腾讯云上面相应的文档又比较多于是乎就这样了。然而我没想到的是，同样是Linux的发行版，Ubuntu和CentOS居然有如此大的差别。CentOS上好像没有<br>Python3.X的版本，于是第一个任务就是安装Python3.5。其实Linux下安装还是比较简单的，wget下载压缩包，tar解压，再就是安装。</p>
<p>然而，由于系统自带的是Python2.7，在用3.5替换的时候遇到了一些问题，由于yum是用Python2.7运行的，替换之后有些问题，而且3.5也有些问题，解决起来不容易，于是我菜月Patrick就用出了死亡回归——重装系统。</p>
<h3 id="2016-09-08-15-21-48重装了CentOS7-2"><a href="#2016-09-08-15-21-48重装了CentOS7-2" class="headerlink" title="2016-09-08 15:21:48重装了CentOS7.2"></a>2016-09-08 15:21:48重装了CentOS7.2</h3><p>这次还是一样先下载了Pytho3.5，然而在操作的过程中电脑突然出问题，键盘不能用，云服务器的工作不得不停止了。停了三天之后问题终于逐渐解决，windows彻底不能用，Ubuntu上的网络问题也已经解决，于是又开始了。然而，由于折腾Linux比较累了，于是我就准备把腾讯云的工作交给郑洋来做了。</p>
<p>但和我一样，郑洋也同样遇到了相当大的阻力，于是我还是自己装了Python3.5。但是yum还是有问题，尽管我已经把yum文件头部的路径该成了python3，。这时候我已经不再管这个了，Python基本搞定，接下来就是装MySQL了，装的时候又有各种问题。这个时候在网上搜教程的时候突然发现腾讯云主机中有那种已经集成了环境的服务主机，于是狠下新来又再次主动死亡回归了——第二次重装系统。</p>
<h3 id="2016-09-12-10-14-02重装了CentOS6-5"><a href="#2016-09-12-10-14-02重装了CentOS6-5" class="headerlink" title="2016-09-12 10:14:02重装了CentOS6.5"></a>2016-09-12 10:14:02重装了CentOS6.5</h3><p>重装了之后，我就安心的把东西交给了郑洋。这次选择的系统是已经有MySQL5.6的，于是要做的就是装Python3.5了，然而似乎是系统的问题，之前装3.5的教程在这个系统上就各种报错，下载的.tar.xz文件都无法解析，试了很久无奈之下又准备找另一个集成了MySQL的更新的系统。就这样，我又开始了新一次的死亡回归——第三次重装系统。</p>
<h3 id="2016-09-12-15-27-08重装了CentOS7-0"><a href="#2016-09-12-15-27-08重装了CentOS7-0" class="headerlink" title="2016-09-12 15:27:08重装了CentOS7.0"></a>2016-09-12 15:27:08重装了CentOS7.0</h3><p>有了前面几次的经验，这次操作起来就是飞快了，3.5，数据库，所需模块，全都安装完毕,用python3 admin.py run也可以顺利的跑起来，然后就没有然后了。本以为这样跑起来就可以了，但是后来才发现并没有这么容易，这时候在网上搜了一些，发现了要想部署要经过很长一些步骤。再加上本地运行又有一些莫名其妙的错误于是就暂时放下来了。直到晚上试了N种方法不成功后抱着碰运气的想法运行了一个命令后终于成功运行了！简直开心爆了，一下子把这几天的不爽都冲消了大半。</p>
<blockquote>
<p>附：本地MySQL语法错误问题解决方法</p>
<p>原因：MySQLdb没有装好</p>
<ul>
<li>由于MySQLdb官方只支持到2.7，于是在3.5的环境下就会因为兼容性而有问题</li>
</ul>
<p>解决方法：</p>
<ol>
<li>sudo apt-get install libmysqlclient-dev(ubuntu)</li>
<li>sudo pip3 install mysqlclient</li>
</ol>
<p>以上后MySQldb就可以完美的运行了</p>
</blockquote>
<p>第二天又开始搞云主机了，根据志平的建议，还有就是因为教程的步骤太多太麻烦不想去试验于是就按照腾讯云的文档安装了Nginx，但当我根据他的教程来修改数据的时候，显示的却并不是他出现的那样，一顿修改之后发现各种报错而且还不能用，而且卸载再安装又有很多莫名其妙的错误，对我来说错误已经不可修复，然后就是另一次的死亡回归了——第四次重装系统。</p>
<h3 id="2016-09-13-13-18-06重装了Ubuntu-14-04-LTS"><a href="#2016-09-13-13-18-06重装了Ubuntu-14-04-LTS" class="headerlink" title="2016-09-13 13:18:06重装了Ubuntu 14.04 LTS"></a>2016-09-13 13:18:06重装了Ubuntu 14.04 LTS</h3><p>当我准备再次重装系统时，我向下翻，希望能找到一个更适合Python的环境，于是我找到了Ubuntu 14.04。用起来感觉确实比CentOS省心多了。集成了Python3.4，以及MySQL，再加上强大的apt，用起来感觉就是不一样。</p>
<p>这次我是下定决心跟着一个看起来比较靠谱的教程来做的，安装虚拟环境，安装所需的模块，安装配置uwsgi,安装配置Nginx，安装配置Supervisor。一切的一切，都是按照教程来的，但又有各种莫名奇妙的错误。uwsgi无法启动admin.py，使用一样的端口会显示端口已占用，使用其他的端口会显示找不到callable，于是又再次卡在这里了。这时候我觉得可能是因为环境安装的太杂，所以有一些冲突。因为安装虚拟环境的时候还不是很会，出了一些问题。这时候我又不愿意再次重装系统，因为胜利距离我就几步之遥了，这个时候我就决定先借用吕方的云主机了。也就是说，另一种方式的死亡回归——第五次重装系统。</p>
<blockquote>
<p>附：对virtualenv+uwsgu+Nginx+Supervisor理解以及配置</p>
<h4 id="virtualenv"><a href="#virtualenv" class="headerlink" title="virtualenv"></a>virtualenv</h4><ul>
<li>安装虚拟环境sudo pip3 install</li>
<li>新建名为jnugeek的虚拟环境virtualenv jnugeek(注意，这里不要用sudo，不然后面涉及到权限问题很崩溃的，默认使用系统模块，如果不想用系统模块就在jnugeek前面加上–no-site-packages,另一种说法：默认情况下虚拟环境不会依赖系统环境的global site-packages。比如系统环境里安装了MySQLdb模块，在虚拟环境里import MySQLdb会提示ImportError。如果想依赖系统环境的第三方软件包，可以使用参数–system-site-packages。)</li>
<li>启动虚拟环境source jnugeek/bin/activate/</li>
<li>在虚拟环境里面安装模块用pip并且不加sudo</li>
<li>退出虚拟环境deactivate</li>
<li>删除虚拟环境rm -r jnugeek</li>
</ul>
<p>虚拟环境作用:为应用营造一个相对独立的环境，可以在同一台主机上运行多个不同版本的python程序而不会因为模块之类的相互干扰。</p>
<h4 id="uwsgi"><a href="#uwsgi" class="headerlink" title="uwsgi"></a>uwsgi</h4><ul>
<li>安装pip install uwsgi</li>
<li><p>配置好config.ini</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">&gt; [uwsgi]</div><div class="line">&gt; # uwsgi 启动时所使用的地址与端口</div><div class="line">&gt; socket = 127.0.0.1:5000</div><div class="line">&gt; </div><div class="line">&gt; # 指向网站目录</div><div class="line">&gt; chdir = /home/uftp/blog/</div><div class="line">&gt; </div><div class="line">&gt; # python 启动程序文件</div><div class="line">&gt; wsgi-file = blogapp.py</div><div class="line">&gt; </div><div class="line">&gt; # python 程序内用以启动的 application 变量名</div><div class="line">&gt; callable = app</div><div class="line">&gt; </div><div class="line">&gt; # 进程数</div><div class="line">&gt; processes = 4</div><div class="line">&gt; </div><div class="line">&gt; # 线程数</div><div class="line">&gt; threads = 2</div><div class="line">&gt; </div><div class="line">&gt; #状态检测地址</div><div class="line">&gt; stats = 127.0.0.1:9191</div><div class="line">&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>运行应用uwsgi config.ini</p>
</li>
</ul>
<p>uwsgi是用来跑python应用的，比起直接运行，其优势在于指定了进程和线程数，而直接运行遇到高访问量的时候处理可能就没那么快了。然而这样极其容易出问题，端口可能被占用，callable可能找不到，而我也是因为这些才放弃使用uwsgi。</p>
<h4 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h4><ul>
<li>安装sudo apt-get install nginx</li>
<li>配置，在/etc/nginx/sites-available目录中添加配置文件，建议直接改目录中的default，因为如果两个文件都建立了软链接，那么很可能引起端口冲突，事实上我遇到有一个问题就是因为这个</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">&gt; server &#123;</div><div class="line">&gt;     listen      80; # 监听80端口</div><div class="line">&gt; </div><div class="line">&gt;     root       /srv/awesome/www;</div><div class="line">&gt;     access_log /srv/awesome/log/access_log;</div><div class="line">&gt;     error_log  /srv/awesome/log/error_log;</div><div class="line">&gt; </div><div class="line">&gt;     server_name awesome.liaoxuefeng.com; # 配置域名</div><div class="line">&gt; </div><div class="line">&gt;     # 处理静态文件/favicon.ico:</div><div class="line">&gt;     location /favicon.ico &#123;</div><div class="line">&gt;         root /srv/awesome/www;</div><div class="line">&gt;     &#125;</div><div class="line">&gt; </div><div class="line">&gt;     # 处理静态资源:</div><div class="line">&gt;     location ~ ^\/static\/.*$ &#123;</div><div class="line">&gt;         root /srv/awesome/www;</div><div class="line">&gt;     &#125;</div><div class="line">&gt; </div><div class="line">&gt;     # 动态请求转发到9000端口:</div><div class="line">&gt;     location / &#123;</div><div class="line">&gt;         proxy_pass       http://127.0.0.1:9000;</div><div class="line">&gt;         proxy_set_header X-Real-IP $remote_addr;</div><div class="line">&gt;         proxy_set_header Host $host;</div><div class="line">&gt;         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</div><div class="line">&gt;     &#125;</div><div class="line">&gt; &#125;</div><div class="line">&gt;</div></pre></td></tr></table></figure>
<ul>
<li>重启nginx　sudo /etc/init.d/nginx reload(或者sudo service nginx restart)</li>
<li>如果遇到了问题</li>
</ul>
<ol>
<li>killall nginx</li>
<li>sudo service nginx start</li>
</ol>
<ul>
<li>如果配置文件无误，那就可以了。</li>
</ul>
<p>Nginx它可以处理静态资源，同时作为反向代理把动态请求交给Python代码处理。也就是说它连接起了服务器与网络，并加载了静态文件。它是整个服务器系统中最重要的部分。</p>
<h4 id="Supervisor"><a href="#Supervisor" class="headerlink" title="Supervisor"></a>Supervisor</h4><ul>
<li>安装sudo apt-get install supervisor</li>
<li><p>编写一个Supervisor的配置文件awesome.conf，存放到/etc/supervisor/conf.d/目录下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&gt; [program:awesome]</div><div class="line">&gt; </div><div class="line">&gt; command     = /srv/awesome/www/app.py</div><div class="line">&gt; directory   = /srv/awesome/www</div><div class="line">&gt; user        = www-data</div><div class="line">&gt; startsecs   = 3</div><div class="line">&gt; </div><div class="line">&gt; redirect_stderr         = true</div><div class="line">&gt; stdout_logfile_maxbytes = 50MB</div><div class="line">&gt; stdout_logfile_backups  = 10</div><div class="line">&gt; stdout_logfile          = /srv/awesome/log/app.log</div><div class="line">&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>启动/停止sudo supervisorctl start/stop awesome</p>
</li>
<li>重新加载sudo supervisorctl reload</li>
<li>查看运行状态sudo supervisorctl status</li>
</ul>
<p>Supervisor+uwsgi是用来更好的运行app的，uwsgi可以单独启动，但二者一起就更方便监控，崩溃的时候也可以自动重启了</p>
</blockquote>
<h3 id="2016-0X-XX-XX-XX-XX重装了Ubuntu-14-04-LTS"><a href="#2016-0X-XX-XX-XX-XX重装了Ubuntu-14-04-LTS" class="headerlink" title="2016-0X-XX XX:XX:XX重装了Ubuntu 14.04 LTS"></a>2016-0X-XX XX:XX:XX重装了Ubuntu 14.04 LTS</h3><p>这个是在吕方的电脑上装的，所以时间什么的就不具体了。</p>
<p>吸取了上次的教训后，这次装环境就更加谨慎了，也没什么差错，但是virtualenv+uwsgu+Nginx+Supervisor一套下来后还是在uwsgi上卡住了，死活识别不出来callable。无奈之下，又因为看到了廖雪峰的教程，由于对廖雪峰无脑的信任，就决定再次重装系统重新试验了。于是又在我的电脑上进行了新一次的死亡回归——第六次重装系统。</p>
<h3 id="2016-09-17-13-34-12重装了Ubuntu-14-04-LTS"><a href="#2016-09-17-13-34-12重装了Ubuntu-14-04-LTS" class="headerlink" title="2016-09-17 13:34:12重装了Ubuntu 14.04 LTS"></a>2016-09-17 13:34:12重装了Ubuntu 14.04 LTS</h3><p>最后一次死亡回归了，当真正成功的时候，我的内心在狂喜之中，更多的是不要再出现任何差错的想法。</p>
<p>按照廖雪峰的教程，一步一步走了下来，然而还是加载不出来界面，这次意外的没有报任何错误。但这样反而更令人崩溃。</p>
<p>后来又尝试了uwsgi，还是同样的错误。</p>
<p>之后又改了admin.py中的host为0.0.0.0，改端口，感觉尝试的命令就打了一百多行，然而一直不见效。</p>
<p>第二天志平调试了一番后突然能用了，我简直是欣喜若狂！然而命途多舛，后来我再看的时候网站突然就不能用了，再后来就进入Nginx的欢迎界面了。</p>
<p>最后还是靠陈毅钊，解决了问题，并且找到了问题的症结所在。至此，Flask应用才正式稳定的部署了上去。</p>
<blockquote>
<p>附：问题分析</p>
<ul>
<li>按照廖雪峰的教程不成功的原因之一就是因为Nginx的配置文件没读取出来，尽管建立了新的软链接，但是旧的软链接也同时存在，所以就有了sudo nginx中出现的80端口已被占用的错误。另外，用sudo nginx -t来查看配置文件是否有错误。</li>
<li>另一个原因就是因为Flask自身的特殊性，要想被外界访问，需要指定host为0.0.0.0，但事实上和127.0.0.1是相同的，因为二者绑定在了一起。然后就是Flask的端口不必指定为80(Nginx所监听的端口)，而是和下面那个指定的保持一致就可以了。</li>
<li>还有一个原因，也就是最初按照廖雪峰的却没有加载出任何界面的原因就是因为腾讯云主机设置了安全组只开放21端口，也就是说无论是5000端口还是80端口从外界都无法访问，因此也连Nginx的欢迎界面都加载不进去了。</li>
<li>到此，问题全部解决。至于uwsgi，由于我本身对端口之类的了解有限，无法给出一个说的通的解释，但我现在的问题是：uwsgi启动的端口应该和python app相同么？为什么我再设置这二者相同的时候就会出现端口冲突？在admin.py文件中到底要怎样才能让callable能被识别出来？这些就是另外的问题了。或许现在我有些谨慎也就不愿意再冒险去试探这些问题了。先让官网就这样比较稳定的运行吧。后续等用的人少了再进行升级更新。那个时候就要再次请尘封已久的git出山了。这段时间真的要感谢和我一起奋斗官网的胡妙和东麟了，还有积极帮忙的郑洋，志平，陈毅钊了。</li>
</ul>
</blockquote>
<p>异世界在今天迎来了第一季的完结，同时我的Flask第一季也迎来了完结。菜月昴的精神，也应该继续留存着，伴随着我以后继续的开发。</p>
<p>ps:MySQL中还有一个坑，Ubuntu中的MySQL默认是不支持中文的，所以在建数据库的时候要指明用utf8</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">create database jnugeek default character set utf8</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[vim命令]]></title>
      <url>https://blog.patrickcty.cc/2017/02/01/vim%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<h1 id="vim常用命令"><a href="#vim常用命令" class="headerlink" title="vim常用命令"></a>vim常用命令</h1><h2 id="上下左右"><a href="#上下左右" class="headerlink" title="上下左右"></a>上下左右</h2><ul>
<li>j为下</li>
<li>k为上</li>
<li>h为左</li>
<li>l为右</li>
</ul>
<h2 id="定位符"><a href="#定位符" class="headerlink" title="定位符"></a>定位符</h2><ul>
<li>w右移一个单词（头）</li>
<li>e右移一个单词（尾）</li>
<li>$移动到行尾</li>
<li>0回到行首</li>
</ul>
<h2 id="命令符"><a href="#命令符" class="headerlink" title="命令符"></a>命令符</h2><ul>
<li>d删除(delete)<ul>
<li>dw删除一个单词</li>
<li>d$删除到行尾</li>
<li>等等，配合定位符使用</li>
</ul>
</li>
<li>u撤销(undo)<ul>
<li>U撤销整行的改变</li>
<li>CTRL-r重做撤销的改变</li>
</ul>
</li>
<li>p粘贴(paste)</li>
<li>v进入可视模式，复制什么的(view)</li>
<li>y在可视模式复制</li>
<li>r替换(replace)<ul>
<li>同样是配合定位使用效果更佳</li>
</ul>
</li>
<li>c改变(change)<ul>
<li>配合定位使用，比如cw替换这个单词光标之后的内容</li>
<li>会进入插入模式</li>
</ul>
</li>
</ul>
<h2 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h2><ul>
<li>/abc向后查找abc</li>
<li>?abc向前查找abc</li>
<li>n向后查找和上一次相同的内容，配合/或者?使用</li>
<li>N向前查找</li>
<li>CTRL-o回到之前位置</li>
<li>CTRL-i回到较新位置</li>
<li>%查找匹配的括号</li>
</ul>
<h2 id="代替"><a href="#代替" class="headerlink" title="代替"></a>代替</h2><ul>
<li>r命令(比较小型的）</li>
<li>:/s/A/B在此行中用B代替A</li>
<li>:/s/A/B/g此行中所有的A被B代替</li>
</ul>
<h2 id="执行外部命令"><a href="#执行外部命令" class="headerlink" title="执行外部命令"></a>执行外部命令</h2><ul>
<li>:!ls执行ls命令，命令可改</li>
<li>:w CTY保存文件为CTY</li>
</ul>
<h2 id="跳转"><a href="#跳转" class="headerlink" title="跳转"></a>跳转</h2><ul>
<li>G跳转到文件末尾</li>
<li>gg跳转到文件开头</li>
<li>506G跳转到506行(行数可以自己指定)</li>
</ul>
<h2 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h2><ul>
<li>a在光标后插入</li>
<li>i在光标前插入</li>
<li>o后面新开一行插入</li>
<li>O前一行插入</li>
</ul>
<p>基本的命令就是这么多了～这也是一晚上的学习成果。</p>
<p>vimtutor是个好东西～</p>
<p><strong>author</strong>:Patrick</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[utils.py一些理解]]></title>
      <url>https://blog.patrickcty.cc/2017/02/01/utils-py%E4%B8%80%E4%BA%9B%E7%90%86%E8%A7%A3/</url>
      <content type="html"><![CDATA[<p>就像模块的名字一样，这个模块就是为了实现一些实用功能</p>
<h1 id="第一部分"><a href="#第一部分" class="headerlink" title="第一部分"></a>第一部分</h1><blockquote>
<ul>
<li>find_modules</li>
<li>get_entries</li>
<li>join_url</li>
</ul>
</blockquote>
<p>这开头的三个模块，是为了注册蓝图</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_modules</span><span class="params">(init_file, fpattern=None)</span>:</span></div><div class="line">    <span class="string">"""</span></div><div class="line">    List names of modules in the same directory as init_file. The function is</div><div class="line">    usually used in __init__.py and returns value fit for __all__.</div><div class="line">    If you need to import it, use __import__ with level 1.</div><div class="line">    """</div><div class="line"></div><div class="line">    <span class="keyword">import</span> pkgutil</div><div class="line"></div><div class="line">    fpattern = re.compile(<span class="string">r"^[a-zA-Z][a-zA-Z0-9_]*$"</span>) \</div><div class="line">        <span class="keyword">if</span> fpattern <span class="keyword">is</span> <span class="keyword">None</span> <span class="keyword">else</span> re.compile(fpattern)</div><div class="line"></div><div class="line">    dirname = os.path.dirname(init_file)</div><div class="line">    entries = [modname <span class="keyword">for</span> _, modname, _ <span class="keyword">in</span> pkgutil.iter_modules([dirname])]  <span class="comment"># 之所以写三个是因为pk那个是一个生成器，有三个参数</span></div><div class="line">    entries = list(filter(<span class="keyword">lambda</span> n: fpattern.match(n), entries))  <span class="comment"># 过滤出非__init__.py的内容</span></div><div class="line"></div><div class="line">    <span class="keyword">return</span> entries</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_entries</span><span class="params">(init_file, glb)</span>:</span>  // 这个一般在API下一级目录的__init__.py使用</div><div class="line">    _entries = []</div><div class="line"></div><div class="line">    <span class="keyword">for</span> modname <span class="keyword">in</span> find_modules(init_file):</div><div class="line">        mod = __import__(modname, globals=glb, level=<span class="number">1</span>)  <span class="comment"># mod是一个模块对象，level指定了从上一级开始导入</span></div><div class="line">        <span class="keyword">if</span> hasattr(mod, <span class="string">"Entry"</span>):</div><div class="line">            _entries.append((modname, mod.Entry))</div><div class="line"></div><div class="line">    <span class="keyword">return</span> _entries</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">join_url</span><span class="params">(*args, **kwargs)</span>:</span></div><div class="line">    <span class="string">"""</span></div><div class="line">    Join a args with seps. example:</div><div class="line"></div><div class="line">        &gt;&gt;&gt; join_url("abc/", "/def/", "fed", "yui")</div><div class="line">        '/abc/def/fed/yui/'</div><div class="line">        &gt;&gt;&gt; join_url("abc", "def#", "##fed", "yui", sep=('^', '#', '$'))</div><div class="line">        '^abc#def##fed#yui$'</div><div class="line"></div><div class="line">    """</div><div class="line">    sep = kwargs[<span class="string">"sep"</span>] <span class="keyword">if</span> <span class="string">"sep"</span> <span class="keyword">in</span> kwargs <span class="keyword">else</span> (<span class="string">'/'</span>, <span class="string">'/'</span>, <span class="string">'/'</span>)  <span class="comment"># 主要是根据这个来连接url的</span></div><div class="line"></div><div class="line">    concat_str = sep[<span class="number">0</span>]</div><div class="line">    concat_str += args[<span class="number">0</span>][<span class="number">1</span>:] <span class="keyword">if</span> args[<span class="number">0</span>][<span class="number">0</span>] == sep[<span class="number">0</span>] <span class="keyword">else</span> args[<span class="number">0</span>]</div><div class="line"></div><div class="line">    <span class="keyword">for</span> a <span class="keyword">in</span> args[<span class="number">1</span>:]:  <span class="comment"># url前后都要判断</span></div><div class="line">        concat_str += <span class="string">""</span> <span class="keyword">if</span> concat_str[<span class="number">-1</span>] == sep[<span class="number">1</span>] <span class="keyword">else</span> sep[<span class="number">1</span>]</div><div class="line">        concat_str += a[<span class="number">1</span>:] <span class="keyword">if</span> a[<span class="number">0</span>][<span class="number">0</span>] == sep[<span class="number">1</span>] <span class="keyword">else</span> a</div><div class="line"></div><div class="line">    concat_str += <span class="string">""</span> <span class="keyword">if</span> concat_str[<span class="number">-1</span>] == sep[<span class="number">2</span>] <span class="keyword">else</span> sep[<span class="number">2</span>]</div><div class="line"></div><div class="line">    <span class="keyword">return</span> concat_str</div></pre></td></tr></table></figure>
<p>准备工作做好了就要注册蓝图了</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">def get_blueprint():</div><div class="line">    from flask_restful import Api</div><div class="line">    from flask import Blueprint</div><div class="line">    from common.utils import find_modules, join_url</div><div class="line"></div><div class="line">    # 注册了蓝图并初始化应用</div><div class="line">    bp = Blueprint(&apos;api&apos;, __name__)</div><div class="line">    api = Api(bp)</div><div class="line"></div><div class="line">    for modname in find_modules(__file__):</div><div class="line">        mod = __import__(modname, globals=globals(), locals=locals(), level=1)</div><div class="line">        if hasattr(mod, &quot;get_entries&quot;):</div><div class="line">            for entname, entry in mod.get_entries():  # 主要是这里面一个个的add很麻烦</div><div class="line">                # 前面的所有准备工作都是为了这个    </div><div class="line">                api.add_resource(entry, join_url(modname, entname),</div><div class="line">                                 endpoint=&quot;&#123;&#125;.&#123;&#125;&quot;.format(modname, entname))</div><div class="line"></div><div class="line">    return bp</div></pre></td></tr></table></figure>
<h1 id="第二部分"><a href="#第二部分" class="headerlink" title="第二部分"></a>第二部分</h1><blockquote>
<p>Session Interface</p>
</blockquote>
<p>不是很懂</p>
<h1 id="第三部分"><a href="#第三部分" class="headerlink" title="第三部分"></a>第三部分</h1><blockquote>
<p>API Test</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> json</div><div class="line"><span class="keyword">import</span> unittest</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_context</span><span class="params">(func)</span>:</span></div><div class="line">    <span class="keyword">from</span> flask <span class="keyword">import</span> current_app</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(self, *args, **kwargs)</span>:</span></div><div class="line">        <span class="comment"># 创建一个测试的环境</span></div><div class="line">        <span class="keyword">with</span> current_app.test_request_context():  </div><div class="line">            <span class="keyword">with</span> current_app.test_client() <span class="keyword">as</span> client:</div><div class="line">                self.client = client  <span class="comment"># 这个client真心强大，后面好多都用到了</span></div><div class="line">                self.login_record = <span class="keyword">None</span></div><div class="line"></div><div class="line">                func(self, *args, **kwargs)</div><div class="line"></div><div class="line">                <span class="keyword">del</span> self.client</div><div class="line">                <span class="keyword">del</span> self.login_record</div><div class="line"></div><div class="line">    <span class="keyword">return</span> wrapper</div><div class="line"></div><div class="line">whole_record = &#123;&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">ApiTest</span><span class="params">(unittest.TestCase)</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">jsonify</span><span class="params">(self, obj)</span>:</span>  <span class="comment"># json化返回值</span></div><div class="line">        <span class="keyword">import</span> json</div><div class="line">        <span class="keyword">return</span> json.dumps(</div><div class="line">                obj,</div><div class="line">                ensure_ascii=<span class="keyword">False</span>,</div><div class="line">                indent=<span class="number">4</span></div><div class="line">            )</div><div class="line"></div><div class="line">    <span class="comment"># 自动生成文档</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">record_requests</span><span class="params">(self, method, url, view, indata, response)</span>:</span></div><div class="line">        <span class="keyword">global</span> _RECORD_STR</div><div class="line">        <span class="keyword">global</span> whole_record</div><div class="line"></div><div class="line">        outdata = self.load_data(response.data)</div><div class="line">        user = <span class="string">"No user"</span></div><div class="line">        <span class="keyword">if</span> hasattr(self, <span class="string">'login_record'</span>) <span class="keyword">and</span> self.login_record:</div><div class="line">            user = <span class="string">"User `%s`"</span> % self.login_record</div><div class="line"></div><div class="line">        <span class="keyword">if</span> url <span class="keyword">not</span> <span class="keyword">in</span> whole_record:</div><div class="line">            doc = <span class="string">""</span></div><div class="line">            <span class="keyword">if</span> view <span class="keyword">and</span> getattr(view, <span class="string">'view_class'</span>, <span class="keyword">None</span>):</div><div class="line">                doc = view.view_class.__doc__ <span class="keyword">or</span> <span class="string">""</span></div><div class="line">            whole_record[url] = [doc]</div><div class="line"></div><div class="line">        whole_record[url] += [&#123;</div><div class="line">                <span class="string">'method'</span>: method,</div><div class="line">                <span class="string">'url'</span>: url,</div><div class="line">                <span class="string">'user'</span>: user,</div><div class="line">                <span class="string">'indata'</span>: indata,</div><div class="line">                <span class="string">'outdata'</span>: self.jsonify(outdata),</div><div class="line">            &#125;]</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">load_data</span><span class="params">(self, data)</span>:</span></div><div class="line">        <span class="keyword">if</span> isinstance(data, bytes):</div><div class="line">            data = data.decode(<span class="string">'utf8'</span>)</div><div class="line">        <span class="keyword">return</span> json.loads(data)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">login_user</span><span class="params">(self, account)</span>:</span></div><div class="line">        self.login_record = account.uid</div><div class="line"></div><div class="line">        <span class="keyword">from</span> flask <span class="keyword">import</span> url_for</div><div class="line">        response = self.client.post(</div><div class="line">            path=url_for(<span class="string">"api.auth.login"</span>),</div><div class="line">            data=&#123;<span class="string">'uid'</span>: account.uid, <span class="string">'passwd'</span>: account.p&#125;</div><div class="line">        )</div><div class="line">        self.assertEqual(response.status_code, <span class="number">200</span>)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">open</span><span class="params">(self, method, endpoint, **kwargs)</span>:</span></div><div class="line">        <span class="keyword">from</span> flask <span class="keyword">import</span> url_for, current_app</div><div class="line">        kwargs[<span class="string">'path'</span>] = url_for(endpoint)</div><div class="line"></div><div class="line">        resp = getattr(self.client, method)(**kwargs)</div><div class="line">        view = <span class="keyword">None</span></div><div class="line">        <span class="keyword">if</span> endpoint <span class="keyword">in</span> current_app.view_functions:</div><div class="line">            view = current_app.view_functions[endpoint]</div><div class="line">        indata = <span class="string">u'No argument.'</span></div><div class="line">        <span class="keyword">if</span> <span class="string">'data'</span> <span class="keyword">in</span> kwargs:</div><div class="line">            indata = kwargs[<span class="string">'data'</span>]</div><div class="line"></div><div class="line">        self.record_requests(</div><div class="line">                method=method.upper(),</div><div class="line">                url=kwargs[<span class="string">'path'</span>],</div><div class="line">                view=view,</div><div class="line">                indata=indata,</div><div class="line">                response=resp</div><div class="line">            )</div><div class="line"></div><div class="line">        <span class="keyword">return</span> resp</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, **kwargs)</span>:</span></div><div class="line">        <span class="keyword">return</span> self.open(<span class="string">'get'</span>, **kwargs)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, **kwargs)</span>:</span></div><div class="line">        <span class="keyword">return</span> self.open(<span class="string">'post'</span>, **kwargs)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">assertApiError</span><span class="params">(self, respdict, errcls)</span>:</span></div><div class="line">        self.assertIn(<span class="string">"status"</span>, respdict)</div><div class="line">        self.assertIn(<span class="string">"code"</span>, respdict[<span class="string">"status"</span>])</div><div class="line">        self.assertEqual(respdict[<span class="string">"status"</span>][<span class="string">"code"</span>], errcls.error_code)</div><div class="line"></div><div class="line">    <span class="comment"># 每进行一个测试都要执行下面这两个</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setUp</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">from</span> flask <span class="keyword">import</span> g, current_app</div><div class="line">        g.db.create_all()</div><div class="line">        self.dbsess = g.db.create_scoped_session()</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tearDown</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">from</span> flask <span class="keyword">import</span> g</div><div class="line">        <span class="keyword">del</span> self.dbsess</div><div class="line">        g.db.drop_all()</div></pre></td></tr></table></figure>
<p>看到这里真的很佩服志平…果然差距还是太大了呀ToT</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python几个常见高级用法]]></title>
      <url>https://blog.patrickcty.cc/2017/02/01/Python%E5%87%A0%E4%B8%AA%E5%B8%B8%E8%A7%81%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95/</url>
      <content type="html"><![CDATA[<h2 id="filter-function-iterable"><a href="#filter-function-iterable" class="headerlink" title="filter(function, iterable)"></a>filter(function, iterable)</h2><ul>
<li>function：过滤的条件</li>
<li>iterable：要被过滤的对象</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt;a=[1,2,3,4,5,6,7]</div><div class="line">&gt;&gt;&gt;filter(lambda x:x&gt;5, a)</div><div class="line">&gt;&gt;&gt;[6,7]</div></pre></td></tr></table></figure>
<h2 id="map-function-iterable-…"><a href="#map-function-iterable-…" class="headerlink" title="map(function, iterable, …)"></a>map(function, iterable, …)</h2><p>把函数作用在对象的每个元素中</p>
<ul>
<li>function：作用函数</li>
<li>iterable：作用对象</li>
<li><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt;a=[1,2,3]</div><div class="line">&gt;&gt;&gt;b=[4,5,6]</div><div class="line">&gt;&gt;&gt;map(lambda x,y:x+y, a,b)</div><div class="line">&gt;&gt;&gt;[5,7,9]</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="import-name-globals-None-locals-None-fromlist-level-0"><a href="#import-name-globals-None-locals-None-fromlist-level-0" class="headerlink" title="import(name, globals=None, locals=None, fromlist=(), level=0)"></a><strong>import</strong>(name, globals=None, locals=None, fromlist=(), level=0)</h2><p>用来import模块，另外返回值是模块对象</p>
<ul>
<li><p>import spam相当于</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">spam = __import__(&apos;spam&apos;, globals(), locals(), [], 0)</div></pre></td></tr></table></figure>
</li>
<li><p>import spam.ham相当于</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">spam = __import__(&apos;spam.ham&apos;, globals(), locals(), [], 0)</div></pre></td></tr></table></figure>
</li>
<li><p>from spam.ham import eggs, sausage as saus相当于</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">food = __import__(&apos;spam.ham&apos;, globals(), locals(), [eggs, sausage], 0)</div><div class="line">eggs = food.eggs</div><div class="line">sauage = food.sausage</div></pre></td></tr></table></figure>
</li>
<li><p>level是用于决定是否执行绝对导入。-1是绝对相对都会尝试，默认。0是绝对。正数表示相对当前模块的父目录的层数。</p>
</li>
</ul>
<h2 id="format"><a href="#format" class="headerlink" title="format()"></a>format()</h2><p>这是字符对象的函数，用来格式化字符串</p>
<ul>
<li><p>基本用法</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&apos;&#123;0&#125;,&#123;1&#125;&apos;.format(&apos;kzc&apos;,18)  </div><div class="line">&gt;&gt;&gt;&apos;kzc,18&apos;  </div><div class="line">&apos;&#123;&#125;,&#123;&#125;&apos;.format(&apos;kzc&apos;,18)  </div><div class="line">&gt;&gt;&gt;&apos;kzc,18&apos;  </div><div class="line">&apos;&#123;1&#125;,&#123;0&#125;,&#123;1&#125;&apos;.format(&apos;kzc&apos;,18)  </div><div class="line">&gt;&gt;&gt;&apos;18,kzc,18&apos;</div></pre></td></tr></table></figure>
</li>
<li><p>占位符<br>：前面是表示对应后面的第几个数<br>：后面一位表示用这个填充<br>：后面的&gt;表示向右对齐</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&apos;&#123;:&gt;8&#125;&apos;.format(&apos;189&apos;)</div><div class="line">&gt;&gt;&gt;&apos;     189&apos;</div><div class="line">&apos;&#123;:0&gt;8&#125;&apos;.format(&apos;189&apos;)</div><div class="line">&gt;&gt;&gt;&apos;00000189&apos;</div><div class="line">&apos;&#123;:a&gt;8&#125;&apos;.format(&apos;189&apos;)</div><div class="line">&gt;&gt;&gt;&apos;aaaaa189&apos;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python高级用法（一）]]></title>
      <url>https://blog.patrickcty.cc/2017/02/01/Python%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      <content type="html"><![CDATA[<p> Python高级用法（一）</p>
<h3 id="Python赋值方式可以有很多种，特别是对于可迭代变量，eg：list，tuple，字符串"><a href="#Python赋值方式可以有很多种，特别是对于可迭代变量，eg：list，tuple，字符串" class="headerlink" title="Python赋值方式可以有很多种，特别是对于可迭代变量，eg：list，tuple，字符串"></a>Python赋值方式可以有很多种，特别是对于可迭代变量，eg：list，tuple，字符串</h3><p>一个list的内容赋值给多个变量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; list1 = [&apos;this&apos;, &apos;is&apos;, &apos;a&apos;, &apos;list&apos;]</div><div class="line">&gt;&gt;&gt; a, *b, c = list1</div><div class="line">&gt;&gt;&gt; a</div><div class="line">&apos;this&apos;</div><div class="line">&gt;&gt;&gt; b</div><div class="line">[&apos;is&apos;, &apos;a&apos;]</div></pre></td></tr></table></figure></p>
<h3 id="Python对数据结构支持也不错"><a href="#Python对数据结构支持也不错" class="headerlink" title="Python对数据结构支持也不错"></a>Python对数据结构支持也不错</h3><p>队列<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; from collections import deque</div><div class="line">&gt;&gt;&gt; q = deque(maxlen=3)  # 容量为三的队列，多了就自动队头元素出队</div><div class="line">&gt;&gt;&gt; q.append(1)</div><div class="line">&gt;&gt;&gt; r = deque([1, 2, 3], maxlen=5)</div><div class="line">&gt;&gt;&gt; r.popleft()</div><div class="line">1</div><div class="line">&gt;&gt;&gt; r.pop()</div><div class="line">3</div></pre></td></tr></table></figure></p>
<p>堆<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; import heapq</div><div class="line">&gt;&gt;&gt; nums = [1, 8, 2, 23, 7, -4, 18, 23, 42, 37, 2]</div><div class="line">&gt;&gt;&gt; heapq.nlargest(5, nums)  # 最大的五个</div><div class="line">[42, 37, 23, 23, 18]</div><div class="line">&gt;&gt;&gt; heapq.nsmallest(5, nums)</div><div class="line">[-4, 1, 2, 2, 7]</div><div class="line">&gt;&gt;&gt; heapq.heapify(nums)  # 进行堆排序，每次出堆的都是最小的</div><div class="line">&gt;&gt;&gt; nums</div><div class="line">[-4, 2, 1, 23, 7, 2, 18, 23, 42, 37, 8]</div><div class="line">&gt;&gt;&gt; headpq.headpop(nums)</div><div class="line">-4</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python的静态方法与类方法]]></title>
      <url>https://blog.patrickcty.cc/2017/02/01/Python%E7%9A%84%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95%E4%B8%8E%E7%B1%BB%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">class Patrick:</div><div class="line">    </div><div class="line">    @classmethod</div><div class="line">    def cty(cls):</div><div class="line">        print(&apos;This is a class method&apos;)</div><div class="line">        </div><div class="line">    @staticmethod</div><div class="line">    def cheng():</div><div class="line">        print(&apos;This is a static method&apos;)</div><div class="line">        </div><div class="line">    @property</div><div class="line">    def tian(self, name=&apos;cty&apos;)</div><div class="line">        print(&apos;name &#123;&#125; cannot bechanged&apos;.format(name))</div><div class="line">        </div><div class="line">pat = Patrick()</div><div class="line">pat.cty()</div><div class="line">pat.cheng()</div></pre></td></tr></table></figure>
<p>二者分别用上面的装饰器来修饰</p>
<p>类方法以类名为参数，使用时与实例无关</p>
<p>静态方法使用时与实例无关</p>
<p>另外@property修饰的函数是一个只读函数</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[JNU练习赛——B]]></title>
      <url>https://blog.patrickcty.cc/2017/02/01/JNU%E7%BB%83%E4%B9%A0%E8%B5%9B%E2%80%94%E2%80%94B/</url>
      <content type="html"><![CDATA[<h1 id="Problem-B-Max-Sum"><a href="#Problem-B-Max-Sum" class="headerlink" title="Problem B:Max Sum"></a>Problem B:Max Sum</h1><p><a href="http://note.youdao.com/http://acm.hdu.edu.cn/diy/contest_showproblem.php?pid=1003&amp;cid=31109" target="_blank" rel="external">原题链接</a></p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote>
<p>Given a sequence a[1],a[2],a[3]……a[n], your job is to calculate the max sum of a sub-sequence. For example, given (6,-1,5,4,-7), the max sum in this sequence is 6 + (-1) + 5 + 4 = 14.</p>
</blockquote>
<h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><blockquote>
<p>The first line of the input contains an integer T(1&lt;=T&lt;=20) which means the number of test cases. Then T lines follow, each line starts with a number N(1&lt;=N&lt;=100000), then N integers followed(all the integers are between -1000 and 1000).</p>
</blockquote>
<h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><blockquote>
<p>For each test case, you should output two lines. The first line is “Case #:”, # means the number of the test case. The second line contains three integers, the Max Sum in the sequence, the start position of the sub-sequence, the end position of the sub-sequence. If there are more than one result, output the first one. Output a blank line between two cases.</p>
</blockquote>
<h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><blockquote>
<p>2</p>
<p>5 6 -1 5 4 -7</p>
<p>7 0 6 -1 1 -6 7 -5</p>
</blockquote>
<h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><blockquote>
<p>Case 1:</p>
<p>14 1 4</p>
<p>Case 2:</p>
<p>7 1 6</p>
<p>MarkDown显示不出来相应的效果，还是得看原题</p>
</blockquote>
<h2 id="个人感想"><a href="#个人感想" class="headerlink" title="个人感想"></a>个人感想</h2><p>这一题其实并不难，只是我很多情况都没考虑进去，所以提交了八次都是WA。自己的考虑问题的能力还需要锻炼！</p>
<p>比如start不为负，比如所有数全为负这些情况。</p>
<h2 id="我的思路"><a href="#我的思路" class="headerlink" title="我的思路"></a>我的思路</h2><p>我错误的认为第一个数必须是正数，其实负数，零都可以。</p>
<p>可以用sum来判断第一个数，假设sum是从指定的第一个数到现在的和，如果和大于零则第一个数不改变，小于零就变成新输入的数。但是如果从头到尾都是负数，也就是说sum值一直在变小，这样直接改就会出错，因此start值的更新要等到新的sum比原来的max值大，这时候更新start和end值。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">    <span class="keyword">int</span> T;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);  <span class="comment">// 测试的次数</span></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; T; ++i)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">int</span> n;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);  <span class="comment">// 序列的长度</span></div><div class="line">        <span class="keyword">int</span> sum;</div><div class="line">        <span class="keyword">int</span> num;</div><div class="line">        <span class="keyword">int</span> max;</div><div class="line">        <span class="keyword">int</span> pos = <span class="number">1</span>;</div><div class="line">        <span class="keyword">int</span> start = <span class="number">1</span>;</div><div class="line">        <span class="keyword">int</span> end = <span class="number">1</span>;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;num);</div><div class="line">        max = sum = num;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">2</span>; j &lt;= n; ++j)</div><div class="line">        &#123;</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;num);</div><div class="line">            <span class="keyword">if</span> (sum + num &lt; num)  <span class="comment">// 如果都是负数的话</span></div><div class="line">            &#123;</div><div class="line">                pos = j;  <span class="comment">// 开始点不能立即更新，应该和结束点一起更新，不然可能出现结束点比开始点还大的情况</span></div><div class="line">                sum = num;</div><div class="line">            &#125; <span class="keyword">else</span></div><div class="line">            &#123;</div><div class="line">                sum += num;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span> (sum &gt; max)</div><div class="line">            &#123;</div><div class="line">                max = sum;</div><div class="line">                start = pos;</div><div class="line">                end = j;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"Case %d:\n%d %d %d%s"</span>, i + <span class="number">1</span>, max, start, end, (i == (T - <span class="number">1</span>))?<span class="string">"\n\0"</span>:<span class="string">"\n\n"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>ACM是一个团队活动，就算我的思维有局限性，但是大家一起问题就不会一直卡住了～</p>
<p><a href="http://blog.csdn.net/bruce_zeng/article/details/8818304" target="_blank" rel="external">一个参考范例</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[JavaSrcipt入门基本知识(2)]]></title>
      <url>https://blog.patrickcty.cc/2017/02/01/JavaSrcipt%E5%85%A5%E9%97%A8%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86(2)/</url>
      <content type="html"><![CDATA[<h1 id="JavaSrcipt入门基本知识-2"><a href="#JavaSrcipt入门基本知识-2" class="headerlink" title="JavaSrcipt入门基本知识(2)"></a><a href="http://www.imooc.com/learn/10" target="_blank" rel="external">JavaSrcipt入门基本知识(2)</a></h1><h2 id="常用对象"><a href="#常用对象" class="headerlink" title="常用对象"></a>常用对象</h2><ul>
<li><p>数组</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var array = new Array();</div></pre></td></tr></table></figure>
</li>
<li><p>日期</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var date = new Date();</div></pre></td></tr></table></figure>
</li>
<li><p>字符串</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var string = new String();</div></pre></td></tr></table></figure>
</li>
<li><p>数学(固有的对象，无需创建)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var mypi=Math.PI; </div><div class="line">var myabs=Math.abs(-15);</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="浏览器对象"><a href="#浏览器对象" class="headerlink" title="浏览器对象"></a>浏览器对象</h2><h3 id="计时器"><a href="#计时器" class="headerlink" title="计时器"></a>计时器</h3><ul>
<li><p>setInterval(代码,交互时间)</p>
<ul>
<li>代码：要调用的函数或要执行的代码串。</li>
<li>交互时间：周期性执行或调用表达式之间的时间间隔，以毫秒计（1s=1000ms）。</li>
<li>返回值：一个可以传递给 clearInterval() 从而取消对”代码”的周期性执行的值。</li>
<li>作用：在执行时,从载入页面后每隔指定的时间执行代码。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var time=new Date();          </div><div class="line">var attime=time.getHours()+&quot;:&quot;+time.getMinutes()+&quot;:&quot;+time.getSeconds();</div><div class="line">document.getElementById(&quot;clock&quot;).value = attime;  // id为clock的显示当前时间,并且每秒改变</div><div class="line">set Interval(clock, 1000);</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>clearInterval(id_of_setInterval)</p>
<ul>
<li>参数是上面提到的返回值</li>
<li>作用：结束上面的计时器</li>
</ul>
</li>
<li><p>setTimeout(代码,延迟时间)</p>
<ul>
<li>要调用的函数或要执行的代码串。</li>
<li>延时时间：在执行代码前需等待的时间，以毫秒为单位（1s=1000ms)。</li>
<li>作用：在载入后延迟指定时间后,去执行一次表达式,<strong>仅执行一次</strong>。</li>
<li>返回值：和之前的类似</li>
</ul>
</li>
<li><p>clearTimeout(id_of_setTimeout)</p>
<ul>
<li>和之前的基本一样</li>
</ul>
</li>
</ul>
<h3 id="history对象"><a href="#history对象" class="headerlink" title="history对象"></a>history对象</h3><p>history对象记录了浏览过的URL，可以通过它来前进后退。<br>注意：每个浏览器窗口，每个标签都有自己的history对象与特定的window对象关联</p>
<ul>
<li>window.history.length为当前窗口浏览历史总长度</li>
<li>window.history.forward()加载下一个URL</li>
<li>window.history.back()加载上一个URL</li>
<li>window.history.go(number)加载某个具体页面，根据数字来判定向前与向后</li>
</ul>
<h3 id="location对象"><a href="#location对象" class="headerlink" title="location对象"></a>location对象</h3><p>用于获取或设置窗体的URL，并且可以用于解析URL。</p>
<h3 id="navigator对象"><a href="#navigator对象" class="headerlink" title="navigator对象"></a>navigator对象</h3><p>包含有关浏览器的信息，通常用于检测浏览器与操作系统的版本。</p>
<p>用navigator.userAgent来判断使用浏览器种类从而来处理兼容性问题</p>
<h3 id="screen对象"><a href="#screen对象" class="headerlink" title="screen对象"></a>screen对象</h3><p>用于获取用户的屏幕信息。</p>
<p>用法：window.screen.属性</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[JavaSrcipt入门基本知识]]></title>
      <url>https://blog.patrickcty.cc/2017/02/01/JavaSrcipt%E5%85%A5%E9%97%A8%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86/</url>
      <content type="html"><![CDATA[<h1 id="JavaSrcipt入门基本知识"><a href="#JavaSrcipt入门基本知识" class="headerlink" title="JavaSrcipt入门基本知识"></a>JavaSrcipt入门基本知识</h1><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><ul>
<li><p>JS的数组和Java的很像，要使用都得先声明再new</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> array = <span class="keyword">new</span> <span class="built_in">Array</span>()  <span class="comment">// Array是数组类名，可以不带参数</span></div><div class="line"><span class="keyword">var</span> array = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">5</span>)  <span class="comment">// 五个元素</span></div><div class="line"><span class="keyword">var</span> array = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">3</span>， <span class="number">4</span>， <span class="number">5</span>)  <span class="comment">// 声明并赋值</span></div></pre></td></tr></table></figure>
</li>
<li><p>数组规定很松散，可以随意增加元素</p>
</li>
<li>用.length来查看长度</li>
<li><p>二维数组</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"> // 方法一</div><div class="line"> var myarr=new Array();  //先声明一维 </div><div class="line">for(var i=0;i&lt;2;i++)&#123;   //一维长度为2</div><div class="line">   myarr[i]=new Array();  //再声明二维 </div><div class="line">   for(var j=0;j&lt;3;j++)&#123;   //二维长度为3</div><div class="line">   myarr[i][j]=i+j;   // 赋值，每个数组元素的值为i+j</div><div class="line">   &#125;</div><div class="line"> &#125;</div><div class="line"> </div><div class="line"> // 方法二</div><div class="line"> var Myarr = [[0 , 1 , 2 ],[1 , 2 , 3]]</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h2><ul>
<li>onclick()鼠标点击事件</li>
<li>onmouseover()鼠标经过事件</li>
<li>onmouseout()鼠标移开事件</li>
<li>onfocus()光标聚集事件</li>
<li>onblur()失焦事件</li>
<li>onselect()内容选中事件</li>
<li>onchange()文本框内容改变事件</li>
<li>onload()加载事件，一般在body标签里面</li>
<li>onoutload()卸载事件，主要是点击链接跳转的时候触发</li>
</ul>
<h2 id="依旧是一个练习"><a href="#依旧是一个练习" class="headerlink" title="依旧是一个练习"></a>依旧是一个练习</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span> 事件<span class="tag">&lt;/<span class="name">title</span>&gt;</span>  </div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="javascript"></span></div><div class="line">   <span class="function"><span class="keyword">function</span> <span class="title">count</span>(<span class="params"></span>)</span>&#123;</div><div class="line">       <span class="keyword">var</span> a = <span class="built_in">document</span>.getElementById(<span class="string">"txt1"</span>).value;  <span class="comment">// .value不要忘，要不然就是一个对象</span></div><div class="line">       <span class="keyword">var</span> method = <span class="built_in">document</span>.getElementById(<span class="string">"select"</span>).value;</div><div class="line">       <span class="keyword">var</span> b = <span class="built_in">document</span>.getElementById(<span class="string">"txt2"</span>).value;</div><div class="line">       <span class="keyword">var</span> result;</div><div class="line">       <span class="keyword">switch</span> (method)</div><div class="line">       &#123;</div><div class="line">           <span class="keyword">case</span> <span class="string">"+"</span>:  <span class="comment">// JS字符也是双引号</span></div><div class="line">               result = <span class="built_in">parseInt</span>(a) + <span class="built_in">parseInt</span>(b);</div><div class="line">               <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> <span class="string">"-"</span>:</div><div class="line">                result = a - b;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> <span class="string">"*"</span>:</div><div class="line">               result = a * b;</div><div class="line">               <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> <span class="string">"/"</span>:</div><div class="line">                result = a / b;</div><div class="line">       &#125;</div><div class="line">        <span class="built_in">document</span>.getElementById(<span class="string">"fruit"</span>).value = result;  <span class="comment">// 给文本框的文本加入内容也是直接赋值就可以了</span></div><div class="line">   &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span> </div><div class="line"> <span class="tag">&lt;/<span class="name">head</span>&gt;</span> </div><div class="line"> <span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'text'</span> <span class="attr">id</span>=<span class="string">'txt1'</span> /&gt;</span> </div><div class="line">   <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">'select'</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">'+'</span>&gt;</span>+<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"-"</span>&gt;</span>-<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"*"</span>&gt;</span>*<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"/"</span>&gt;</span>/<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="name">select</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'text'</span> <span class="attr">id</span>=<span class="string">'txt2'</span> /&gt;</span> </div><div class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'button'</span> <span class="attr">value</span>=<span class="string">' = '</span> <span class="attr">onclick</span>=<span class="string">"count()"</span>/&gt;</span> <span class="comment">&lt;!--通过 = 按钮来调用创建的函数，得到结果--&gt;</span> </div><div class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'text'</span> <span class="attr">id</span>=<span class="string">'fruit'</span> /&gt;</span>   </div><div class="line"> <span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[JavaSrcipt入门基本操作]]></title>
      <url>https://blog.patrickcty.cc/2017/02/01/JavaSrcipt%E5%85%A5%E9%97%A8%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</url>
      <content type="html"><![CDATA[<h1 id="JavaSrcipt入门基本操作"><a href="#JavaSrcipt入门基本操作" class="headerlink" title="JavaSrcipt入门基本操作"></a>JavaSrcipt入门基本操作</h1><h2 id="基本知识"><a href="#基本知识" class="headerlink" title="基本知识"></a>基本知识</h2><ul>
<li><script type="text/javascript"></script>插入JS代码</li>
<li><script src="script.js"></script>引用外部的JS代码</li>
<li>用var声明变量</li>
<li>定义函数<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">function 函数名()</div><div class="line">&#123;</div><div class="line">     函数代码;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="互动方法"><a href="#互动方法" class="headerlink" title="互动方法"></a>互动方法</h2><ul>
<li>document.write()直接在网页中输出内容</li>
<li>alert()弹窗，只有确定</li>
<li>confirm()弹窗，确定取消选择，返回值为boolean型</li>
<li>prompt(str1, str2)输入，输入内容作为返回值，取消则返回null</li>
<li>window.open([URL], [窗口名称], [参数字符串])打开窗口</li>
<li>window.close()/<window object="">.close关闭某个窗口</window></li>
</ul>
<h2 id="DOM操作"><a href="#DOM操作" class="headerlink" title="DOM操作"></a>DOM操作</h2><ul>
<li>document.getElementById(“id”)通过id获取元素，获取的是对象，如果要读取内容后面加上.innerHTML</li>
<li>Object.style.property其中property是具体的样式，通过赋值可以改变样式</li>
<li>Object.style.display对应CSS的display</li>
<li>Object.className操作类名</li>
</ul>
<h2 id="小小的实例"><a href="#小小的实例" class="headerlink" title="小小的实例"></a>小小的实例</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE HTML&gt;</div><div class="line"></div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">&lt;meta http-equiv=&quot;Content-Type&quot; Content=&quot;text/html; charset=utf-8&quot; /&gt;</div><div class="line">&lt;title&gt;javascript&lt;/title&gt;</div><div class="line">&lt;style type=&quot;text/css&quot;&gt;</div><div class="line">body&#123;font-size:12px;&#125;</div><div class="line">#txt&#123;</div><div class="line">    height:400px;</div><div class="line">    width:600px;</div><div class="line">    border:#333 solid 1px;</div><div class="line">	padding:5px;&#125;</div><div class="line">p&#123;</div><div class="line">	line-height:18px;</div><div class="line">	text-indent:2em;&#125;</div><div class="line">&lt;/style&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">  &lt;h2 id=&quot;con&quot;&gt;JavaScript课程&lt;/H2&gt;</div><div class="line">  &lt;div id=&quot;txt&quot;&gt; </div><div class="line">     &lt;h5&gt;JavaScript为网页添加动态效果并实现与用户交互的功能。&lt;/h5&gt;</div><div class="line">        &lt;p&gt;1. JavaScript入门篇，让不懂JS的你，快速了解JS。&lt;/p&gt;</div><div class="line">        &lt;p&gt;2. JavaScript进阶篇，让你掌握JS的基础语法、函数、数组、事件、内置对象、BOM浏览器、DOM操作。&lt;/p&gt;</div><div class="line">        &lt;p&gt;3. 学完以上两门基础课后，在深入学习JavaScript的变量作用域、事件、对象、运动、cookie、正则表达式、ajax等课程。&lt;/p&gt;</div><div class="line">  &lt;/div&gt;</div><div class="line">  &lt;form&gt;</div><div class="line">  &lt;!--当点击相应按钮，执行相应操作，为按钮添加相应事件--&gt;</div><div class="line">    &lt;input type=&quot;button&quot; value=&quot;改变颜色&quot; onclick=&quot;changeColor()&quot; /&gt;  </div><div class="line">    &lt;input type=&quot;button&quot; value=&quot;改变宽高&quot; onclick=&quot;changeSize()&quot; /&gt;</div><div class="line">    &lt;input type=&quot;button&quot; value=&quot;隐藏内容&quot; onclick=&quot;hide()&quot; /&gt;</div><div class="line">    &lt;input type=&quot;button&quot; value=&quot;显示内容&quot; onclick=&quot;show()&quot; /&gt;</div><div class="line">    &lt;input type=&quot;button&quot; value=&quot;取消设置&quot; onclick=&quot;cancel()&quot; /&gt;</div><div class="line">  &lt;/form&gt;</div><div class="line">  &lt;script type=&quot;text/javascript&quot;&gt;</div><div class="line">  var obj = document.getElementById(&quot;txt&quot;);</div><div class="line">  //定义&quot;改变颜色&quot;的函数</div><div class="line">  function changeColor()</div><div class="line">  &#123;</div><div class="line">      obj.style.color = &quot;yellow&quot;;  // 记得加引号！！！</div><div class="line">      obj.style.backgroundColor = &quot;pink&quot;;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  //定义&quot;改变宽高&quot;的函数</div><div class="line">  function changeSize()</div><div class="line">  &#123;</div><div class="line">      obj.style.width = &quot;100px&quot;;  // 记得加引号！！！</div><div class="line">      obj.style.height = &quot;1000px&quot;;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  //定义&quot;隐藏内容&quot;的函数</div><div class="line">  function hide()</div><div class="line">  &#123;</div><div class="line">      obj.style.display = &quot;none&quot;;  // diaplay不要拼错</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  //定义&quot;显示内容&quot;的函数</div><div class="line">  function show()</div><div class="line">  &#123;</div><div class="line">      obj.style.display = &quot;block&quot;;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  //定义&quot;取消设置&quot;的函数</div><div class="line">  function cancel()</div><div class="line">  &#123;</div><div class="line">      var cel = confirm(&quot;Are you sure?&quot;);</div><div class="line">      if (cel)</div><div class="line">      &#123;</div><div class="line">          // 删除了style属性就相当于取消了所有手动设置</div><div class="line">          obj.removeAttribute(&quot;style&quot;);  </div><div class="line">      &#125;</div><div class="line">  &#125;</div><div class="line">  &lt;/script&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
<p>上面这个实例还坑了我一把…</p>
<p>赋值都是要带引号的啊！！</p>
<p>一开始五个都是错的…</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[https，想要使用你没那么容易]]></title>
      <url>https://blog.patrickcty.cc/2017/02/01/https%EF%BC%8C%E6%83%B3%E8%A6%81%E4%BD%BF%E7%94%A8%E4%BD%A0%E6%B2%A1%E9%82%A3%E4%B9%88%E5%AE%B9%E6%98%93/</url>
      <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>今天在搞博客的时候突然想给域名加上https，正好瞟到腾讯云里面又免费的SSL证书可以申请，于是抱着试一试的心态点了进去。没想到耗费了大半个下午。</p>
<h2 id="得到SSL证书"><a href="#得到SSL证书" class="headerlink" title="得到SSL证书"></a>得到SSL证书</h2><p>其实获得SSL证书并不难，由于域名还有服务器都在腾讯云上，所以在腾讯云上申请一个证书就比较容易了。</p>
<p>刚开始的时候我还以为http变成https非常困难，后来知道只用申请一个SSL证书就可以https加持了，然而事情就是这么简单么？</p>
<p>一开始我只想给我的个人博客加上https，结果在申请SSL证书的时候卡住了，倒是jnugeek.cn很快就申请通过了，于是决定先给jnugeek.cn加上https。</p>
<h2 id="显示https没那么容易"><a href="#显示https没那么容易" class="headerlink" title="显示https没那么容易"></a>显示https没那么容易</h2><p>根据腾讯云的文档，在nginx上使用https只用下载证书然后把证书安装在相应的地方并修改nginx的配置文件就可以了，在改的时候我也遇到了很多的坑，不过也这也加深了我对nginx的理解。下面附上nginx的相关配置：</p>
<pre><code>server {
    listen 443;  # https监听443端口
    server_name www.domain.com; #填写绑定证书的域名
    ssl on;
    ssl_certificate 1_www.domain.com_bundle.crt;
    ssl_certificate_key 2_www.domain.com.key;
    ssl_session_timeout 5m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #按照这个协议配置
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;#按照这个套件配置
    ssl_prefer_server_ciphers on;
    location / {
        root   html; #站点目录
        index  index.html index.htm;
    }
}

server {
    listen 80;  # http监听80端口
    server_name www.domain.com;
    rewrite ^(.*) https://$host$1 permanent;  # 把80进来的请求重定向到https
}
</code></pre><p>其中每个server都是独立的虚拟机，因为http和https本身就是不相互兼容的，所以这里指定两个也不奇怪了。</p>
<p>关于nginx的配置<a href="https://my.oschina.net/u/1156660/blog/364955" target="_blank" rel="external">这个</a>说的很清楚了。</p>
<p> 刚开始我就在server的配置吃了一点小亏，我只是机械的把ssl的部分加上去了，结果果然是没什么卵用，直到改成上面这种样式才终于可以了！</p>
<p> 于是乎在浏览器就惊喜的看到了https～而且即使输入的是http也会自动定向到https～到这里的时候我真的超级开心！然而我还是高兴地太早了，https的那把绿色的小锁并没有显示出来…</p>
<h2 id="网站中含有不安全的内容"><a href="#网站中含有不安全的内容" class="headerlink" title="网站中含有不安全的内容"></a>网站中含有不安全的内容</h2><p>使用上了https后并没有想象中的那么棒，相反很多问题出现了。</p>
<p>当我用Ubuntu自带的浏览器打开时我发现它提示网站中含有不安全的内容，Google之后发现是因为https和http混合使用。网站上那些放在七牛云上的静态文件现在反而让网站成为了不安全网站，而且后来我在Chrome上看的时候发现js都被屏蔽了，图片也是显示黄色三角警告。</p>
<p>后来我看到，黑客可能通过http对js文件进行篡改，而js代码又是可执行的，于是可以造成很严重的后果，这样看来js被屏蔽也是可以理解的。</p>
<p>为了解决这个问题，我打算把静态文件转系到一个https的服务器上，然而试了腾讯云的对象储存服务，以及七牛云的相关服务后发现依然是http。</p>
<p>很多大公司他们的静态文件都是放在自己专门的服务器上的，这样的话就不用依靠第三方的了，这对于我们这种学生党，个人开发者就不是很好了…不过其实七牛云上面好像有相应的https服务，这是然而当时因为另外的问题决定暂时放弃https了。</p>
<p>在折腾对象储存服务，还接触到了CDN，CDN是把各个不同的请求，根据地域等从不同的服务器分发，这样就能加快加载速度了。</p>
<p>之后我还发现了https问题并不只在静态文件上，post的时候也出现了问题，当我提交表单的时候并没有跳转回相应的界面，而是最简陋的白色背景界面…这时候我才意识到这样贸然上https确实不太明智，于是决定先回到http了。然而我改回http之后还是有一些问题，看来是网站本身的问题了，这锅https不背！</p>
<p>其实关于ajax，如果是相对路径那么就没影响，绝对路径就要考虑http与https的问题了。</p>
<p>但是当我在服务器中改变了相应的文件之后，发现依旧是https，然而刷新的时候会报错，后来我看到一旦浏览器使用https建立了安全连接之后就不会再用http访问了…即使我改过来了依旧不行…不过好在应该只有我受影响了…</p>
<p>https果然不是那么容易就能搞定的啊。（说不定只是我太菜了而已…现在看来主要是静态文件加载的问题，以及网站本身的一些bug..总之上https还是要权衡，毕竟我这个不涉及到隐私信息，支付等。</p>
<h2 id="关于https"><a href="#关于https" class="headerlink" title="关于https"></a>关于https</h2><p>https比起http要安全的原因就是https在浏览器和应用中另外还加了一层，在这一层中他对明文传输的TCP/UDP进行了加密，这样就保证了相应的安全。</p>
<p>还有就是网站加入了SSL证书，这个证书很难被伪造不被发现，也就是说长得很像钓鱼链接就更容易被识别啦。</p>
<h2 id="也学了好多域名的知识呢"><a href="#也学了好多域名的知识呢" class="headerlink" title="也学了好多域名的知识呢"></a>也学了好多域名的知识呢</h2><p>另外因为最近在搞个人博客，为了搞得更好就又申请了一个域名，同时也把域名升级到了https～虽然并没有本质的区别，但是装逼度高了不少～</p>
<h3 id="GitHub-Pages的域名"><a href="#GitHub-Pages的域名" class="headerlink" title="GitHub Pages的域名"></a>GitHub Pages的域名</h3><p>对于一个GitHub账号来说，GitHub Pages可以有很多，但是以自己的账号名+github+io为域名的GitHub Pages只有一个。而对于很多生成的博客来说，只有用这个域名才不会出现路径上的问题。而这样的域名只有你把仓库名也改成相应的自己的账号名+github+io就可以了，这是一个坑一定要注意。</p>
<p>如果想使用自己的域名，则两步走：</p>
<ul>
<li>在域名解析控制台里面加入一个记录类型为CNAME的记录，并把记录值改为你的原本域名</li>
<li>直接在GitHub的设置你面改成你的自己的域名</li>
</ul>
<h3 id="关于域名解析"><a href="#关于域名解析" class="headerlink" title="关于域名解析"></a>关于域名解析</h3><p>我们一开始申请到的域名都是一级域名，而我们平常看到的www.xxxx.com是二级域名。</p>
<p>那些www甚至blog打头的都是经过解析的结果，其实只要在域名解析中指定主机就可以了。</p>
<p>主要的记录类型：</p>
<ul>
<li>CNAME：将域名指向另一个域名</li>
<li>A：将域名指向一个ipv4地址</li>
</ul>
<p>主机记录：</p>
<ul>
<li>就是二级域名打头的那些，如果是@就使用一级域名</li>
</ul>
<p>记录值就与上面的记录类型相对应就可以了。</p>
<h3 id="给GitHub-Pages的自定义域名加上https"><a href="#给GitHub-Pages的自定义域名加上https" class="headerlink" title="给GitHub Pages的自定义域名加上https"></a>给GitHub Pages的自定义域名加上https</h3><p>直接加证书是不是很现实的，因为服务器是GitHub上的，所以就要用另外的方法了。</p>
<p>这里用到了CloudFlare。原理就是：</p>
<ul>
<li>域名使用CloudFlare的域名服务器解析</li>
<li>它提供的服务处于我们的网站服务器和我们的网站访问者之间，其原理是缓存了我们服务器上的页面，所以实际用户建立的 HTTPS 连接是用户的浏览器与 Kloudsec 之间的。<a href="http://mazhuang.org/2016/05/21/enable-https-for-github-pages/" target="_blank" rel="external">本句出处</a></li>
</ul>
<p><a href="https://segmentfault.com/a/1190000007740693" target="_blank" rel="external">相关教程</a></p>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>折腾了一大圈，尽管结果不尽如人意，不过还是学到了不少东西的。</p>
<p>另外自己还是太弱了，以后还要继续加油呀。</p>
<p>P.S.为了搞这个都没有复习…囧…</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo与模块化与自动化]]></title>
      <url>https://blog.patrickcty.cc/2017/02/01/Hexo%E4%B8%8E%E6%A8%A1%E5%9D%97%E5%8C%96%E4%B8%8E%E8%87%AA%E5%8A%A8%E5%8C%96/</url>
      <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><ul>
<li>关于数据结构的创新作业，其实我并没有什么相关思路，一是因为自己知识有限，做不出来精美的app或者前端界面等</li>
<li>但是自己对互联网前沿的知识还是有一定关注的，正好最近搭建一个个人博客的欲望也比较强烈，于是借着这个机会来对Hexo搭建博客进行一个比较深入的分析</li>
<li>注：因为能力有限，相关的代码基本都是Hexo和第三方主题自带。</li>
</ul>
<h1 id="传统的搭建一个博客的方法"><a href="#传统的搭建一个博客的方法" class="headerlink" title="传统的搭建一个博客的方法"></a>传统的搭建一个博客的方法</h1><ul>
<li>自己编写前端页面</li>
<li>自己编写后台逻辑处理前端请求，连接数据库</li>
<li>将博客部署到服务器上</li>
</ul>
<p>我们可以感受到传统搭建一个博客的步骤是十分麻烦的，尽管我只列举了三条，但是事实上每一步的步骤都要耗费大量的经历。不过在开源浪潮的推动下，如今博客的搭建已经大大简化了，而我今天要分析的Hexo就是一个十分好用的高度模块化，自动化，可定制的个人博客。</p>
<h1 id="WordPress"><a href="#WordPress" class="headerlink" title="WordPress"></a>WordPress</h1><p>说到博客就不得不提到WordPress，作为自己搭建的个人博客的鼻祖，WordPress在博客里面占有重要的分量，尽管这么多年来体系越来越完善。但是体量大，需要PHP编程相关知识，以及同样的部署问题，到如今显得有些“不合群”了。</p>
<h1 id="为什么选择Hexo"><a href="#为什么选择Hexo" class="headerlink" title="为什么选择Hexo"></a>为什么选择Hexo</h1><ul>
<li>开源</li>
<li>安装使用简单</li>
<li>高度模块化，可定制化</li>
<li>高度自动化，操作极度简化</li>
</ul>
<h1 id="关于Hexo的分析"><a href="#关于Hexo的分析" class="headerlink" title="关于Hexo的分析"></a>关于Hexo的分析</h1><p>Hexo是开源并且基于node.js编写成的，Hexo也是通过node来进行页面的渲染，通过更改配置文件可以进行信息的定制。</p>
<p>同时Hexo模块化很强，主体的Hexo框架集成了基本的逻辑，theme文件夹里面的内容为定制提供了很大的便利，同样theme文件夹里面的内容也是根据配置文件与留出来的相应的api进行相应的页面渲染。</p>
<p>另外，依赖于Git进行版本控制使得使用GitHub Pages来部署更简单。</p>
<h2 id="一键安装"><a href="#一键安装" class="headerlink" title="一键安装"></a>一键安装</h2><ul>
<li>由于Hexo基于node.js以及通过Git来进行版本控制</li>
<li>因此安装好node.js以及Git后直接用npm就可以安装Hexo了</li>
</ul>
<h2 id="一键初始化"><a href="#一键初始化" class="headerlink" title="一键初始化"></a>一键初始化</h2><ul>
<li>刚安装的Hexo的配置文件已经基本上能使用了，自己稍微修改就可以更个人化</li>
<li><p>渲染静态文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo g  // 或者使用全称hexo generate</div></pre></td></tr></table></figure>
</li>
<li><p>运行Hexo服务</p>
<ul>
<li>这样Hexo就会在本机的4000端口运行（默认）</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo s  // 全称hexo server</div></pre></td></tr></table></figure>
<ul>
<li>部署Hexo<ul>
<li>只用在配置文件指定相应的部署路径就可以很快部署了</li>
<li>支持GitHub Pages和Heroku等多种形式</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo d  // hexo deploy</div></pre></td></tr></table></figure>
<p>经过以上几步就可以看到自己的博客了。</p>
<h3 id="值得一提的是"><a href="#值得一提的是" class="headerlink" title="值得一提的是"></a>值得一提的是</h3><ul>
<li>这几个步骤也体现了自动化</li>
<li>使用者只用专注于内容</li>
<li>其他页面逻辑都会由hexo来处理</li>
<li>甚至版本控制hexo都自动进行了，省略了add和commit的步骤</li>
</ul>
<h2 id="高度定制"><a href="#高度定制" class="headerlink" title="高度定制"></a>高度定制</h2><ul>
<li>你可以在theme里面定制你自己的页面样式，目录等等，不过如果要自己定制的话必须遵循hexo的规范，不然页面可能渲染不出来</li>
<li>有许多第三方模块可以自己选择，比如评论，流量统计等，安装也十分简单，npm来进行就可以了</li>
</ul>
<h2 id="至于发表博客"><a href="#至于发表博客" class="headerlink" title="至于发表博客"></a>至于发表博客</h2><ul>
<li>直接把相应md文件放到对应的文件夹，剩下的就不需要你来管了</li>
<li>使用代码直接就生成新文章<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new [layout] &lt;title&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="Hexo的缺点"><a href="#Hexo的缺点" class="headerlink" title="Hexo的缺点"></a>Hexo的缺点</h2><ul>
<li>高度模块化的一个弊病就是自由度会相应降低，不过好在Hexo的主体框架也比较完善了，因此基本也不会遇到自己想要的功能实现不了这种情况</li>
</ul>
<h2 id="最后一些脑洞"><a href="#最后一些脑洞" class="headerlink" title="最后一些脑洞"></a>最后一些脑洞</h2><p>如果要把Hexo和数据结构这门课程联系起来的话</p>
<ul>
<li>由于Hexo的渲染页面功能十分强大，而数据结构又是一个相对抽象的内容</li>
<li>所以可以利用Hexo的优势来进行==代码可视化==</li>
<li>也就是说你看到的图，树不再是代码中的那些抽象结构，而是真正的表现在页面的图形</li>
<li>这样也能降低许多学习门槛吧，不过现在因为能力问题，只能假想了，以后能力达到了就会去进行相应的尝试</li>
</ul>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>生命不息，创新不止。但是创新是基于扎实的基本功的，只有自己能力充分了创新才不会那么的苍白。这也是自己继续要做的吧，打好基本功，同时不要安于现状，失去创新的想法！</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Go Home]]></title>
      <url>https://blog.patrickcty.cc/2017/02/01/Go%20Home/</url>
      <content type="html"><![CDATA[<h1 id="Go-Home"><a href="#Go-Home" class="headerlink" title="Go Home"></a>Go Home</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;明天就要回家了。待在学校了这么多天，从放假前的期待，到真正开始留校时候的百无聊赖，到吕方也走的时候的小小的绝望，到最后的适应以及淡然。（然而连兴安都关了这就没法适应了。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这么多天中一个重要的情绪就是孤单寂寞，这种一个人的时候我也经历过，但是从来没有过这么深刻的感受。但其实，以前经历的一个人和现在的一个人是完全不一样的。不是因为独自一人而寂寞，而是没有可以找到的人。就是这样的情况，独自一个人在一个城市。朋友都离开了，这种感觉和那些独自一人去远方求学，在异国他乡举目无亲的感觉有点像，不过现在是完全没有人…连认识人的机会都没有。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;不过说了这么多，阻碍我的最大因素最后倒不是这种孤独感，而是物质的缺乏…三餐都没有着落…店铺全都关门了…我也想静下心来搞自己的事，然而要想着吃饭的问题…一天几桶泡面和面包…真的有点反胃了…</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;无论如何，总归是要回家了，虽然家里也不见得那么美好，不过好歹我知道那些人就在那里，我知道我不用为吃的问题发愁，只用考虑吃什么～恩，下次留宿也要找到一起的人～</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[GDUT新生赛]]></title>
      <url>https://blog.patrickcty.cc/2017/02/01/GDUT%E6%96%B0%E7%94%9F%E8%B5%9B%E2%80%94D(%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92)/</url>
      <content type="html"><![CDATA[<h1 id="Problem-D-勤奋的涟漪2"><a href="#Problem-D-勤奋的涟漪2" class="headerlink" title="Problem D: 勤奋的涟漪2"></a>Problem D: 勤奋的涟漪2</h1><p><a href="http://note.youdao.com/" target="_blank" rel="external">原题链接</a></p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote>
<p>涟漪进入集训队后，他会去实验室训练或者去操场锻炼。 接下来n天，每天的情况是一下4种中的一种： 1.当天体育馆关门了和没有训练赛 2.当天体育馆关门了和有训练赛 3.当天体育馆开放和没有训练赛 4.当天体育馆开放和有训练赛 涟漪知道之后n天的情况。 涟漪每一天可以休息，或者打训练赛（当天有训练赛）或者运动（当天体育馆开放）。 涟漪要制定一个训练计划，决定每天干什么，但是涟漪不会连续两天都运动或者连续两天都打训练赛， 请帮涟漪找出她最少休息的天数（她不打训练赛和运动）。 休息的时候，她会做下面的数学题</p>
<p><img src="https://okdkbnczs.qnssl.com/image/ACM/fx.png" alt="image"></p>
</blockquote>
<h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><blockquote>
<p>第一行一个整数t（t&lt;=100）,代表测试数据， 第二行一个整数 n（1&lt;=n&lt;=100） 第三行有n个数a1,a2,a3,….an(0&lt;=ai&lt;=3)) ai=0 ,代表第一种情况 ai=1,代表第二种情况 ai=2 ,代表第三种情况 ai=3 ,代表第四种情况</p>
</blockquote>
<h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><blockquote>
<p>输出 一个数 表示（涟漪休息的天数） 乘以（数学题的答案的积）。</p>
</blockquote>
<h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><blockquote>
<p>4</p>
<p>7</p>
<p>1 3 3 2 1 2 3</p>
<p>1</p>
<p>1</p>
<p>1</p>
<p>2</p>
<p>1</p>
<p>3</p>
</blockquote>
<h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><blockquote>
<p>0</p>
<p>0</p>
<p>0</p>
<p>0</p>
</blockquote>
<h2 id="个人感想"><a href="#个人感想" class="headerlink" title="个人感想"></a>个人感想</h2><p>当他们讲题的时候说这是动态规划我是一脸懵逼的。另外还是要自己思考，直接接受别人的思想不仅收获很小而且还很容易茫然。</p>
<h2 id="我的思路"><a href="#我的思路" class="headerlink" title="我的思路"></a>我的思路</h2><p>这题的限制条件就是连续两天不能是相同的状态，休息除外，因此因该有一个ystday来储存上一天的行为，workday来储存不是休息的天数</p>
<p>ystday值：</p>
<ul>
<li>0：休息</li>
<li>1：训练</li>
<li>2：锻炼</li>
<li>3：锻炼或者训练</li>
</ul>
<p>然后根据当天的情况来进行相应的判断</p>
<p>当天情况：</p>
<ul>
<li>0：只能休息，workday不变</li>
<li>1：训练或者休息，只要ystday不是1，workday就加一，并且把ystday变为1；否则workday不变，ystday变为0</li>
<li>2：锻炼或者休息，和上面的类似</li>
<li>3：三者都可以，workday加一，如果ystday是1或者2，ystday就变成2或者1，否则ystday变为3</li>
<li>【其实ystday的0和3可以合并】</li>
</ul>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"><span class="comment">//    freopen("test.in", "r", stdin);</span></div><div class="line">    <span class="keyword">int</span> t;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</div><div class="line">    <span class="keyword">while</span> (t--)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">int</span> n;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</div><div class="line">        <span class="keyword">int</span> ystday, workday;</div><div class="line">        ystday = workday = <span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</div><div class="line">        &#123;</div><div class="line">            <span class="keyword">int</span> today;</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;today);</div><div class="line">            <span class="keyword">switch</span> (today)</div><div class="line">            &#123;</div><div class="line">                <span class="keyword">case</span> <span class="number">0</span>:</div><div class="line">                    ystday = <span class="number">0</span>;</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                <span class="keyword">case</span> <span class="number">1</span>:</div><div class="line">                    <span class="keyword">if</span> (ystday != <span class="number">1</span>)</div><div class="line">                    &#123;</div><div class="line">                        ystday = <span class="number">1</span>;</div><div class="line">                        workday += <span class="number">1</span>;</div><div class="line">                    &#125; <span class="keyword">else</span></div><div class="line">                        ystday = <span class="number">0</span>;</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                <span class="keyword">case</span> <span class="number">2</span>:</div><div class="line">                    <span class="keyword">if</span> (ystday != <span class="number">2</span>)</div><div class="line">                    &#123;</div><div class="line">                        ystday = <span class="number">2</span>;</div><div class="line">                        workday += <span class="number">1</span>;</div><div class="line">                    &#125; <span class="keyword">else</span></div><div class="line">                        ystday = <span class="number">0</span>;</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                <span class="keyword">case</span> <span class="number">3</span>:</div><div class="line">                    workday += <span class="number">1</span>;</div><div class="line">                    <span class="keyword">if</span> (ystday == <span class="number">1</span>)</div><div class="line">                        ystday = <span class="number">2</span>;</div><div class="line">                    <span class="keyword">else</span> <span class="keyword">if</span> (ystday == <span class="number">2</span>)</div><div class="line">                        ystday = <span class="number">1</span>;</div><div class="line">                    <span class="keyword">else</span></div><div class="line">                        ystday = <span class="number">3</span>;</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, (n - workday) * <span class="number">-24</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>其实我这个做法依然是动态规划，本质上是一样的，只不过我用ystday来储存前一天的状态而讲解的是直接用数组储存所有情况</p>
<p><a href="http://blog.csdn.net/jnxxhzz/article/details/53455350#" target="_blank" rel="external">一个参考范例</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[GDUT新生赛—C(又栽在long long上面了)]]></title>
      <url>https://blog.patrickcty.cc/2017/02/01/GDUT%E6%96%B0%E7%94%9F%E8%B5%9B%E2%80%94C(%E5%8F%88%E6%A0%BD%E5%9C%A8long%20long%E4%B8%8A%E9%9D%A2%E4%BA%86)/</url>
      <content type="html"><![CDATA[<h1 id="Problem-C-剁手女生节"><a href="#Problem-C-剁手女生节" class="headerlink" title="Problem C: 剁手女生节"></a>Problem C: 剁手女生节</h1><p><a href="http://gdutcode.sinaapp.com/problem.php?cid=1051&amp;pid=2" target="_blank" rel="external">原题链接</a></p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>由于女生节准备到了，ming打算给班上女生送一份大礼。没错，就是数学练习册！</p>
<p>ming先前就已经收藏了 n 本练习册了，一直不舍得做，这次突然决定把它们都拿出来当作礼物送出去<br>！<br>但是，ming班上一共有 4 个女生，为了不要显得自己偏爱哪一个，他觉得每个女生都应该分到同等数量的练习册。</p>
<p>这样的话，原来的 n 本就可能不太够了。于是他去逛亚马当商城。</p>
<p>他发现，最近ACM（Association of Counting Method）又出版了好多新版数学练习册：高数、线代、离散、概率论…</p>
<p>而且商店有三种促销优惠套餐：</p>
<p>第一种：任选 1 本练习册，送欧几里德主题套尺。只需 a 个比特币；</p>
<p>第二种：任选 2 本练习册，送莱布尼兹同款2B铅笔。只需 b 个比特币；</p>
<p>第三种：任选 3 本练习册，送爱因思坦专用橡皮擦。只需 c 个比特币。</p>
<p>那么问题来了：吃土ming如何用最少的比特币购买若干本练习册，使得全部（包括原来的n本）可以平分给四个女生？</p>
<h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><p>每组输入是一行四个整数：n，a，b，c（1 &lt;= n，a，b，c &lt;= 1e9）意思如题目描述。</p>
<h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><p>对每组输入，输出一行一个整数，表示ming要花的最少的比特币数。</p>
<h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>3</p>
<p>1 1 3 4</p>
<p>6 2 1 1</p>
<p>4 4 4 4</p>
<h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>3</p>
<p>1</p>
<p>0</p>
<h2 id="个人感想"><a href="#个人感想" class="headerlink" title="个人感想"></a>个人感想</h2><p>即使原始数据还没超过int最后还是可能变成long long才能AC，比如这个。</p>
<p>还有就是之前不知道为什么莫名其妙的一堆秘制错误，删掉那些输出语句反而就好了…</p>
<h2 id="我的思路"><a href="#我的思路" class="headerlink" title="我的思路"></a>我的思路</h2><p>没什么多说的，情况考虑清楚就可以了，比如三本书反而比一本书便宜之类的</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">Min</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> x, <span class="keyword">long</span> <span class="keyword">long</span> y)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span> (x &gt; y)</div><div class="line">        <span class="keyword">return</span> y;</div><div class="line">    <span class="keyword">else</span></div><div class="line">        <span class="keyword">return</span> x;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> t;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</div><div class="line">    <span class="keyword">while</span> (t--)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">int</span> n;</div><div class="line">        <span class="keyword">long</span> <span class="keyword">long</span> a, b, c;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%lld%lld%lld"</span>, &amp;n, &amp;a, &amp;b, &amp;c);</div><div class="line">        <span class="keyword">long</span> <span class="keyword">long</span> min = <span class="number">0</span>;</div><div class="line">        <span class="keyword">int</span> need = <span class="number">4</span> - n % <span class="number">4</span>;</div><div class="line">        <span class="keyword">switch</span> (need)</div><div class="line">        &#123;</div><div class="line">            <span class="keyword">case</span> <span class="number">1</span>:</div><div class="line">                min = Min(a, b + c);</div><div class="line">                min = Min(min, <span class="number">3</span> * c);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> <span class="number">2</span>:</div><div class="line">                min = Min(Min(b, <span class="number">2</span> * a), <span class="number">2</span> * c);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> <span class="number">3</span>:</div><div class="line">                min = Min(Min(<span class="number">3</span> * a, a + b), c);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> <span class="number">4</span>:</div><div class="line">                min = <span class="number">0</span>;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, min);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>各种表达式一定不要手贱打错！</p>
<p>3a这个是错的！要么就是3*a！</p>
<p>最后在强调一次long long！</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[GDUT新生赛]]></title>
      <url>https://blog.patrickcty.cc/2017/02/01/GDUT%E6%96%B0%E7%94%9F%E8%B5%9B%E2%80%94B(%E8%A2%AB%E4%B8%80%E9%81%93%E6%B0%B4%E9%A2%98%E6%B0%94%E5%93%AD%EF%BC%8C%E5%85%B6%E5%AE%9E%E5%B9%B6%E4%B8%8D%E6%98%AF%E5%BE%88%E6%B0%B4)/</url>
      <content type="html"><![CDATA[<h1 id="Problem-B：Zhazhahe究竟有多二"><a href="#Problem-B：Zhazhahe究竟有多二" class="headerlink" title="Problem B：Zhazhahe究竟有多二"></a>Problem B：Zhazhahe究竟有多二</h1><p><a href="http://gdutcode.sinaapp.com/problem.php?cid=1051&amp;pid=1" target="_blank" rel="external">原题链接</a></p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Zhazhahe竟然能二到把耳机扔到洗衣机里去洗，真的是二到了一种程度，现在我们需要判断一下zhazhahe二的程度（就是计算zhazhahe的脑残值有几个2的因子），下面给你一个n，n!表示zhazhahe的脑残值。</p>
<h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><p>输入一个正整数t(0&lt;t&lt;3000)表示样例组数，每组样例输入一个正整数n(0&lt;n&lt;1e18)，n!表示zhazhahe的脑残值</p>
<h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><p>输出一个正整数表示zhazhahe二的程度</p>
<h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>3</p>
<p>2</p>
<p>4</p>
<p>15</p>
<h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>1</p>
<p>3</p>
<p>11</p>
<h2 id="个人感想"><a href="#个人感想" class="headerlink" title="个人感想"></a>个人感想</h2><p>真的十分想吐槽这道题…前后经历了TLE-&gt;RE-&gt;WA最后终于AC了，不过里面还是有一些坑需要我以后继续注意</p>
<h2 id="我的思路"><a href="#我的思路" class="headerlink" title="我的思路"></a>我的思路</h2><p>我已开始是直接求n!然后再求因子，然而这样太暴力了O(n^2)真的不是好玩的…一个TLE救过来了，后来想着用log2(n)来减少除的个数，用n-=2代替减1，然而O(n^2)还是O(n^2)。</p>
<p>之后看到了这样的一个公式：</p>
<blockquote>
<p>==n!素因子分解中素数p的幂为 [n/p]+[n/(p^2)]+[n/(p^3)]+……==</p>
</blockquote>
<p>于是用这个结论就避免了TLE</p>
<p>然而要注意的是他给的n的范围很大，用int是解决不了的，因为越界了所以会出现RE</p>
<p>而且要把所有的都改成ll，n，two，rst，有一个忘了改就会变成WA</p>
<p>最后把所有的都改过来了就可以AC了</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="comment">// n!素因子分解中素数p的幂为 [n/p]+[n/(p^2)]+[n/(p^3)]+……</span></div><div class="line"><span class="comment">// RE...</span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> t;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</div><div class="line">    <span class="keyword">while</span> (t--)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">long</span> <span class="keyword">long</span> n;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>, &amp;n);</div><div class="line">        <span class="keyword">long</span> <span class="keyword">long</span> rst = <span class="number">0</span>;</div><div class="line">        <span class="keyword">long</span> <span class="keyword">long</span> two = <span class="number">2</span>;</div><div class="line">        <span class="keyword">while</span> (two &lt;= n)</div><div class="line">        &#123;</div><div class="line">            rst += n / two;</div><div class="line">            two *= <span class="number">2</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, rst);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>这个故事告诉我们</p>
<ul>
<li>要努力优化自己的算法，一些基本的结论要知道</li>
<li>要仔细的看题目，越界很容易出现RE，另外int是4个字节每个字节8位二进制数，范围是-2^31~2^31-1</li>
<li>改代码的时候把全部都改过来…</li>
</ul>
<p><a href="http://blog.csdn.net/xuexiacm/article/details/8122267" target="_blank" rel="external">附上一个各种类型的范围</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[GDUT新生赛—A(二进制的神奇用法)]]></title>
      <url>https://blog.patrickcty.cc/2017/02/01/GDUT%E6%96%B0%E7%94%9F%E8%B5%9B%E2%80%94A(%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%9A%84%E7%A5%9E%E5%A5%87%E7%94%A8%E6%B3%95)/</url>
      <content type="html"><![CDATA[<h1 id="Problem-A-pigofzhou的巧克力棒"><a href="#Problem-A-pigofzhou的巧克力棒" class="headerlink" title="Problem A: pigofzhou的巧克力棒"></a>Problem A: pigofzhou的巧克力棒</h1><p><a href="http://gdutcode.sinaapp.com/problem.php?cid=1051&amp;pid=0" target="_blank" rel="external">原题链接</a></p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote>
<p>众所周知，pigofzhou有许多妹子。有一天，pigofzhou得到了一根巧克力棒，他想把这根巧克力棒分给他的妹子们。具体地，这根巧克力棒长为 n，他想将这根巧克力棒折成 n 段长为 1 的巧克力棒，然后分给妹子们。</p>
<p>但是他妹子之一中的 15zhazhahe 有强迫症。若它每次将一根长为 k 的巧克力棒折成两段长为 a 和 b 的巧克力棒，此时若 a=b，则15zhazhahe会得到一点高兴值。</p>
<p>pigofzhou想知道15zhazhahe最多能获得多少高兴值。</p>
</blockquote>
<h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><blockquote>
<p>输入数据为T组(T &lt;= 10000)，每组数据读入一个n（n&lt;=1000000000）</p>
</blockquote>
<h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><blockquote>
<p>一行一个整数代表能获得的最大高兴值</p>
</blockquote>
<h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><blockquote>
<p>1</p>
<p>5</p>
</blockquote>
<h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><blockquote>
<p>3</p>
</blockquote>
<h2 id="个人感想"><a href="#个人感想" class="headerlink" title="个人感想"></a>个人感想</h2><p>我一直以为这是水题，结果在知道解法的情况下还是做了一下午才AC…我真的好菜呀orz，要继续加油啦！</p>
<h2 id="我的思路"><a href="#我的思路" class="headerlink" title="我的思路"></a>我的思路</h2><p>一开始我以为直接一次次的对半分就可以了，然而这样得到的并不是最大值。最大的情况是这样一种分法：分成若干个数，这每个数都是2^n，这样继续每次分就有最大值了。</p>
<p>话说这个方法还是上次听他们讲解的时候知道的…至于怎么样分，答案是二进制。比如15=8+4+2+1，二15变成二进制数为1111=1000+100+10+1正好和上面的算式对应。</p>
<p>然后8对应的最大高兴值是4+2+1=8-1，4同理为2+1=4-1。</p>
<p>这样思路就很清楚了，先把输入的n变成二进制数，然后再根据每一位的数来求出最后的结果。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> <span class="built_in">array</span>[<span class="number">30</span>];  <span class="comment">// 直接在函数参数里面用数组名有莫名的报错...</span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">ten2two</span><span class="params">(<span class="keyword">int</span> n, <span class="built_in">array</span> &amp;a)</span>  <span class="comment">// 转化为二进制数并将结果保存在数组中</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span> (n != <span class="number">0</span>)  <span class="comment">// 除二取余法</span></div><div class="line">    &#123;</div><div class="line">        a[i] = n % <span class="number">2</span>;</div><div class="line">        n = n / <span class="number">2</span>;</div><div class="line">        i++;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> i - <span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"></div><div class="line">    <span class="keyword">int</span> T;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</div><div class="line">    <span class="keyword">while</span> (T--)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">int</span> n;</div><div class="line">        <span class="built_in">array</span> a;</div><div class="line">        <span class="built_in">memset</span>(a, <span class="number">0</span>, <span class="keyword">sizeof</span>(a));  <span class="comment">// 一键赋初值</span></div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</div><div class="line">        <span class="keyword">int</span> happiness = <span class="number">0</span>;</div><div class="line">        <span class="keyword">int</span> num = ten2two(n, a);  <span class="comment">// 二进制数的最高位</span></div><div class="line">        <span class="keyword">for</span> (; num &gt;= <span class="number">0</span>; --num)</div><div class="line">        &#123;</div><div class="line">            <span class="keyword">if</span> (a[num] == <span class="number">1</span>)</div><div class="line">                <span class="comment">// pow是求次方，这里是2^num，结果应该是double型的，我这里直接赋给int</span></div><div class="line">                happiness = happiness + <span class="built_in">pow</span>(<span class="number">2</span>, num) - <span class="number">1</span>;  </div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, happiness);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>二进制数神奇的用法真多，不愧是底层的机器语言，跪拜。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CSS定位]]></title>
      <url>https://blog.patrickcty.cc/2017/02/01/CSS%E5%AE%9A%E4%BD%8D/</url>
      <content type="html"><![CDATA[<h2 id="绝对定位"><a href="#绝对定位" class="headerlink" title="绝对定位"></a>绝对定位</h2><p>绝对定位并不一定是是相对浏览器固定一个位置</p>
<p>而是</p>
<ul>
<li>先把该元素从文档流中拖出来，原来在文档流中的位置被取代</li>
<li>然后寻找已经定位的最近的祖先元素并相对它来定位，如果没有的话就相当于被最初的包含块</li>
</ul>
<h2 id="相对定位"><a href="#相对定位" class="headerlink" title="相对定位"></a>相对定位</h2><p>而相对定位相对的是文档流</p>
<h2 id="固定定位"><a href="#固定定位" class="headerlink" title="固定定位"></a>固定定位</h2><p>相对于浏览器固定在某个地方不动，比如很多网站的菜单栏</p>
<h2 id="CSS定位机制"><a href="#CSS定位机制" class="headerlink" title="CSS定位机制"></a>CSS定位机制</h2><blockquote>
<p>CSS 有三种基本的定位机制：普通流、浮动和绝对定位。</p>
<p>除非专门指定，否则所有框都在普通流中定位。也就是说，普通流中的元素的位置由元素在 (X)HTML 中的位置决定。</p>
<p>块级框从上到下一个接一个地排列，框之间的垂直距离是由框的垂直外边距计算出来。</p>
</blockquote>
<h2 id="CSS-position-属性"><a href="#CSS-position-属性" class="headerlink" title="CSS position 属性"></a>CSS position 属性</h2><blockquote>
<p>通过使用 position 属性，我们可以选择 4 种不同类型的定位，这会影响元素框生成的方式。</p>
<p>position 属性值的含义：</p>
<ul>
<li><p>static<br>元素框正常生成。块级元素生成一个矩形框，作为文档流的一部分，行内元素则会创建一个或多个行框，置于其父元素中。</p>
</li>
<li><p>relative<br>元素框偏移某个距离。元素仍保持其未定位前的形状，它原本所占的空间仍保留。</p>
</li>
<li><p>absolute<br>元素框从文档流完全删除，并相对于其包含块定位。包含块可能是文档中的另一个元素或者是初始包含块。元素原先在正常文档流中所占的空间会关闭，就好像元素原来不存在一样。元素定位后生成一个块级框，而不论原来它在正常流中生成何种类型的框。</p>
</li>
<li><p>fixed<br>元素框的表现类似于将 position 设置为 absolute，不过其包含块是视窗本身。</p>
</li>
</ul>
<p>提示：相对定位实际上被看作普通流定位模型的一部分，因为元素的位置相对于它在普通流中的位置。</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[《Carol》]]></title>
      <url>https://blog.patrickcty.cc/2017/02/01/%E3%80%8ACarol%E3%80%8B/</url>
      <content type="html"><![CDATA[<h1 id="《Carol》"><a href="#《Carol》" class="headerlink" title="《Carol》"></a>《Carol》</h1><h2 id="感受"><a href="#感受" class="headerlink" title="感受"></a>感受</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这是一部爱情诗，在一个安静的下午观看最佳。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;只可惜我观看的时候心不静，一直在看手机。但是电影中的诗意还是感染着我。电影剧情比较舒缓，像是一首舒缓的叙事曲。但是剧中两个女性的挣扎以及暧昧都漂浮在空气中。那还是50年代，那时候这还是一个禁忌的话题。爱情的勇气，爱情的挣扎，现实的冲击，电影都完美的表现出来了。庆幸Abby最终走出了那一步～</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;下次看电影不能玩手机啦Orz。</p>
<h2 id="评分"><a href="#评分" class="headerlink" title="评分"></a>评分</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9/10。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;推荐找个安静的时候静下心来观看。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[day-5为止的一些总结]]></title>
      <url>https://blog.patrickcty.cc/2017/02/01/day-5%E4%B8%BA%E6%AD%A2%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%BB%E7%BB%93/</url>
      <content type="html"><![CDATA[<h3 id="到这里为止web框架已经基本成型了，比较一下和flask的差别"><a href="#到这里为止web框架已经基本成型了，比较一下和flask的差别" class="headerlink" title="到这里为止web框架已经基本成型了，比较一下和flask的差别"></a>到这里为止web框架已经基本成型了，比较一下和flask的差别</h3><h4 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h4><ul>
<li>flask:使用MySQLdb模块</li>
<li>awesome:创建了全局的连接池</li>
</ul>
<h4 id="初始化app"><a href="#初始化app" class="headerlink" title="初始化app"></a>初始化app</h4><ul>
<li>flask:使用flask.Flask类</li>
<li>awesome:使用aiohttl.web.Application类</li>
</ul>
<h4 id="渲染模板"><a href="#渲染模板" class="headerlink" title="渲染模板"></a>渲染模板</h4><ul>
<li>flask:内置jinja2，直接用render_template()来渲染</li>
<li>awesome:要激活jinja2环境(jinja2.Environment类)</li>
</ul>
<h4 id="url处理函数"><a href="#url处理函数" class="headerlink" title="url处理函数"></a>url处理函数</h4><ul>
<li>flask:直接把想要的路径用@app.route()和函数绑定就可以了</li>
<li>awesome:</li>
</ul>
<ol>
<li>编写函数来绑定路径</li>
<li>编写RequestHandler来封装url函数</li>
<li>注册url处理函数</li>
</ol>
<h4 id="跑起应用"><a href="#跑起应用" class="headerlink" title="跑起应用"></a>跑起应用</h4><ul>
<li>flask:直接app.run()</li>
<li>awesome:</li>
</ul>
<ol>
<li>loop.create_server(app.make_handler(), ‘127.0.0.1’, 9000)</li>
<li>让loop一直运行</li>
</ol>
<h4 id="根据以上的这些步骤，awesome基本已经集成了flask的基本功能了，真的是从零开始搭建一个网站"><a href="#根据以上的这些步骤，awesome基本已经集成了flask的基本功能了，真的是从零开始搭建一个网站" class="headerlink" title="根据以上的这些步骤，awesome基本已经集成了flask的基本功能了，真的是从零开始搭建一个网站"></a>根据以上的这些步骤，awesome基本已经集成了flask的基本功能了，真的是从零开始搭建一个网站</h4><h4 id="尽管不懂得还有很多，不过还是由衷的佩服那些造轮子的人，大大减小了我们的开发的学习成本"><a href="#尽管不懂得还有很多，不过还是由衷的佩服那些造轮子的人，大大减小了我们的开发的学习成本" class="headerlink" title="尽管不懂得还有很多，不过还是由衷的佩服那些造轮子的人，大大减小了我们的开发的学习成本"></a>尽管不懂得还有很多，不过还是由衷的佩服那些造轮子的人，大大减小了我们的开发的学习成本</h4>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ACM疑问]]></title>
      <url>https://blog.patrickcty.cc/2017/02/01/ACM%E7%96%91%E9%97%AE/</url>
      <content type="html"><![CDATA[<ul>
<li>输出结果是每输入一次都输出还是一次性全部输出<blockquote>
<p>每一次输出就可以了</p>
</blockquote>
</li>
<li>需不需要检验输入的是不是满足题意<blockquote>
<p>不需要</p>
</blockquote>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ACM提高效率的方法]]></title>
      <url>https://blog.patrickcty.cc/2017/02/01/ACM%E6%8F%90%E9%AB%98%E6%95%88%E7%8E%87%E7%9A%84%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<h2 id="以文件流来检验输入输出而不是一行行的输入-在提交的时候应该注释掉"><a href="#以文件流来检验输入输出而不是一行行的输入-在提交的时候应该注释掉" class="headerlink" title="以文件流来检验输入输出而不是一行行的输入 (在提交的时候应该注释掉)"></a>以文件流来检验输入输出而不是一行行的输入 (在提交的时候应该注释掉)</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// in.txt为要读取的文件</span></div><div class="line"><span class="comment">// r为只读</span></div><div class="line"><span class="comment">// stdin为标准输入</span></div><div class="line">freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div></pre></td></tr></table></figure>
<ul>
<li>最后提交的时候一定要注释掉，不然会有Runtime Error</li>
</ul>
<h2 id="一键给数组赋初值"><a href="#一键给数组赋初值" class="headerlink" title="一键给数组赋初值"></a>一键给数组赋初值</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></div><div class="line"><span class="built_in">memset</span>(<span class="built_in">array</span>, <span class="number">0</span>, <span class="keyword">sizeof</span>(<span class="built_in">array</span>));</div></pre></td></tr></table></figure>
<ul>
<li>其中array可以是任意指针</li>
<li>0这个地方可以为任意特定的值</li>
<li>第三个地方指定长度</li>
<li>作用为：将内存的前n个字节设置为特定的值</li>
</ul>
<h2 id="打表而不是每一次都进行运算"><a href="#打表而不是每一次都进行运算" class="headerlink" title="打表而不是每一次都进行运算"></a>打表而不是每一次都进行运算</h2><ul>
<li>如果频繁的涉及到判断就先把所有结果放在表里面而不是每次都进行运算</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ACM输入输出注意]]></title>
      <url>https://blog.patrickcty.cc/2017/02/01/ACM%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E6%B3%A8%E6%84%8F/</url>
      <content type="html"><![CDATA[<h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><ul>
<li>当没给结束条件时</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">while(scanf(&quot;%d&quot;, &amp;a) != EOF)  // EOF是文件的结束</div><div class="line">// 由此可以猜想到ACM验证是通过文件读取来进行的</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ACM关键词]]></title>
      <url>https://blog.patrickcty.cc/2017/02/01/ACM%E5%85%B3%E9%94%AE%E8%AF%8D/</url>
      <content type="html"><![CDATA[<ul>
<li>动态规划</li>
<li>&amp;运算，^(异或)运算</li>
<li>二进制</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[《血战钢锯岭》]]></title>
      <url>https://blog.patrickcty.cc/2017/01/24/%E3%80%8A%E8%A1%80%E6%88%98%E9%92%A2%E9%94%AF%E5%B2%AD%E3%80%8B/</url>
      <content type="html"><![CDATA[<h1 id="《血战钢锯岭》"><a href="#《血战钢锯岭》" class="headerlink" title="《血战钢锯岭》"></a>《血战钢锯岭》</h1><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;直接进入正文。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这部电影给我的感觉就是震撼，特别是战争的时候，电影拍摄得十分真实，尽管我没经历过战争，不过战争的惨烈完全映入了我的脑海，尽管是战胜国美国拍的电影，但是电影还是十分客观，既有美国士兵的英勇，友情，同时他们面对惨烈情况的懦弱也没有省去；另外，对于战败国日本的刻画，也是十分客观，因为日本兵不是主体，所以只表现了他们的不怕死，无畏，这种精神，也没有去抹黑他们。这部战争片比以往看过的很多国产抗日片要好得多。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关于战争的场面，真的是十分真实，无论是那些血淋淋的伤口，还是人们面对剧痛的呻吟，以此伤兵营的惨状，都十分真实，恐怕很多人看到这样的场景都会做噩梦甚至寝食难安。更不用说那些亲历战争的士兵们了，难怪很多经历过战争的士兵心理都落下了疾病。看完后我只想说愿世界少一点战争，多一点和平。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;其次令我印象深刻的就是主角对于信仰的坚持，而这坚持是和家庭是有分不开的关系的。男主的父亲是一个经历过一战的退伍军人，战争中兄弟的死亡给他带来了极大的打击，甚至把他的性格都完全转变了。他经常无故发疯，并且殴打孩子和妻子。因为父亲，主角在小时候十分好斗，再一次打架中他用砖头打中了哥哥的脑袋并且差一点打死哥哥，从此不杀人的信条深刻在主角的脑海中。后来有一次，父亲发疯时，拿着枪打母亲，被主角制止了，因为这一次事故，主角对枪也十分厌恶，并发誓不再碰枪。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;但是因为主角不想其他人都去战场厮杀自己却在家里于是他也参军了，但是去战场上怎么能不拿枪不杀人呢？于是他的信仰与现实产生了剧烈的碰撞，即使因为这个处处被侮辱，经受各种不公平的待遇，甚至进监狱，主角的信仰都没有改变。就这样，一个不用枪，不杀人的士兵上了战场，在那个晚上，他救下了将近一百人，成就了一段传奇。甚至在地洞中他还冒着危险救了一个日本军人。这是信仰的力量，这是个人毅力的力量。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;剧中的爱情也很打动人，即使内心不舍，还是要把心爱的人送上战场；即使处境艰难，只要看到心爱的人的照片就能继续坚持下去。正是主角的“不一样”，打动了女主，正是主角的“不一样”，以及爱情，让主角能坚持过了营地的各种误解，坚持过了战争的洗礼。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;最后，感谢以前战士们的浴血奋战，成就了我们今天的和平美好的世界。</p>
<h2 id="评分"><a href="#评分" class="headerlink" title="评分"></a>评分</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9.5/10。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;视觉震撼，内容丰富，可能是我看到的最好的战争片。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[终于考完啦]]></title>
      <url>https://blog.patrickcty.cc/2017/01/13/%E7%BB%88%E4%BA%8E%E8%80%83%E5%AE%8C%E5%95%A6/</url>
      <content type="html"><![CDATA[<h1 id="终于考完啦"><a href="#终于考完啦" class="headerlink" title="终于考完啦"></a>终于考完啦</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;经历了四周的高强度的复习，终于在1.12号十二点十分考完了所有科目，这也意味着大二上到此正式结束了。尽管在考最后几门的时候就一直十分期待考完之后放假但是当真正考完走出教学楼的那一刻，却突然感觉十分空虚，完全不知道接下来应该干什么。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;前两周是复习周，或者对于我和很多其他的同学来说是“预习周”。说实话这学期我基本没有好好学习的科目，大多数课都是上课不听讲，甚至图论都没去上过几次课…这也给我挖下了很大的坑。而熊不仅在平时学好了课内的内容，又搞了很多课外的内容，真的感觉他很了不起，他在学习的专注真的很值得我去学习！</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我感觉我最大的问题就是很难保持长时间的专注，上课也是，复习也是，自学也是，总是很容易就产生一种厌烦的情绪然后学习的欲望就没了就很难继续下去了。其实玩手机的时候也一样，经常就是玩着玩着就不知道干什么了…但是又不想学习，就是一种什么都不想干的状态…典型的玩也没玩好，学也没学好…这是最致命的弱点了吧。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在考完的同时，很多科目的成绩也出来了，说实话，这学期相比上一个学期又有了不小的退步…真的感觉下学期应该好好学习了…但是不知道我到时候会不会又继续重复这学期的状态…寒假也到来了，之前考试之前就有的一些计划，现在希望能高效的执行下去…如果寒假能做到，那么我想下学期也应该能做到吧…希望我寒假不要太荒废…</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;回到复习的内容，这次的复习感觉没抓到重点，也就是方法还有一些问题。像是数据结构复习得比较详细，甚至很多算法都再次实现了一次，但是这样范围拉的很大很深以至于到了真正考试的时候很多东西反而都忘掉了…而数电和Java则是另一个极端，太过于抽象以至于很多考的内容在看的时候都跳过去了，复习的只是一些框架性的内容，小的细节反而忘掉了这就导致这两门的分数都不太好看…特别是数电…直接创下了历史新低。概率论也有这个问题，不过问题不是很大，图论的话因为内容太多最后还是有一些给忘掉了orz…</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;功在平时，初中的数学老师说的果然没错…如果平时完全没有好好搞得话，最后真的会很坑的，上学期的科目都还好，而现在很多的难度都突然加大，完全留在期末真的是很不明智的选择。不过在平时的话也不能盲目的去搞，而是要理解，比如图论，概念特别多，但是如果你理解了他这样做的目的，你就可以更加游刃有余地处理同时也不会觉得没什么卵用了。高屋建瓴总是比零散的学要好得多！</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;后两周是考试周。说实话复习周的压力比考试周要大，复习周的时候几乎每天都是从早学到晚…就只有在图书馆闭馆的时候会比较浪，不过有了几个一起学习的队友感觉也没有那么累了呢～</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;考试周的时候反而比较放松，大考大玩小考小玩这个真言依旧十分适用。因为这学期考试比较密集所以也没往年的那么浪了，不过还是基本每天一部电影的节奏～讲真，到了后来剧都差不多看完了就完全不知道要干什么了…在自己空闲时间给自己找点事干，这也是很重要的一点啊…</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;总之考完啦，离回家也有好几天，这几天就该浪就浪，该学就学！关键是搞清楚自己该干什么！美好的寒假，从今天开始！</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[教务处模拟登陆的问题]]></title>
      <url>https://blog.patrickcty.cc/2016/11/24/%E6%95%99%E5%8A%A1%E5%A4%84%E6%A8%A1%E6%8B%9F%E7%99%BB%E9%99%86%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<p>前不久想直接用cookie登入教务处获得数据结果cookie死活设置不了，于是这次想先模拟登陆再获得数据。</p>
<h2 id="事前准备"><a href="#事前准备" class="headerlink" title="事前准备"></a>事前准备</h2><h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h3><ul>
<li>目标API：<a href="http://jwxt.jnu.edu.cn/Login.aspx" target="_blank" rel="external">http://jwxt.jnu.edu.cn/Login.aspx</a></li>
<li>需要的字段：<blockquote>
<ul>
<li>__VIEWSTATE:/wEPDwUKMjA1ODgwODUwMg9kFgJmD2QWAgIBDw8WAh4EVGV4dAUk5pqo5Y2X5aSn5a2m57u85ZCI5pWZ5Yqh566h55CG57O757ufZGRkQHzthBmMTOkUl+ppvHZCGZFIgkY=</li>
<li>__VIEWSTATEGENERATOR:C2EE9ABB</li>
<li>__EVENTVALIDATION:/wEWBwKa9aHcDAKDnbD2DALVp9zJDAKi+6bHDgKC3IeGDAKt86PwBQLv3aq9BwKtfLsN0olpYtRu4kxVBpo9Oquj</li>
<li>txtYHBS:2015053961  // 学号</li>
<li>txtYHMM:passwd  // 密码</li>
<li>txtFJM:k23y  // 验证码</li>
<li>btnLogin:%B5%C7++++%C2%BC</li>
</ul>
</blockquote>
</li>
</ul>
<h3 id="获得信息"><a href="#获得信息" class="headerlink" title="获得信息"></a>获得信息</h3><p>登陆之后进入信息所在的页面就可以，页面URI可以从JS中直接看到</p>
<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>无论用户名密码验证码对不对最后返回的结果都是500</p>
<hr>
<h2 id="另一篇"><a href="#另一篇" class="headerlink" title="另一篇"></a>另一篇</h2><p>受同学的启发，准备用爬虫爬取教务处的页面，至于干什么还没想那么远…</p>
<p>结果用requests伪造请求头进去之后发现这是动态页面，而只用requests加载不出来</p>
<p>于是想用selenium来加载js，这时候就需要改变页面的cookie。然而在设置cookie的时候会报错：Can only set Cookies for the current domain</p>
<p>Google了好多都没找到解决方案</p>
<p>于是想requests和selenium结合，结果真的有这个库selenium-requests，没想到原理居然还是调用selenium里面的内容…所以还是报同样的错…</p>
<p>折腾前面的几种方法折腾了好久，似乎还是不行</p>
<p>cookie是从header里面提取的，也有从Chrome插件里面提取读取为JSON再解析的，两者似乎都不起作用</p>
<p>本来想直接登录再直接从对象中获取cookie然而需要验证码这就很麻烦了。然而我觉得登陆之后获取cookie似乎和直接得到没区别。</p>
<p>直接在requests里面使用cookie进入后使用Session.cookies结果发现是空的？？？</p>
<p>又是一个玄学的问题。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[爬取糗事百科感想]]></title>
      <url>https://blog.patrickcty.cc/2016/11/19/%E7%88%AC%E5%8F%96%E7%B3%97%E4%BA%8B%E7%99%BE%E7%A7%91%E6%84%9F%E6%83%B3/</url>
      <content type="html"><![CDATA[<p>requests + bs4</p>
<ul>
<li>糗事百科访问做了一定的限制，要用requests伪造请求头</li>
<li>界面是纯静态界面，用bs4提取页面主体信息就可以了</li>
</ul>
<h2 id="requests"><a href="#requests" class="headerlink" title="requests"></a>requests</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">session = requests.Session()</div><div class="line">headers = &#123;&apos;User-Agent&apos;: &apos;xxxx&apos;&#125;</div><div class="line">html = session(url, headers=headers).text</div></pre></td></tr></table></figure>
<h2 id="bs4"><a href="#bs4" class="headerlink" title="bs4"></a>bs4</h2><p>比较熟悉，写一下要点</p>
<ul>
<li>可以用bsObj.h1来获得h1的内容</li>
<li>注意一般都是以list的形式，注意下标</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">author = joke.findAll(&apos;div&apos;, &#123;&apos;class&apos;: &apos;author clearfix&apos;&#125;)[0].findAll(&apos;h2&apos;)[0].get_text()</div></pre></td></tr></table></figure>
<h2 id="亮点：面向对象编程"><a href="#亮点：面向对象编程" class="headerlink" title="亮点：面向对象编程"></a>亮点：面向对象编程</h2><ul>
<li>把整个功能以一个class的形式集成</li>
<li>通过类里面的函数一步步实现功能</li>
</ul>
<p>面向对象：</p>
<ul>
<li><strong>init</strong>()：来初始化一些变量，通常是公共的（全局）</li>
<li>把一个大功能分散成若干个步骤</li>
<li>调用变量或者函数用self.func或self.v</li>
</ul>
]]></content>
    </entry>
    
  
  
    
    <entry>
      <title><![CDATA[初次见面我是Patrick]]></title>
      <url>https://blog.patrickcty.cc/about/index.html</url>
      <content type="html"><![CDATA[<h1 id="初次见面我是Patrick"><a href="#初次见面我是Patrick" class="headerlink" title="初次见面我是Patrick"></a>初次见面我是Patrick</h1><h2 id="杂谈"><a href="#杂谈" class="headerlink" title="杂谈"></a>杂谈</h2><h2 id="名字的故事"><a href="#名字的故事" class="headerlink" title="名字的故事"></a>名字的故事</h2><p>Patrick这个名字是我从《冒险小虎队》里面的一个主角得来的灵感，一开始的英文名还是叫Peter。同样是P开头，Patrick中多了几分硬朗，并且看起来酷酷的。于是乎就确定了这个名字～到后来偶然发现那个粉粉的小海星也是Patrick，一下子多了几分惊喜感～</p>
<h2 id="最爱颜色的故事"><a href="#最爱颜色的故事" class="headerlink" title="最爱颜色的故事"></a>最爱颜色的故事</h2><p>我最喜欢的颜色是黄色，那种淡淡的黄色。</p>
<p>小学的时候很喜欢蓝色，那个年龄段大家都这样；之后逐渐转向黑白银，因为多了几分叛逆与与众不同吧，当然还有几分装酷的成分在里面；到后来又变成了绿色，因为贴近自然并且也很舒服；后来又由绿色变成了浅色系的薄荷绿，以及一系列类似的，一直到现在对颜色的喜爱都停留在了浅色系。</p>
<p>现在的话淡黄色，活泼却又不像荧光色那样张扬，同时又比较让人亲近，或许这些特性也和我的性格有一定的关系吧～</p>
<p>P.S.高中的时候一度很喜欢荧光色，买过荧光绿的跑鞋，尽管被坑了买了假货，穿起来很晃眼，不过呢，太张扬了反而显得很轻浮以及格格不入吧，后来就对这些荧光色是疏远啦。</p>
<h2 id="我是海贼迷！"><a href="#我是海贼迷！" class="headerlink" title="我是海贼迷！"></a>我是海贼迷！</h2><p>从封面可以看到我是一个海贼迷～</p>
<p>说起海贼，还是高二的时候入的坑，当时是高中的第一个同桌他再看海贼，他也没有安利我，但是在他的吸引下我也开始追海贼了～当时海贼只有五百集，就那样一天天的，居然很快就追完了。话说我当时是冲着山治看的，看到山治出场的时候还激动好一阵子。</p>
<p>海贼一直都能带给我感动，索隆的吃被踩过的饭团，乌索普被大家所认可邀请上船，娜美的无助的哭泣，山治跪倒在海上餐厅向哲夫告别，乔巴从害怕到接纳草帽一伙，罗宾的想活下去，弗兰奇过去的无助，布鲁克五十年的孤独，路飞的失去哥哥的痛苦…</p>
<p>每个人的身上都有太多可以说的了，海贼是自由的象征，他们也是为了自由而活，很长一段时间，Free like a pirate也作为我的motto陪伴我度过了漫长的岁月。</p>
<p>我想，海贼会一直陪着我，我也会和我的孩子一起看，一起看这群比谁都快乐，比谁都自由的人。草帽海贼团的海贼旗悬挂在我的床头，海贼的精神，也会一直的悬挂在我的心中～</p>
<h2 id="也是硬件控！"><a href="#也是硬件控！" class="headerlink" title="也是硬件控！"></a>也是硬件控！</h2><p>哈哈一个程序员(伪)终究要走上的道路。</p>
<p>起初是因为Chrome经常卡死然后小伙伴安利内存于是就下定决心买了内存条，原本我还是一个电脑硬件的小白，完全不知道怎么拆装电脑，入了之后尽管没完全拆下来，不过有了相应的知识，后来买SSD的时候装就方便多啦。装了内存之后感觉有了质的飞跃，Chrome不经常崩溃了，多开几个软件也不会很卡了。以此为契机走上了一条烧硬件的道路，从此生活费不够用系列233。</p>
<p>之后又感觉屏幕太小看代码太费眼睛于是又找机会入了外接显示器，还是曲面的，感觉完全不一样了。</p>
<p>再之后就是SSD了，这个不仅让我拆机能力点满而且我装系统能力也有了大大的提升，不过这个也是一个一直踩坑的过程，<em>这个以后有空可以详细写一下</em>。还好最后完美的解决了所有的问题，换了SSD之后体验又上升了一个档次，最显著的就是开机时间与打开IDE的时间233。</p>
<p>后面入了机械键盘之后就消停了，终于满足了用带有灯光的键盘的愿望，十分感动233。</p>
<p>硬件应该就到此为止了，至于显卡和CPU，还好我不玩游戏233，不然可是个巨坑233。下一步就是好好锻炼编程能力了～</p>
<h2 id="Linux使用者"><a href="#Linux使用者" class="headerlink" title="Linux使用者"></a>Linux使用者</h2><p>作为一个程序员怎么能不用Linux/Unix系统，讲真，装个相关软件依赖什么的简直方便到哭。而且更改了主题之后颜值是妥妥的（尽管这是一条歪路，搞Linux的研究什么主题233。</p>
<p>现在虽然Linux用了挺久，不过就用过Ubuntu和Deepin，最终还是坚守Ubuntu，其他发行版的话，想搞了再去折腾，反正装起来挺简单的，也不会突然自动更新（滑稽。说来惭愧现在还是把Linux当一个桌面用…很多高级功能都还没接触，不过边用边学嘛～</p>
<h2 id="手机爱好者"><a href="#手机爱好者" class="headerlink" title="手机爱好者"></a>手机爱好者</h2><p>平常关注的最多的信息就是手机的信息了，尽管并不是一个在手机上折腾的人，其实想在现在用的Pro5上装上谷歌服务，Xposed然而要么是有一些奇怪的地方比如Google Play安装不了软件，要么就是Xposed的模块直接没用…这样就很尴尬了。</p>
<p>至于为什么关注手机呢，因为手机作为最常接触的电子产品，一个好的可以提升不少幸福感233。其实之前Note7是综合最棒的，可惜设计有致命硬伤而且官方态度还那样…</p>
<p>现在想要一个双曲面+玻璃后盖+拍照特别是夜景要好+耳机插口在下方+屏幕5.2左右+Type C，可惜现在还没有特别符合要求的，S7e是不错，不过还是有一些小地方不满足，而且最重要的是价格233，都不好意思再和家里要钱换手机，自己的话想要攒这么多又很难orz，所以看一看yy一下就好233。</p>
<h2 id="编程菜鸟"><a href="#编程菜鸟" class="headerlink" title="编程菜鸟"></a>编程菜鸟</h2><p>最后，我是一个编程菜鸟，刚入门，希望能越来越好～</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[links]]></title>
      <url>https://blog.patrickcty.cc/links/index.html</url>
      <content type="html"></content>
    </entry>
    
  
</search>
