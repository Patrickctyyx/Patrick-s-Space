<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Patrick&#39;s Space</title>
  <subtitle>Stay hungry, stay foolish!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.patrickcty.cc/"/>
  <updated>2017-02-21T06:28:14.925Z</updated>
  <id>https://blog.patrickcty.cc/</id>
  
  <author>
    <name>Patrick</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>动态规划初步</title>
    <link href="https://blog.patrickcty.cc/2017/02/21/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E5%88%9D%E6%AD%A5/"/>
    <id>https://blog.patrickcty.cc/2017/02/21/动态规划初步/</id>
    <published>2017-02-21T06:18:09.000Z</published>
    <updated>2017-02-21T06:28:14.925Z</updated>
    
    <content type="html"><![CDATA[<h1 id="动态规划初步"><a href="#动态规划初步" class="headerlink" title="动态规划初步"></a>动态规划初步</h1><h2 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h2><p>首先我们考虑一下以下的问题：</p>
<ul>
<li>什么是动态规划，动态规划与递推有什么关系</li>
<li>动态规划的关键点是什么</li>
<li>动态规划怎么保证每处的值都是最优</li>
<li>动态规划有哪几种解题模板</li>
<li>动态规划有哪些应用</li>
</ul>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>带着这些问题，就要更深的了解动态规划了。</p>
<p>首先回到第一个问题：</p>
<h3 id="什么是动态规划，动态规划与递推有什么关系"><a href="#什么是动态规划，动态规划与递推有什么关系" class="headerlink" title="什么是动态规划，动态规划与递推有什么关系"></a>什么是动态规划，动态规划与递推有什么关系</h3><p>我个人的理解是通过寻求问题的子问题来递推解决问题的一种方法。</p>
<p>而递推是动态规划中要用到的一部分，而且并不只是简单的递推，而是要根据情况进行判断选出最优的结果进行递推，例如：</p>
<blockquote>
<p>d(i, j) = max(d(i + 1, j), d(i + 1, j + 1)) + a(i, j)</p>
</blockquote>
<p>而递推则往往是简单的相邻几项的关系，例如：</p>
<blockquote>
<p>d(i) = 3d(i - 1) + 2</p>
</blockquote>
<p>既然递推不是动态规划的关键，那动态规划的关键点是什么呢？</p>
<p>这样就来到了第二个问题：</p>
<h3 id="动态规划的关键点是什么"><a href="#动态规划的关键点是什么" class="headerlink" title="动态规划的关键点是什么"></a>动态规划的关键点是什么</h3><h4 id="状态"><a href="#状态" class="headerlink" title="状态"></a>状态</h4><ul>
<li>简单来说就是整个过程中的某个点，以及一些属性</li>
</ul>
<h4 id="指标函数-amp-决策-amp-状态转移方程"><a href="#指标函数-amp-决策-amp-状态转移方程" class="headerlink" title="指标函数&amp;决策&amp;状态转移方程"></a>指标函数&amp;决策&amp;状态转移方程</h4><ul>
<li>指标函数是一个最优的函数，它的一个特定的值往往就是问题的解答，例如</li>
</ul>
<blockquote>
<p>上面的d(i, j)是从(i, j)出发的最大值，那么一个特定的值(1, 1)就是从这个点到最底层的最大的路径长度</p>
</blockquote>
<p>而<strong>指标函数的选取</strong>是动态规划的一个关键，选一个好的指标函数能大大的让问题简化</p>
<p>另外对于同一个状态的选取，指标函数通常有两种互相对称的写法，比如和上面的对称的是：到(i, j)的最大值</p>
<ul>
<li><p>决策是状态转移的方向，通常两个这个状态到下一个状态总是有多种方向可以选择，而我们要选择的总是最佳决策</p>
</li>
<li><p>状态转移方程则是用指标函数来表示不同状态的转移过程，选出最优决策，表示状态间的数学关系</p>
</li>
</ul>
<p>虽然动态规划是一层层推下来的，那如果到了后面的情况发现前面某一步的另一种决策有更优的结果是怎么处理的呢？怎么保证最后的结果总是最优？</p>
<h3 id="动态规划怎么保证每处的值都是最优"><a href="#动态规划怎么保证每处的值都是最优" class="headerlink" title="动态规划怎么保证每处的值都是最优"></a>动态规划怎么保证每处的值都是最优</h3><p>这是由一个叫“最优子结构”的部分保证的，看维基百科上我们可以知道：</p>
<blockquote>
<p>动态规划只能应用于有最优子结构的问题。最优子结构的意思是局部最优解能决定全局最优解（对有些问题这个要求并不能完全满足，故有时需要引入一定的近似）。简单地说，问题能够分解成子问题来解决。</p>
</blockquote>
<p>也就是说因为每一步都是由一个特定的值和最优值组成的，每一步最优值则保证了下一步甚至到结果都是最优值。</p>
<p>当然如果状态和指标函数选取的不好，那么可能就陷入一个“不能保证最优子结构”的情况了，比如杭电上的龟兔赛跑问题，如果选取(i, j)作为状态，i为当前充电站的编号，j为当前还可以跑的里程。因为下一步的里程还是和这一步相关，所以保证了前面的最优并不能保证接下来的都是最优的，这部分就要思考清楚了(这也是最难的部分)。</p>
<h3 id="动态规划有哪几种解题模板"><a href="#动态规划有哪几种解题模板" class="headerlink" title="动态规划有哪几种解题模板"></a>动态规划有哪几种解题模板</h3><p>下面以数字三角形为例</p>
<ul>
<li>递推法<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">int i, j;</div><div class="line">// 总是要把最开始的状态先初始化，这里是最下面一层的状态</div><div class="line">for (int i = 1; i &lt;= n; ++i) d[n][i] = a[n][j];</div><div class="line">// 由于这个图形是二元的，于是有二重循环</div><div class="line">for (int i = n - 1; i &gt;= 1; --i)</div><div class="line">    for (int j = 1; j &lt;= i; ++j)</div><div class="line">        d[i][j] = a[i][j] + max(d[i + 1][j], d[i + 1][j + 1]);</div></pre></td></tr></table></figure>
</li>
</ul>
<p>经过循环进行递推，最后的结果储存在数组d中</p>
<ul>
<li>记忆化搜索</li>
</ul>
<p>在递归的基础上对已经访问的数据进行标记，避免了重叠子问题的多次求解</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">// 初始化，方便之后的判断</div><div class="line">memset(d, -1, sizeof(d));</div><div class="line">int solve(int i, int j)</div><div class="line">&#123;</div><div class="line">    if (d[i][j] &gt;= 0) return d[i][j];</div><div class="line">    // 返回的时候顺便进行了“记忆”</div><div class="line">    return d[i][j] = a[i][j] + (i == n? 0: max(solve(i + 1,j), solve(i + 1, j + 1);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>基本的思想主要就是两种，而解题的关键则是确定状态以及指标函数了</p>
<h3 id="动态规划有哪些应用"><a href="#动态规划有哪些应用" class="headerlink" title="动态规划有哪些应用"></a>动态规划有哪些应用</h3><p>下面就分析一下讲过和做过的题目：</p>
<h4 id="数字三角形"><a href="#数字三角形" class="headerlink" title="数字三角形"></a>数字三角形</h4><ul>
<li>状态：(i, j)，位置</li>
<li>指标函数d(i, j)，从(i, j)出发的最大长度</li>
<li>决策：向下走的方向</li>
<li>状态转移方程<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">d[i][j] = a[i][j] + max(d[i + 1][j], d[i + 1][j + 1]);</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="嵌套矩形（有向无环图不固定起点终点的最大路径）"><a href="#嵌套矩形（有向无环图不固定起点终点的最大路径）" class="headerlink" title="嵌套矩形（有向无环图不固定起点终点的最大路径）"></a>嵌套矩形（有向无环图不固定起点终点的最大路径）</h4><ul>
<li>状态：i，结点</li>
<li>指标函数d(i)，从i出发的最大长度</li>
<li>决策：到下一个结点选择的边</li>
<li>状态转移方程<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">d[i] = max&#123;d[j]&#125;;  // j为和i相邻的结点</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="硬币问题（有向无环图固定起点终点的最大-小路径）"><a href="#硬币问题（有向无环图固定起点终点的最大-小路径）" class="headerlink" title="硬币问题（有向无环图固定起点终点的最大/小路径）"></a>硬币问题（有向无环图固定起点终点的最大/小路径）</h4><ul>
<li>状态：i，结点</li>
<li>指标函数d(i)，从i出发的最大/小长度</li>
<li>决策：到下一个结点选择的硬币的种类（硬币面值要比剩下的钱要小）</li>
<li>状态转移方程<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">d[i] = max(d[i], d[i - v[t]] + 1);  // t是要从大到小（最小数量）进行循环</div><div class="line">// 因此要求出所有的长度也必然要对i进行循环，也就是两层循环</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="多段图最短路径（多段决策）"><a href="#多段图最短路径（多段决策）" class="headerlink" title="多段图最短路径（多段决策）"></a>多段图最短路径（多段决策）</h4><ul>
<li>状态：(i, j)，行，列</li>
<li>指标函数d(i, j)，从(i, j)出发到最后一列的最大长度</li>
<li><strong>阶段</strong>：列</li>
<li>决策：到下一列走的方向</li>
<li>状态转移方程<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">d[i][j] = max(d[i + n][j + 1] + a[i][j]);  // n是三种决策的一个表示，通过循环来判断</div><div class="line">// 如果要按照字典序输出，则最好按照行数的大小进行排序</div></pre></td></tr></table></figure>
</li>
</ul>
<p>注意：<br>这个模型到完成的时候的步数已经确定了，所以可以根据每一步来当做阶段，阶段可以作为状态的一部分来简化模型</p>
<h4 id="0-1背包（多段决策）"><a href="#0-1背包（多段决策）" class="headerlink" title="0-1背包（多段决策）"></a>0-1背包（多段决策）</h4><ul>
<li>状态：(i, j)，当前层，背包剩余容量</li>
<li>指标函数d(i, j)，从(i, j)出发到最后一列的最大长度</li>
<li><strong>阶段</strong>：物品，因为每个物品都只有一个，也是“过了就没有了”，于是也可以用阶段表示</li>
<li>决策：是否把物品放入背包</li>
<li>状态转移方程<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">// 这里j保证了不会有一开始选很大后面没位置选的情况，因为j会从0到最大容量进行循环</div><div class="line">// 前面的情况如果不是最优就会被排除</div><div class="line">// 也是对i对j两层循环</div><div class="line">d[i][j] = max(d[i + 1][j], d[i + 1][j - V[i]]);</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="龟兔赛跑"><a href="#龟兔赛跑" class="headerlink" title="龟兔赛跑"></a>龟兔赛跑</h4><ul>
<li>状态：i，充电站</li>
<li>指标函数d(i, j)，从i到j的过程中充一次电并且时间最短，T(i)到达i最小时间</li>
<li>决策：是否充电</li>
<li>状态转移方程<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">// 也是对i对j两层循环</div><div class="line">d[i] = min(T(i) + d(i, j), T(j));</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="最长上升子序列-LIS"><a href="#最长上升子序列-LIS" class="headerlink" title="最长上升子序列(LIS)"></a>最长上升子序列(LIS)</h4><ul>
<li>状态：i，序列长</li>
<li>指标函数d(i)，长度为i序列的最长长度</li>
<li>决策：新增加的数是否比原来最大的大</li>
<li>状态转移方程<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">// 也是对i对j两层循环</div><div class="line">d[i] = max(0, d(j) | j &lt; i, A[j] &lt; A[i]);</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="最长公共子序列-LCS"><a href="#最长公共子序列-LCS" class="headerlink" title="最长公共子序列(LCS)"></a>最长公共子序列(LCS)</h4><ul>
<li>状态：(i, j)，A，B序列长</li>
<li>指标函数d(i, j)，公共子序列最大长度</li>
<li>决策：两个序列是否正好是最后一位相同</li>
<li>状态转移方程<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">// i从0～m循环，j从0～n循环</div><div class="line">A[i] == B[j]</div><div class="line">d(i, j) = d(i - 1, j - 1) + 1;</div><div class="line"></div><div class="line">else</div><div class="line">d(i, j) = max(d(i - 1, j), d(i, j - 1));</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>动态转移方程的循环往往不止一层，这个地方一定要想清楚。</p>
<p>看了这么多，还是不会做题怎么办？</p>
<p>我也在苦恼这事呢（哭。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;动态规划初步&quot;&gt;&lt;a href=&quot;#动态规划初步&quot; class=&quot;headerlink&quot; title=&quot;动态规划初步&quot;&gt;&lt;/a&gt;动态规划初步&lt;/h1&gt;&lt;h2 id=&quot;开始之前&quot;&gt;&lt;a href=&quot;#开始之前&quot; class=&quot;headerlink&quot; title=&quot;开
    
    </summary>
    
      <category term="ACM" scheme="https://blog.patrickcty.cc/categories/ACM/"/>
    
    
      <category term="ACM" scheme="https://blog.patrickcty.cc/tags/ACM/"/>
    
      <category term="难" scheme="https://blog.patrickcty.cc/tags/%E9%9A%BE/"/>
    
      <category term="算法" scheme="https://blog.patrickcty.cc/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="动态规划" scheme="https://blog.patrickcty.cc/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>那些严重拖慢做题进度的题以及遇到的坑3</title>
    <link href="https://blog.patrickcty.cc/2017/02/20/%E9%82%A3%E4%BA%9B%E4%B8%A5%E9%87%8D%E6%8B%96%E6%85%A2%E5%81%9A%E9%A2%98%E8%BF%9B%E5%BA%A6%E7%9A%84%E9%A2%98%E4%BB%A5%E5%8F%8A%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%913/"/>
    <id>https://blog.patrickcty.cc/2017/02/20/那些严重拖慢做题进度的题以及遇到的坑3/</id>
    <published>2017-02-20T08:04:15.000Z</published>
    <updated>2017-02-20T08:04:55.631Z</updated>
    
    <content type="html"><![CDATA[<h1 id="那些严重拖慢做题进度的题以及遇到的坑3"><a href="#那些严重拖慢做题进度的题以及遇到的坑3" class="headerlink" title="那些严重拖慢做题进度的题以及遇到的坑3"></a>那些严重拖慢做题进度的题以及遇到的坑3</h1><p>依旧来自杭电</p>
<h2 id="1045-Fire-Net"><a href="#1045-Fire-Net" class="headerlink" title="1045 Fire Net"></a>1045 Fire Net</h2><blockquote>
<p>Suppose that we have a square city with straight streets. A map of a city is a square board with n rows and n columns, each representing a street or a piece of wall. </p>
<p>A blockhouse is a small castle that has four openings through which to shoot. The four openings are facing North, East, South, and West, respectively. There will be one machine gun shooting through each opening. </p>
<p>Here we assume that a bullet is so powerful that it can run across any distance and destroy a blockhouse on its way. On the other hand, a wall is so strongly built that can stop the bullets. </p>
<p>The goal is to place as many blockhouses in a city as possible so that no two can destroy each other. A configuration of blockhouses is legal provided that no two blockhouses are on the same horizontal row or vertical column in a map unless there is at least one wall separating them. In this problem we will consider small square cities (at most 4x4) that contain walls through which bullets cannot run through. </p>
<p>The following image shows five pictures of the same board. The first picture is the empty board, the second and third pictures show legal configurations, and the fourth and fifth pictures show illegal configurations. For this board, the maximum number of blockhouses in a legal configuration is 5; the second picture shows one way to do it, but there are several other ways. </p>
<p>Your task is to write a program that, given a description of a map, calculates the maximum number of blockhouses that can be placed in the city in a legal configuration. </p>
</blockquote>
<p>分析：</p>
<p>这是一道深度搜索的题，数据这么小是因为循环的次数太多了，也就是时间复杂度太大了</p>
<p>对于放置碉堡的顺序也有讲究，所以不能简单的从第一个开始扫一遍，而是要从每个点出发进行深度搜索，取最大的值才是最终的结果</p>
<p>深度搜索的好处是每次搜索的时候，前一次的状态都可以保留，并且最终状态回退也没那么麻烦</p>
<p>下面是代码：<br>参考了<a href="http://blog.csdn.net/u014235934/article/details/50879794" target="_blank" rel="external">这个链接</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div></pre></td><td class="code"><pre><div class="line">#include&lt;iostream&gt;</div><div class="line">#include&lt;cstdlib&gt;</div><div class="line">#include&lt;cstdio&gt;</div><div class="line">#include&lt;cmath&gt;</div><div class="line">#include&lt;cstring&gt;</div><div class="line">#include &lt;algorithm&gt;</div><div class="line"></div><div class="line">using namespace std;</div><div class="line"></div><div class="line">const int maxn = 10005;</div><div class="line"></div><div class="line">char a[5][5];</div><div class="line">// visit数组，表示每一格的状态，0为空位置，1为碉堡，2为墙</div><div class="line">// 实际上用a数组也可以，不过这里用的是整型数组</div><div class="line">int visit[5][5];</div><div class="line">// 设置为全局变量，便于函数中直接调用</div><div class="line">int mmax, cnt;</div><div class="line">int n;</div><div class="line"></div><div class="line">// 判断从(i, j)出发向上下左右是否会遇到碉堡</div><div class="line">// 也就是是否能在该店放置碉堡</div><div class="line">bool ffind(int i, int j)</div><div class="line">&#123;</div><div class="line">    for (int k = j; k &lt;= n; ++k)</div><div class="line">    &#123;</div><div class="line">        if (visit[i][k] == 2)</div><div class="line">            break;</div><div class="line">        if (visit[i][k] == 1)</div><div class="line">            return false;</div><div class="line">    &#125;</div><div class="line">    for (int k = j; k &gt; 0; --k)</div><div class="line">    &#123;</div><div class="line">        // 是visit而不是a</div><div class="line">        // 所以两个都用的坏处就是容易搞混</div><div class="line">        if (visit[i][k] == 2)</div><div class="line">            break;</div><div class="line">        if (visit[i][k] == 1)</div><div class="line">            return false;</div><div class="line">    &#125;</div><div class="line">    for (int k = i; k &lt;= n; ++k)</div><div class="line">    &#123;</div><div class="line">        if (visit[k][j] == 2)</div><div class="line">            break;</div><div class="line">        if (visit[k][j] == 1)</div><div class="line">            return false;</div><div class="line">    &#125;</div><div class="line">    for (int k = i; k &gt; 0; --k)</div><div class="line">    &#123;</div><div class="line">        // 横纵坐标不要搞错</div><div class="line">        if (visit[k][j] == 2)</div><div class="line">            break;</div><div class="line">        if (visit[k][j] == 1)</div><div class="line">            return false;</div><div class="line">    &#125;</div><div class="line">    return true;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">// 深度搜索</div><div class="line">void dfs()</div><div class="line">&#123;</div><div class="line">    // 每次都保存最大的状态</div><div class="line">    if (cnt &gt; mmax)</div><div class="line">        mmax = cnt;</div><div class="line">    for (int i = 1; i &lt;= n; ++i)</div><div class="line">    &#123;</div><div class="line">        for (int j = 1; j &lt;= n; ++j)</div><div class="line">        &#123;</div><div class="line">            // 没有放置碉堡并且可以放置碉堡</div><div class="line">            if (!visit[i][j] &amp;&amp; ffind(i, j))</div><div class="line">            &#123;</div><div class="line">                visit[i][j] = 1;</div><div class="line">                cnt++;</div><div class="line">                dfs();</div><div class="line">                // 整个搜索完了之后就状态回退</div><div class="line">                // 便于下一个点出发进行深度搜索</div><div class="line">                visit[i][j] = 0;</div><div class="line">                cnt--;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">int main()</div><div class="line">&#123;</div><div class="line"></div><div class="line">    while (scanf(&quot;%d&quot;, &amp;n) &amp;&amp; n != 0)</div><div class="line">    &#123;</div><div class="line">        for (int i = 1; i &lt;= n; ++i)</div><div class="line">        &#123;</div><div class="line">            getchar();</div><div class="line">            for (int j = 1; j &lt;= n; ++j)</div><div class="line">            &#123;</div><div class="line">                scanf(&quot;%c&quot;, &amp;a[i][j]);</div><div class="line">                if (a[i][j] == &apos;X&apos;)</div><div class="line">                    visit[i][j] = 2;</div><div class="line">                else</div><div class="line">                    visit[i][j] = 0;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        cnt = mmax = 0;</div><div class="line">        dfs();</div><div class="line">        printf(&quot;%d\n&quot;, mmax);</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;那些严重拖慢做题进度的题以及遇到的坑3&quot;&gt;&lt;a href=&quot;#那些严重拖慢做题进度的题以及遇到的坑3&quot; class=&quot;headerlink&quot; title=&quot;那些严重拖慢做题进度的题以及遇到的坑3&quot;&gt;&lt;/a&gt;那些严重拖慢做题进度的题以及遇到的坑3&lt;/h1&gt;&lt;p&gt;依旧
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>那些严重拖慢做题进度的题以及遇到的坑2</title>
    <link href="https://blog.patrickcty.cc/2017/02/19/%E9%82%A3%E4%BA%9B%E4%B8%A5%E9%87%8D%E6%8B%96%E6%85%A2%E5%81%9A%E9%A2%98%E8%BF%9B%E5%BA%A6%E7%9A%84%E9%A2%98%E4%BB%A5%E5%8F%8A%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%912/"/>
    <id>https://blog.patrickcty.cc/2017/02/19/那些严重拖慢做题进度的题以及遇到的坑2/</id>
    <published>2017-02-19T12:36:05.000Z</published>
    <updated>2017-02-19T12:43:20.456Z</updated>
    
    <content type="html"><![CDATA[<h1 id="那些严重拖慢做题进度的题以及遇到的坑2"><a href="#那些严重拖慢做题进度的题以及遇到的坑2" class="headerlink" title="那些严重拖慢做题进度的题以及遇到的坑2"></a>那些严重拖慢做题进度的题以及遇到的坑2</h1><p>杭电205X &amp;&amp; 206X</p>
<h2 id="A-B"><a href="#A-B" class="headerlink" title="A == B ?"></a>A == B ?</h2><blockquote>
<p>Give you two numbers A and B, if A is equal to B, you should print “YES”, or print “NO”.</p>
</blockquote>
<p>这一题是最坑的，AC率只有15.9%，主要原因就是题目条件说得太简略了，后面也有一些题是这样的，有一些时要注意的。</p>
<p>这里A和B并不是简单的数，可能是很长的数，长到没有变量类型可以表示，也可以是000000000000000000.00000000001这种形式很坑的数，所以并不是那么简单</p>
<p>不过Java里面有相应的模块，于是就很容易过了，而用C++就很难搞了</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.util.Scanner;</div><div class="line"><span class="keyword">import</span> java.math.BigDecimal;  <span class="comment">// 大的十进制数</span></div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</div><div class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</div><div class="line">        <span class="keyword">while</span> (in.hasNext()) &#123;</div><div class="line">            BigDecimal A = in.nextBigDecimal;</div><div class="line">            BigDecimal B = in.nextBigDecimal;</div><div class="line">            <span class="keyword">if</span> (A.compareTo(B) == <span class="number">0</span>) &#123;</div><div class="line">                System.out.println(<span class="string">"YES"</span>);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span> &#123;</div><div class="line">                System.out.println(<span class="string">"NO"</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>总结一下，这种涉及到位数很多的数用Java可以比较方便的解决。（得知道有相应的模块233）</p>
<h2 id="Rectangles"><a href="#Rectangles" class="headerlink" title="Rectangles"></a>Rectangles</h2><blockquote>
<p>Given two rectangles and the coordinates of two points on the diagonals of each rectangle,you have to calculate the area of the intersected part of two rectangles. its sides are parallel to OX and OY </p>
</blockquote>
<p>分析：</p>
<p>这一题知道算法就很简单，如果没想清楚就很坑了…比如说我…</p>
<p>方法一：</p>
<ul>
<li>重叠部分长度等于两者长度相加减去最大最小坐标之差，对于x，是下面这种，y也类似<blockquote>
<p>rela_x = fabs(x1 - x2) + fabs(x3 - x4) - (x[3] + x[0])  // x[3], x[0]是最大和最小的坐标</p>
</blockquote>
</li>
</ul>
<p>如果这个值小于零，说明不相交，大于零就是相应的长度</p>
<p>于是当相交的时候，面积就是rela_x * rela_y</p>
<p>方法二：</p>
<ul>
<li>重叠部分的长度总是四个坐标中中间两个的差值，于是面积有<blockquote>
<p>(x[2] - x[1]) * (y[3] - y[1])</p>
</blockquote>
</li>
</ul>
<p>关键就是要相处算法，死讨论情况是很难做出来的…</p>
<h2 id="A-B-Again"><a href="#A-B-Again" class="headerlink" title="A + B Again"></a>A + B Again</h2><blockquote>
<p>There must be many A + B problems in our HDOJ , now a new one is coming.<br>Give you two hexadecimal integers , your task is to calculate the sum of them,and print it in hexadecimal too.<br>Easy ? AC it !</p>
</blockquote>
<p>分析：</p>
<p>说白了就是十六进制的输入和输出，我不知道有相应的内容，于是手动转换…果不其然WA…</p>
<p>直接上代码吧…</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">#include&lt;stdio.h&gt;</div><div class="line">int main()</div><div class="line">&#123;</div><div class="line">    // 15位16进制相当于60位二进制，所以要开大一点</div><div class="line">    long long a, b;</div><div class="line">    // x占位符表示16进制</div><div class="line">    while(scanf(&quot;%llx %llx&quot;, &amp;a, &amp;b) != EOF)</div><div class="line">    &#123;</div><div class="line">        // 不能输出负的十六进制，所以这里要处理一下</div><div class="line">        if (a + b &lt; 0)</div><div class="line">            printf(&quot;-%llx\n&quot;, -(a + b));</div><div class="line">        else</div><div class="line">            printf(&quot;%llx\n&quot;, (a + b));</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>你看吧，基础不牢，地动山摇…</p>
<h2 id="The-sum-problem"><a href="#The-sum-problem" class="headerlink" title="The sum problem"></a>The sum problem</h2><blockquote>
<p>Given a sequence 1,2,3,……N, your job is to calculate all the possible sub-sequences that the sum of the sub-sequence is M.</p>
</blockquote>
<p>分析：</p>
<p>题目本身是很简单的，是连续的数列，都不涉及到动态规划<br>但是隐藏了一个坑，那就是输入的数字范围很大，因此如果不控制复杂度就机器容易超时</p>
<p>在这里用解方程的思想来做：</p>
<ul>
<li>首项为f，末项为e，项数为n<blockquote>
<p>m = (f + e) * n / 2;<br>e - f + 1 = n;</p>
</blockquote>
</li>
</ul>
<p>因此可以用项数和m来表示f解出f，当f为1的时候，n可能取到的值最大，约为sqrt(2m)，也就是说子序列的长度不可能超多这个值，因此循环从1到sqrt(2m)就可以了，当解出来的f是正整数而且不超过范围说明就是所求</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">int len = floor(sqrt(2 * m));</div><div class="line">        double x = 0;</div><div class="line">        for (int i = len; i &gt;= 1; --i)</div><div class="line">        &#123;</div><div class="line">            x = (2.0 * m / i + 1 - i) * 0.5;</div><div class="line">            int a = floor(x);</div><div class="line">            x -= a;</div><div class="line">            if (x == 0 &amp;&amp; (a + i - 1) &lt;= n)</div><div class="line">                printf(&quot;[%d,%d]\n&quot;, a, a + i - 1);</div><div class="line">        &#125;</div></pre></td></tr></table></figure>
<p>补充：</p>
<p>floor()是数学函数，是求一个浮点数的不大于它的最大整数，返回值也是一个double型的浮点数<br>类似的还有:<br>ceil()：求一个浮点数的不小于它的最小整数,返回值也是一个double型的浮点数<br>round():求一个浮点数的四舍五入值，返回也是一个整数，也就是说看小数点第二位四舍五入</p>
<blockquote>
<p>例如：round(1.499999) is 1.000000</p>
</blockquote>
<p>感觉自己是一个木头脑袋…</p>
<h2 id="龟兔赛跑"><a href="#龟兔赛跑" class="headerlink" title="龟兔赛跑"></a>龟兔赛跑</h2><blockquote>
<p>据说在很久很久以前，可怜的兔子经历了人生中最大的打击——赛跑输给乌龟后，心中郁闷，发誓要报仇雪恨，于是躲进了杭州下沙某农业园卧薪尝胆潜心修炼，终于练成了绝技，能够毫不休息得以恒定的速度(VR m/s)一直跑。兔子一直想找机会好好得教训一下乌龟，以雪前耻。<br>最近正值HDU举办50周年校庆，社会各大名流齐聚下沙，兔子也趁此机会向乌龟发起挑战。虽然乌龟深知获胜希望不大，不过迫于舆论压力，只能接受挑战。<br>比赛是设在一条笔直的道路上，长度为L米，规则很简单，谁先到达终点谁就算获胜。<br>无奈乌龟自从上次获胜以后，成了名龟，被一些八卦杂志称为“动物界的刘翔”，广告不断，手头也有了不少积蓄。为了能够再赢兔子，乌龟不惜花下血本买了最先进的武器——“”小飞鸽”牌电动车。这辆车在有电的情况下能够以VT1 m/s的速度“飞驰”，可惜电池容量有限，每次充满电最多只能行驶C米的距离，以后就只能用脚来蹬了，乌龟用脚蹬时的速度为VT2 m/s。更过分的是，乌龟竟然在跑道上修建了很多很多（N个)的供电站，供自己给电动车充电。其中，每次充电需要花费T秒钟的时间。当然，乌龟经过一个充电站的时候可以选择去或不去充电。<br>比赛马上开始了，兔子和带着充满电的电动车的乌龟并列站在起跑线上。你的任务就是写个程序，判断乌龟用最佳的方案进军时，能不能赢了一直以恒定速度奔跑的兔子。</p>
</blockquote>
<p>分析：</p>
<p>这个题目条件十分逗逼，也是一个涉及到动态规划的，在这里先留个坑等看了动态规划的相关内容再回来补充</p>
<h2 id="Treasure-the-new-start-freshmen"><a href="#Treasure-the-new-start-freshmen" class="headerlink" title="Treasure the new start, freshmen!"></a>Treasure the new start, freshmen!</h2><blockquote>
<p>background:<br>A new semester comes , and the HDU also meets its 50th birthday. No matter what’s your major, the only thing I want to tell you is:”Treasure the college life and seize the time.” Most people thought that the college life should be colorful, less presure.But in actual, the college life is also busy and rough. If you want to master the knowledge learned from the book, a great deal of leisure time should be spend on individual study and practise, especially on the latter one. I think the every one of you should take the learning attitude just as you have in senior school.<br>“No pain, No Gain”, HDU also has scholarship, who can win it? That’s mainly rely on the GPA(grade-point average) of the student had got. Now, I gonna tell you the rule, and your task is to program to caculate the GPA.<br>If there are K(K &gt; 0) courses, the i-th course has the credit Ci, your score Si, then the result GPA is<br>GPA = (C1 <em> S1 + C2 </em> S2 +……+Ci * Si……) / (C1 + C2 + ……+ Ci……) (1 &lt;= i &lt;= K, Ci != 0)<br>If there is a 0 &lt;= Si &lt; 60, The GPA is always not existed.</p>
</blockquote>
<p>这题其实是水题，但是一直WA</p>
<p>有几个坑：</p>
<ul>
<li>学分和成绩都可以是小数，所以要用double类型的，这里题目中没有说出来，以后要长一点心！</li>
<li>break使用的时候要慎重！特别是在输入数据的时候，提前break了后面输入的数据就都是错的！</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;那些严重拖慢做题进度的题以及遇到的坑2&quot;&gt;&lt;a href=&quot;#那些严重拖慢做题进度的题以及遇到的坑2&quot; class=&quot;headerlink&quot; title=&quot;那些严重拖慢做题进度的题以及遇到的坑2&quot;&gt;&lt;/a&gt;那些严重拖慢做题进度的题以及遇到的坑2&lt;/h1&gt;&lt;p&gt;杭电
    
    </summary>
    
      <category term="ACM" scheme="https://blog.patrickcty.cc/categories/ACM/"/>
    
    
      <category term="坑爹" scheme="https://blog.patrickcty.cc/tags/%E5%9D%91%E7%88%B9/"/>
    
      <category term="为什么我这么菜呀" scheme="https://blog.patrickcty.cc/tags/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E8%BF%99%E4%B9%88%E8%8F%9C%E5%91%80/"/>
    
  </entry>
  
  <entry>
    <title>《爆裂鼓手》</title>
    <link href="https://blog.patrickcty.cc/2017/02/19/%E3%80%8A%E7%88%86%E8%A3%82%E9%BC%93%E6%89%8B%E3%80%8B/"/>
    <id>https://blog.patrickcty.cc/2017/02/19/《爆裂鼓手》/</id>
    <published>2017-02-19T10:12:58.000Z</published>
    <updated>2017-02-19T10:16:46.582Z</updated>
    
    <content type="html"><![CDATA[<h1 id="《爆裂鼓手》"><a href="#《爆裂鼓手》" class="headerlink" title="《爆裂鼓手》"></a>《爆裂鼓手》</h1><h2 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ACM集训了这么多天，当我知道明天可以休息一天的时候，内心十分激动，于是在这个不用赶着A题的晚上，看了这部电影。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;说实话一下子真的难以下笔，于是我再次重新过了一次剧情这才对整个脉络有了进一步的了解。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;故事的主要人物是Andrew与Fletcher，核心冲突也是在他们两人之间展开的。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fletcher是一个怪人，但是他是一个很厉害的指挥家。他会做出一些怪异的举动，比如进入课堂然后让其中的一些学生演奏相应的片段来挑人到Studio Bank中去而上课的老师却不敢说什么，他会故意逼走一个没走音的学生，他会凭借自己的喜好随意辱骂吼学生，也因此让Sean选择自杀…</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;但是根据他自己的话他是想激发学生的潜力，而那些承受不了的，那个被逼走的都是因为他们“不够优秀”。虽然他的教学方式以及思想行为都十分偏激，但不可否认的是他的初衷是比较好的，同时也确实有一定的成绩。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;令我比较在意的是，在他讲述肖恩·凯西的死的时候，他哭了出来，但是从后面我们可以知道他是死于抑郁症，Fletcher的哭究竟是因为真的为他感到惋惜还是因为自责呢？由于他是一个很怪的人，所以这个还真的不好判断。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;另一边，Andrew也是一个奇怪的人，他十分热爱打鼓，并有才华，但是他没有朋友，家人也对他不怎么重视，他对待感情的态度也很奇怪。在与Nicole见面的四次中，有三次他是很低落的，另外在成为core的时候他似乎忽视了Nicole的短信？我能明显感觉到Nicole并不是他真正所爱，感觉有一种自我的因素掺杂在感情里面——因为加入Studio Bank而表白，因为失去core的地位而分手，因为再次上台演出而又想和Nicole和好。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;音乐才是他真正喜爱的内容，为了音乐，或者是为了乐队中的地位，他拼命练习，连练到流血，出车祸都要继续，也正是因为太过偏执，他才不甘心失去core地位，他才与Fletcher积怨，虽然我觉得大家都讨厌Fletcher…也正是因为偏执，他才能忍受住Fletcher的“折磨”，一步一步达到要求，以及最后的爆发。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在那场演奏的事故中，Andrew打了Fletcher，他也因此被退学。比较值得注意的是当那个女律师（应该是吧？）让他为Fletcher的坏行为作证，在很长一番思想斗争之后他终于同意作证了，之后他放弃了音乐梦，Fletcher也不再是教师了。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;之后他们再次相遇并且“冰释前嫌”，Andrew再次上台演奏，结果是Fletcher是为了报复他的举报之仇，但是Andrew用自己的演奏予以反击并且在最后也打动了Fletcher，最终电影在Fletcher和Andrew二人的对峙演奏中结束了。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;最后Andrew用自己行为让Fletcher认可了他，并且他自己的一口恶气也出了。鉴于Fletcher的古怪性格，他做出这种报复的行为也不算不可能，不过我之前一直以为Fletcher还是有感情的，所以当他报复的时候我还是很意外的。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;另外在维基百科上看到：</p>
<blockquote>
<p>安德鲁为此极度不满下，为了让佛列契改变主意而专心打鼓，打鼓打到两只手上的磨出的茧子流血。一刻起，安德鲁的性格发生了巨变，开始从彬彬有礼变的狂妄自大，甚至认为自己的女朋友妮可会拖自己的后腿而与她分手。</p>
</blockquote>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;尽管我并不是很认可这种说法，不过好像还是有一定的道理。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;总之这部电影还是看的很爽的，但是事后分析起来却感觉一脸懵逼，而且十分具有讽刺意味，可能是我没看懂吧…而且分析这个真的不比ACM轻松…</p>
<h2 id="评分"><a href="#评分" class="headerlink" title="评分"></a>评分</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;8/10。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;不知道这部电影想表达什么，可能是我没看懂。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;《爆裂鼓手》&quot;&gt;&lt;a href=&quot;#《爆裂鼓手》&quot; class=&quot;headerlink&quot; title=&quot;《爆裂鼓手》&quot;&gt;&lt;/a&gt;《爆裂鼓手》&lt;/h1&gt;&lt;h2 id=&quot;开始之前&quot;&gt;&lt;a href=&quot;#开始之前&quot; class=&quot;headerlink&quot; title=&quot;开
    
    </summary>
    
      <category term="电影" scheme="https://blog.patrickcty.cc/categories/%E7%94%B5%E5%BD%B1/"/>
    
    
      <category term="电影" scheme="https://blog.patrickcty.cc/tags/%E7%94%B5%E5%BD%B1/"/>
    
      <category term="看不懂" scheme="https://blog.patrickcty.cc/tags/%E7%9C%8B%E4%B8%8D%E6%87%82/"/>
    
  </entry>
  
  <entry>
    <title>ACM递推归纳</title>
    <link href="https://blog.patrickcty.cc/2017/02/18/ACM%E9%80%92%E6%8E%A8%E5%BD%92%E7%BA%B3/"/>
    <id>https://blog.patrickcty.cc/2017/02/18/ACM递推归纳/</id>
    <published>2017-02-17T16:53:50.000Z</published>
    <updated>2017-02-17T16:54:42.398Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ACM递推归纳"><a href="#ACM递推归纳" class="headerlink" title="ACM递推归纳"></a>ACM递推归纳</h1><p>递推是我众多不擅长的项目中的比较显著的一个…题目做得太艰难了。</p>
<h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>递推中增加一个元素，在头部加和尾部加是同一种情况！！！因此考虑了尾部就不用考虑头部了！！！吃了好多亏orz。</p>
<h2 id="超级楼梯"><a href="#超级楼梯" class="headerlink" title="超级楼梯"></a>超级楼梯</h2><blockquote>
<p>有一楼梯共M级，刚开始时你在第一级，若每次只能跨上一级或二级，要走上第M级，共有多少种走法？</p>
</blockquote>
<p>分析：</p>
<p>因为只能走一级或者两级，所以最后一步有两种情况：</p>
<ol>
<li>走一步，剩下n-1和之前的相同</li>
<li>走两步，剩下n-2和之前的相同</li>
</ol>
<p>于是有：</p>
<blockquote>
<p>a[n] = a[n - 1] + a[n - 2]</p>
</blockquote>
<h2 id="一只小蜜蜂"><a href="#一只小蜜蜂" class="headerlink" title="一只小蜜蜂"></a>一只小蜜蜂</h2><blockquote>
<p>有一只经过训练的蜜蜂只能爬向右侧相邻的蜂房，不能反向爬行。请编程计算蜜蜂从蜂房a爬到蜂房b的可能路线数。<br>其中，蜂房的结构如下所示。<br><img src="https://okdkbnczs.qnssl.com/image/ACM/2044.jpg" alt="此处输入图片的描述"></p>
</blockquote>
<p>分析：</p>
<p>a到b的可能性本质上就是爬行b-a距离的可能性。而每一步有两个选择，右边或者斜右边，剩下的就和上面的几乎一样了，于是有：</p>
<blockquote>
<p>a[i] = a[i - 1] + a[i - 2]</p>
</blockquote>
<h2 id="LELE的RPG难题"><a href="#LELE的RPG难题" class="headerlink" title="LELE的RPG难题"></a>LELE的RPG难题</h2><blockquote>
<p>有排成一行的ｎ个方格，用红(Red)、粉(Pink)、绿(Green)三色涂每个格子，每格涂一色，要求任何相邻的方格不能同色，且首尾两格也不同色．求全部的满足要求的涂法.</p>
</blockquote>
<p>分析：</p>
<p>如果n增加一，就要根据增加前最后一个格子的颜色来判断了：</p>
<ul>
<li>如果最后一个不和第一个相同，也就是满足条件，就直接是a[n - 1]了，增加的一块只有一个选择</li>
<li>如果相同，那么前面n-2个一定是满足条件的，就是a[n - 2]，增加的一块有两个选择</li>
</ul>
<p>于是有：</p>
<blockquote>
<p>a[i] = a[i - 1] + 2 * a[i - 2]</p>
</blockquote>
<h2 id="骨牌铺方格"><a href="#骨牌铺方格" class="headerlink" title="骨牌铺方格"></a>骨牌铺方格</h2><blockquote>
<p>在2×n的一个长方形方格中,用一个1× 2的骨牌铺满方格,输入n ,输出铺放方案的总数.<br>例如n=3时,为2× 3方格，骨牌的铺放方案有三种</p>
</blockquote>
<p>分析：</p>
<p>这道题之前就把我卡住了，不过现在看到这么多难题之后反而觉得不难了…</p>
<p>因为骨牌的尺寸是1*2，因此横着摆放和竖着摆放是不同的，而竖着摆放一个就能填满，横着摆放两个才能填满，于是：</p>
<ul>
<li>当前情况是n-1的时候多加了一块竖着的</li>
<li>当前情况是n-2的时候多加了两块横着的</li>
</ul>
<p>于是有：</p>
<blockquote>
<p>a[i] = a[i - 1] + a[i - 2]</p>
</blockquote>
<h2 id="阿牛的EOF牛肉串"><a href="#阿牛的EOF牛肉串" class="headerlink" title="阿牛的EOF牛肉串"></a>阿牛的EOF牛肉串</h2><blockquote>
<p>长度为n的只由”E” “O” “F”三种字符组成的字符串（可以只有其中一种或两种字符，但绝对不能有其他字符）,阿牛同时禁止在串中出现O相邻的情况</p>
</blockquote>
<p>分析：</p>
<p>末尾有两种可能，是O或者是其他的</p>
<ul>
<li>是E或F，那么前面n-1就一定满足，即为a[n-1]</li>
<li>是O的话，O前一位一定是E或F，根据上面的，有a[n-2]</li>
</ul>
<p>综合起来，于是有：</p>
<blockquote>
<p>a[n] = 2 * (a[n - 1] + a[n - 2])</p>
</blockquote>
<h2 id="神、上帝以及老天爷"><a href="#神、上帝以及老天爷" class="headerlink" title="神、上帝以及老天爷"></a>神、上帝以及老天爷</h2><blockquote>
<p>首先，所有参加晚会的人员都将一张写有自己名字的字条放入抽奖箱中；<br>然后，待所有字条加入完毕，每人从箱中取一个字条；<br>最后，如果取得的字条上写的就是自己的名字，那么“恭喜你，中奖了！”</p>
<p>大家可以想象一下当时的气氛之热烈，毕竟中奖者的奖品是大家梦寐以求的Twins签名照呀！不过，正如所有试图设计的喜剧往往以悲剧结尾，这次抽奖活动最后竟然没有一个人中奖！</p>
<p>我的神、上帝以及老天爷呀，怎么会这样呢？</p>
<p>不过，先不要激动，现在问题来了，你能计算一下发生这种情况的概率吗？</p>
</blockquote>
<p>分析：</p>
<p>注：此处a[n]依旧是可能性而不是概率<br>这是一个错位排序的问题，增加一个元素考虑两种情况：</p>
<ul>
<li>前面n-1已经构成错排，那么直接把最后一个和前面n-1任意一个交换就可以了，即为(n - 1) * a[n - 1]</li>
<li>前面n-1不构成错排，新加的元素交换之后构成错排，于是有n-2个元素构成错排，而不构成的元素有n - 1种情况，即为(n -1) * a[n - 2]</li>
</ul>
<p>于是有：</p>
<blockquote>
<p>a[n] = (a[n - 1] + a[n - 2]) * (n - 1)</p>
</blockquote>
<h2 id="考新郎"><a href="#考新郎" class="headerlink" title="考新郎"></a>考新郎</h2><blockquote>
<p>假设一共有N对新婚夫妇,其中有M个新郎找错了新娘,求发生这种情况一共有多少种可能.</p>
</blockquote>
<p>分析：</p>
<p>这也是一道错排的题，和上面几乎一样。不过是M个错排，另外N-M个是组合</p>
<p>于是有：</p>
<blockquote>
<p>a[n] = (a[n - 1] + a[n - 2]) <em> (n - 1)<br>rst = a[n] </em> C(N,M)</p>
</blockquote>
<p>注：a[n]是错排的可能性，rst才是结果</p>
<h2 id="折线分割平面"><a href="#折线分割平面" class="headerlink" title="折线分割平面"></a>折线分割平面</h2><blockquote>
<p>我们看到过很多直线分割平面的题目，今天的这个题目稍微有些变化，我们要求的是n条折线分割平面的最大数目。比如，一条折线可以将平面分成两部分，两条折线最多可以将平面分成7部分，具体如下所示。</p>
</blockquote>
<p><img src="https://okdkbnczs.qnssl.com/image/ACM/2050.jpg" alt="此处输入图片的描述"></p>
<p>分析：</p>
<p>直线相交的时候每增加N个交点会增加N+1个平面<br>1.N条直线相交，平面数为</p>
<blockquote>
<p>1 + 1 + 2 + .. + n = 1 + n * (n + 1) / 2</p>
</blockquote>
<p>2.N组平行线相交<br>第N次添加的时候，会增加两个2N-2个交点，此时会增加两个2N-1个平面，此时平面数为</p>
<blockquote>
<p>1 + 2 + 6 + … + 4n - 2 = 2 <em> n </em> n + 1</p>
</blockquote>
<p>3.N组折线相交<br>相比上面，每组直线相交就会少一个平面，于是少N个平面，平面数就是上面的减N</p>
<blockquote>
<p>2 <em> n </em> n + 1 - n</p>
</blockquote>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>这部分代码并不难，难的是找出递推关系。</p>
<p>这么多组下来之后可以发现很多都是与前两次的状态有关的，因为根据特殊的条件可以分成两种情况讨论，不过找出这个讨论的条件也不是一件容易的事情。希望这次的踩坑能给之后的带来一些帮助吧！</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;ACM递推归纳&quot;&gt;&lt;a href=&quot;#ACM递推归纳&quot; class=&quot;headerlink&quot; title=&quot;ACM递推归纳&quot;&gt;&lt;/a&gt;ACM递推归纳&lt;/h1&gt;&lt;p&gt;递推是我众多不擅长的项目中的比较显著的一个…题目做得太艰难了。&lt;/p&gt;
&lt;h2 id=&quot;注意&quot;&gt;&lt;a
    
    </summary>
    
      <category term="ACM" scheme="https://blog.patrickcty.cc/categories/ACM/"/>
    
    
      <category term="坑爹" scheme="https://blog.patrickcty.cc/tags/%E5%9D%91%E7%88%B9/"/>
    
  </entry>
  
  <entry>
    <title>那些严重拖慢做题进度的题以及遇到的坑</title>
    <link href="https://blog.patrickcty.cc/2017/02/17/%E9%82%A3%E4%BA%9B%E4%B8%A5%E9%87%8D%E6%8B%96%E6%85%A2%E5%81%9A%E9%A2%98%E8%BF%9B%E5%BA%A6%E7%9A%84%E9%A2%98%E4%BB%A5%E5%8F%8A%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/"/>
    <id>https://blog.patrickcty.cc/2017/02/17/那些严重拖慢做题进度的题以及遇到的坑/</id>
    <published>2017-02-16T16:44:51.000Z</published>
    <updated>2017-02-19T12:38:12.546Z</updated>
    
    <content type="html"><![CDATA[<h1 id="那些严重拖慢做题进度的题以及遇到的坑"><a href="#那些严重拖慢做题进度的题以及遇到的坑" class="headerlink" title="那些严重拖慢做题进度的题以及遇到的坑"></a>那些严重拖慢做题进度的题以及遇到的坑</h1><p>杭电204X</p>
<h2 id="进制转换"><a href="#进制转换" class="headerlink" title="进制转换"></a>进制转换</h2><p>这一题的关键是用字符数组来捕捉每一位的数，因为存在十进制以上的数，还要捕捉特定的那些字母，对于其他的就可以用数字和字符的关系来进行转换。</p>
<p>还有一个细节就是负号，取余的时候用正数会比较方便，因此最后不要忘记负号。</p>
<p>关键代码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">switch (n % r)</div><div class="line">&#123;</div><div class="line">    case 10:</div><div class="line">        a[i] = &apos;A&apos;;</div><div class="line">        break;</div><div class="line">    case 11:</div><div class="line">        a[i] = &apos;B&apos;;</div><div class="line">        break;</div><div class="line">    case 12:</div><div class="line">        a[i] = &apos;C&apos;;</div><div class="line">        break;</div><div class="line">    case 13:</div><div class="line">        a[i] = &apos;D&apos;;</div><div class="line">        break;</div><div class="line">    case 14:</div><div class="line">        a[i] = &apos;E&apos;;</div><div class="line">        break;</div><div class="line">    case 15:</div><div class="line">        a[i] = &apos;F&apos;;</div><div class="line">        break;</div><div class="line">    default:</div><div class="line">        a[i] = &apos;0&apos; + n % r;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>遇到的坑：</p>
<ul>
<li>一开始没有加default，为了图方便最后一个case没加break，后来加了default之后没意识到…狠狠坑了我一把</li>
<li>做题的时候思路要清晰，需要对余数大于小于10进行分类讨论，一个default就直接包含其中一种情况了</li>
<li>当感觉难以下手的时候不妨在纸上写下自己的思路！！！</li>
</ul>
<h2 id="一张桌子吃饭的并查集问题"><a href="#一张桌子吃饭的并查集问题" class="headerlink" title="一张桌子吃饭的并查集问题"></a>一张桌子吃饭的并查集问题</h2><p>并查集这个其实不是很难，只要把模板套上去就可以了</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">int fa[maxn];  // fa是father的简写</div><div class="line"></div><div class="line">void init(int n)</div><div class="line">&#123;</div><div class="line">    for (int i = 0; i &lt; n; ++i)</div><div class="line">    &#123;</div><div class="line">        fa[i] = i;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int find(int n)</div><div class="line">&#123;</div><div class="line">    if (fa[n] == n)</div><div class="line">        return n;</div><div class="line">    return fa[n] = find(fa[n]);  // 赋值语句的前半句可以减少递归次数从而提高程序的效率</div><div class="line">&#125;</div><div class="line"></div><div class="line">void connect(int x, int y)</div><div class="line">&#123;</div><div class="line">    x = fa[x];</div><div class="line">    y = fa[y];</div><div class="line">    if (x != y)</div><div class="line">        fa[x] = y;  // 连接的是头头</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>遇到的坑：</p>
<ul>
<li>要注意的是实际问题的编号很可能不是从0开始的，所以init函数循环可能要改一下才符合实际情况，今天就是这个地方一直WA</li>
</ul>
<h2 id="输出杨辉三角"><a href="#输出杨辉三角" class="headerlink" title="输出杨辉三角"></a>输出杨辉三角</h2><p>这一题其实并不难，我是用杨辉三角的每个数的公式做的，也就是用到了排列组合的性质，然而排列组合的公式挖了个大坑</p>
<p>组合数公式：Cn,m = An,m / m!</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">if (n - m &lt; m)</div><div class="line">    m = n - m;</div><div class="line">for (int i = 0; i &lt; m; ++i)</div><div class="line">    rst *= (m - i);</div><div class="line">for (int j = 2; j &lt;= m; ++j)</div><div class="line">    rst /= m;</div><div class="line">retrurn rst;</div></pre></td></tr></table></figure>
<p>遇到的坑：</p>
<ul>
<li>主要是忘记公式了，再加上思维很混乱于是就一直都有问题</li>
</ul>
<h2 id="求集合中的A-B"><a href="#求集合中的A-B" class="headerlink" title="求集合中的A-B"></a>求集合中的A-B</h2><p>其实挺简单的，多来几个循环进行判断就可以了</p>
<p>遇到的坑：</p>
<ul>
<li>初始化的两个输入值中可以有一个为零的，所以在输入的判断中就不能直接<code>while (scanf(&quot;%d %d&quot;, &amp;n, &amp;m) != EOF &amp;&amp; m &amp;&amp; n)</code>了，而是要在while中进行break:<code>if (n == 0 &amp;&amp; m == 0) break;</code></li>
</ul>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>今天做题的效率十分低下，就是因为出现了这些大大小小的问题，希望以后做题的时候思路可以更清晰一点，不要再在这些坑爹的问题上耽误时间了，吃一堑长一智！</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;那些严重拖慢做题进度的题以及遇到的坑&quot;&gt;&lt;a href=&quot;#那些严重拖慢做题进度的题以及遇到的坑&quot; class=&quot;headerlink&quot; title=&quot;那些严重拖慢做题进度的题以及遇到的坑&quot;&gt;&lt;/a&gt;那些严重拖慢做题进度的题以及遇到的坑&lt;/h1&gt;&lt;p&gt;杭电204X
    
    </summary>
    
      <category term="ACM" scheme="https://blog.patrickcty.cc/categories/ACM/"/>
    
    
      <category term="坑爹" scheme="https://blog.patrickcty.cc/tags/%E5%9D%91%E7%88%B9/"/>
    
      <category term="为什么我这么菜呀" scheme="https://blog.patrickcty.cc/tags/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E8%BF%99%E4%B9%88%E8%8F%9C%E5%91%80/"/>
    
  </entry>
  
  <entry>
    <title>求最大公约数和最小公倍数</title>
    <link href="https://blog.patrickcty.cc/2017/02/15/%E6%B1%82%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0%E5%92%8C%E6%9C%80%E5%B0%8F%E5%85%AC%E5%80%8D%E6%95%B0/"/>
    <id>https://blog.patrickcty.cc/2017/02/15/求最大公约数和最小公倍数/</id>
    <published>2017-02-15T14:17:11.000Z</published>
    <updated>2017-02-15T14:18:42.020Z</updated>
    
    <content type="html"><![CDATA[<h1 id="求最大公约数和最小公倍数"><a href="#求最大公约数和最小公倍数" class="headerlink" title="求最大公约数和最小公倍数"></a>求最大公约数和最小公倍数</h1><h2 id="最小公倍数"><a href="#最小公倍数" class="headerlink" title="最小公倍数"></a>最小公倍数</h2><p>公式：</p>
<blockquote>
<p>最小公倍数 = x * y / x与y的最大公约数</p>
</blockquote>
<h2 id="最大公约数"><a href="#最大公约数" class="headerlink" title="最大公约数"></a>最大公约数</h2><ul>
<li>辗转相除法：用大的数除以小的数，如果有余数，就用小的数除以余数，一直到没有余数，这时候当前的除数也就是上一轮的余数为最大公约数</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">if (x &lt; y)</div><div class="line">    swap(x, y);</div><div class="line">while (x % y)</div><div class="line">&#123;</div><div class="line">    c = x % y;</div><div class="line">    x = y;</div><div class="line">    y = c;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>最大公约数就是y， 也就是除尽之前的余数</p>
<ul>
<li>相减法：用大的数减小的数，如果相减后的结果不和小的数相同，则继续相减，得到相同的结果就是余数</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">if (x &lt; y)</div><div class="line">    swap(x, y);</div><div class="line">while (x - y != y)</div><div class="line">&#123;</div><div class="line">    c = x - y;</div><div class="line">    x = y;</div><div class="line">    y = c;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>最大公约数就是y</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;求最大公约数和最小公倍数&quot;&gt;&lt;a href=&quot;#求最大公约数和最小公倍数&quot; class=&quot;headerlink&quot; title=&quot;求最大公约数和最小公倍数&quot;&gt;&lt;/a&gt;求最大公约数和最小公倍数&lt;/h1&gt;&lt;h2 id=&quot;最小公倍数&quot;&gt;&lt;a href=&quot;#最小公倍数&quot; c
    
    </summary>
    
      <category term="算法" scheme="https://blog.patrickcty.cc/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="https://blog.patrickcty.cc/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>ACM输入输出套路汇总</title>
    <link href="https://blog.patrickcty.cc/2017/02/15/ACM%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E5%A5%97%E8%B7%AF%E6%B1%87%E6%80%BB/"/>
    <id>https://blog.patrickcty.cc/2017/02/15/ACM输入输出套路汇总/</id>
    <published>2017-02-15T13:48:15.000Z</published>
    <updated>2017-02-16T12:09:21.837Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ACM输入输出套路汇总"><a href="#ACM输入输出套路汇总" class="headerlink" title="ACM输入输出套路汇总"></a>ACM输入输出套路汇总</h1><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>注意输入不要死套模板！比如刚才有道题输入可以有一个为零，但是我套模板就卡了半天！一直没发现错误！</p>
<h3 id="输入中有一-多个n来指示输入的情况"><a href="#输入中有一-多个n来指示输入的情况" class="headerlink" title="输入中有一/多个n来指示输入的情况"></a>输入中有一/多个n来指示输入的情况</h3><ul>
<li>输入的都是数字/字符</li>
</ul>
<p>这个就比较简单了，直接两层循环读取输入的数字</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">scanf(&quot;%d&quot;, &amp;n);</div><div class="line">while (n--)</div><div class="line">&#123;</div><div class="line">    scanf(&quot;%d&quot;, &amp;num);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>后面读取的是字符串</li>
</ul>
<p>这个地方容易遇到坑，字符串一直都是比较麻烦的</p>
<p>1.用gets()读取字符串<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">char a[1000];</div><div class="line">gets(a);</div></pre></td></tr></table></figure></p>
<p>2.用scanf读取字符串<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">char a[1000];</div><div class="line">scanf(&quot;%s&quot;, a);</div></pre></td></tr></table></figure></p>
<p>但是注意两者都是有坑的！</p>
<p>gets()输入的时候如果前面还有输入的就要加一个getchar()<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">scanf(&quot;%d&quot;, &amp;n);</div><div class="line">getchar()</div><div class="line">char a[1000];</div><div class="line">gets(a);</div></pre></td></tr></table></figure></p>
<p>原因是gets会把前面scanf输入没有读取的换行符也当做需要的读取进去，这就导致读取的内容“少一行”，所以要用一个getchar来吸收这个换行符。<br>还有就是gets由于<a href="http://www.cnblogs.com/ngnetboy/archive/2012/11/26/2789410.html" target="_blank" rel="external">存在安全隐患</a>被废除了，用倒是可以用，不过官方不推荐，所以最好不要用，不过gets比fgets方便一些，竞赛的话，看个人喜好了。</p>
<p>关于fgets</p>
<blockquote>
<p>定义函数：har <em> fgets(char </em> s, int size, FILE * stream);</p>
<p>函数说明：fgets()用来从参数stream 所指的文件内读入字符并存到参数s 所指的内存空间, 直到出现换行字符、读到文件尾或是已读了<strong><em>size-1</em></strong> 个字符为止, 最后会加上NULL 作为字符串结束.</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">char a[1000];</div><div class="line">fgets(a, 1000, stdin);  // 这家伙把换行符也读进去了，输出的时候就不用加换行符了</div></pre></td></tr></table></figure>
<p>scanf输入的时候字符串中<strong>不能有空格</strong>！不然就会在空格处停下来，有空格的就不考虑scanf.</p>
<h3 id="没有设有特定的提示输入来告诉你输入多少"><a href="#没有设有特定的提示输入来告诉你输入多少" class="headerlink" title="没有设有特定的提示输入来告诉你输入多少"></a>没有设有特定的提示输入来告诉你输入多少</h3><p>这时候就要用输入函数的返回值来判断了</p>
<ul>
<li>scanf</li>
</ul>
<p>当输入成功的时候，返回值是输入成功的数字的大小，部分成功也会返回成功个数。而发生错误或者end of file则返回EOF</p>
<p>所以可以这样判断:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">while (scanf(&quot;%d %d&quot;, &amp;m, &amp;n) == 2 &amp;&amp; m &amp;&amp; n)</div><div class="line">&#123;&#125;</div></pre></td></tr></table></figure></p>
<p>或者:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">while (scanf(&quot;%d&quot;, &amp;m) != EOF)</div><div class="line">&#123;&#125;</div></pre></td></tr></table></figure></p>
<p>上面这种也可以简写为:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">while (~scanf(&quot;%d&quot;, &amp;m))</div><div class="line">&#123;&#125;</div></pre></td></tr></table></figure></p>
<ul>
<li>gets/fgets</li>
</ul>
<p>这两个函数在成功的时候都会返回相应的指针，也就是数组名， 而失败就会返回NULL，因此可以:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">while (gets(a))</div><div class="line">&#123;&#125;</div></pre></td></tr></table></figure></p>
<p>输入的话基本就是这两大类了，其中根据不同的情况再做改变，比如说输入0结束，这就很简单了，稍微改一下就可以了。</p>
<h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>输出的话主要是要判断是不是最后一个元素，像一行输出特别多组数据的时候特别要注意，因为涉及到换行。</p>
<p>下面这种就是缩短了循环，把特殊情况独立出来了，这样就避免了判断，当然判断i是不是等于n-1也是可以的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">for (int i = 0; i &lt; n - 1; ++i)</div><div class="line">&#123;</div><div class="line">    printf(&quot;%d &quot;, a[i]);</div><div class="line">&#125;</div><div class="line">printf(&quot;%d\n&quot;, a[n - 1]);</div></pre></td></tr></table></figure></p>
<p>还有的是最后一行不留换行等等，一定要看清楚题！不然很容易踩坑！暂时想到这么多，后面还有新的再补充！</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;ACM输入输出套路汇总&quot;&gt;&lt;a href=&quot;#ACM输入输出套路汇总&quot; class=&quot;headerlink&quot; title=&quot;ACM输入输出套路汇总&quot;&gt;&lt;/a&gt;ACM输入输出套路汇总&lt;/h1&gt;&lt;h2 id=&quot;输入&quot;&gt;&lt;a href=&quot;#输入&quot; class=&quot;head
    
    </summary>
    
      <category term="ACM" scheme="https://blog.patrickcty.cc/categories/ACM/"/>
    
    
      <category term="ACM" scheme="https://blog.patrickcty.cc/tags/ACM/"/>
    
  </entry>
  
  <entry>
    <title>《偷影子的人》</title>
    <link href="https://blog.patrickcty.cc/2017/02/13/%E3%80%8A%E5%81%B7%E5%BD%B1%E5%AD%90%E7%9A%84%E4%BA%BA%E3%80%8B/"/>
    <id>https://blog.patrickcty.cc/2017/02/13/《偷影子的人》/</id>
    <published>2017-02-13T04:25:27.000Z</published>
    <updated>2017-02-13T15:30:21.675Z</updated>
    
    <content type="html"><![CDATA[<h1 id="《偷影子的人》"><a href="#《偷影子的人》" class="headerlink" title="《偷影子的人》"></a>《偷影子的人》</h1><h2 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;和《追风筝的人》《摆渡人》一样，这本书也是十分畅销的欧美小说，并且这三本还被并列提到，但是我感觉无论是从内从还是题材上，《追风筝的人》比起另外两本都更胜一筹。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;男主小时候就是一个普通的小孩子，但是他有一个神奇的能力——与影子交谈。总感觉“我”是一个十分奇怪的人，可能也是因为爸爸的离开，以及进入新的环境。能力让“我”结识了吕克，伊凡，克蕾尔…并且用这个能力帮助了其他人。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;比较有趣的一个人物就是伊凡了，伊凡一开始是学校的一名保安，他在操场上解救了受罚打扫操场的“我”，伊凡也是“我”用能力第一个帮助的人，也是“我”的第一个朋友。不过伊凡这个人还是有一定的疑点，每次伊凡与“我”见面的时候都只有两个人，而且那次工具房的火灾中，也只有“我”记得伊凡的存在，最可疑的是，最后在凌晨三四点那个时候，伊凡出现在了学校操场，那个老地方，来引导我走出内心的彷徨。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;回想这些疑点，我比较同意伊凡是“我”内心的投影这个说法，他总是在“我”最迷茫最无助的时候出现，特别是最后一次的时间，出现得太奇怪，不过也不排除是作者为了填坑而强行增加的段落…</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;另外一个比较重要的人物就是苏菲了，苏菲是“我”的前女朋友，但是由于“我”不能承受起这份感情，他们分手了，苏菲在分手的时候的那张字条上的话真的十分让人触动。也是那么体贴，让我想起了你的那番话，即使分手了，他们还是好朋友，还能一起吃饭，一起玩耍。而我呢，我却选择不再联系，相忘于江湖。这应该也不是一件坏事吧，正是因为爱的深沉才难以放下，正是因为距离，所以做朋友，就更难找到一直保持关系的理由。就像苏菲最后找到了吕克，我希望你也能找到爱你的，让你快快乐乐的那个人。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;最后克雷尔这个结局还是很棒的，不过我总感觉很扯，这么多年的默默守候，这么多年的等待一个杳无音讯的人，甚至是小时候的一个人。尽管小说中刻画得很美好，不过现实中真的会这么顺利么？不过小说毕竟是小说，能给予我们温暖与感动不就够了么？</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;看的时候，看完都感觉心里暖暖的，这样的小说，似乎也不错呢～–</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;《偷影子的人》&quot;&gt;&lt;a href=&quot;#《偷影子的人》&quot; class=&quot;headerlink&quot; title=&quot;《偷影子的人》&quot;&gt;&lt;/a&gt;《偷影子的人》&lt;/h1&gt;&lt;h2 id=&quot;开始之前&quot;&gt;&lt;a href=&quot;#开始之前&quot; class=&quot;headerlink&quot; titl
    
    </summary>
    
      <category term="书籍" scheme="https://blog.patrickcty.cc/categories/%E4%B9%A6%E7%B1%8D/"/>
    
    
      <category term="温暖" scheme="https://blog.patrickcty.cc/tags/%E6%B8%A9%E6%9A%96/"/>
    
      <category term="爱情" scheme="https://blog.patrickcty.cc/tags/%E7%88%B1%E6%83%85/"/>
    
  </entry>
  
  <entry>
    <title>《Heidi》</title>
    <link href="https://blog.patrickcty.cc/2017/02/11/%E3%80%8AHeidi%E3%80%8B/"/>
    <id>https://blog.patrickcty.cc/2017/02/11/《Heidi》/</id>
    <published>2017-02-11T09:23:30.000Z</published>
    <updated>2017-02-11T09:25:04.541Z</updated>
    
    <content type="html"><![CDATA[<h1 id="《海蒂和爷爷》"><a href="#《海蒂和爷爷》" class="headerlink" title="《海蒂和爷爷》"></a>《海蒂和爷爷》</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;每个人的心都是一座孤岛，但是就是有这样的存在，能连接孤岛，但相反也同样会有这样的存在让孤岛更加封闭。而海蒂无疑是前一种。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;其实本片的原名是《Heidi》，我也觉得这样更为合理，因为Heidi就是那个连接孤岛的人。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我觉得海蒂某种方面上和《摆渡人》中的迪伦是有点相像的，她们都是那么善良，那么乐观。即使被姨妈抛弃到爷爷这里，即使一开始不被爷爷待见，他还是留在爷爷身边。就这样，她慢慢打开了爷爷的心，让爷爷一开始的想把她送走，到照顾她，为她打造椅子，疼爱她…</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当海蒂与爷爷以及朋友彼得过着无拘无束的日子的时候，把海蒂抛弃的姑妈又把海蒂骗到豪宅里去了，为了可怜的赏钱。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在豪宅中，海蒂认识了因为疾病而不能走路的大小姐克拉拉，海蒂的出现，让克拉拉的笑容重新洋溢在脸上。但是她并不快乐，她被困在豪宅中了，即使学会了礼仪，即使学会认字，即使吃的住的都是最好的，他都不快乐，她是一只鸟，属于天空，而豪宅就像一只笼子，将她困住了，思念成疾的她甚至梦游在门口眺望着故乡。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;最后她终于回到了故乡，并且之后也把克拉拉“带”了过来，在一次出去游玩的过程中，因为轮椅被彼得推下悬崖，克拉拉不能移动，但是看到了飞着的蝴蝶，克拉拉奇迹般的站了起来，并且又能再次再地上行走。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这部电影人物比较多，但是又完全不显得杂乱，即使只出现过很少的时间的任务，性格特点也十分凸显。</p>
<h2 id="人物"><a href="#人物" class="headerlink" title="人物"></a>人物</h2><h3 id="海蒂"><a href="#海蒂" class="headerlink" title="海蒂"></a>海蒂</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;她善良，包容，她愿意把自己的一半午餐分给皮特让他不打山羊。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;她率真向往自由，电影开始的时候，就有海蒂脱下她一身的洋装，在草丛中奔跑～这个与她回到爷爷身边的时候的情景相互呼应～</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;她关心他人，在豪宅的时候，“偷面包”的情景多次出现，而她并不是因为没见过世面，而是记住了彼得的奶奶不能吃硬面包于是想把她吃的软面包送给她，真是一个体贴的孩子~</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;她打开了爷爷的内心，打开了克拉拉的内心。他的笑容如冬日的卵样，夏日的清风，直击人心。她用她的笑容默默地改变这个世界，所幸世界没有改变她的笑容～</p>
<h3 id="爷爷"><a href="#爷爷" class="headerlink" title="爷爷"></a>爷爷</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;爷爷是一个被人误解的人，他独自生活在山上，一直被人当怪物看待。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;但事实上爷爷是一个很棒的人，他勤恳，善良，理解他人。他只是封闭了他的心灵，我想这很有可能是他的老伴还有女儿女婿的过世所造成的。所幸海蒂出现了，海蒂打开了他封闭的内心，他愿意接纳他人了，甚至还变得风趣了，最后看他撩克拉拉的奶奶的时候，真的好暖啊哈哈。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;最令我印象深刻的有两处，第一处是海蒂听彼得说爷爷杀了人之后的怀疑，但是爷爷只是镇定地说了下面这句话：</p>
<blockquote>
<p>人们就喜欢谈论些坏的东西，你需要自己做判断，相信自己的眼睛和耳朵还是相信那些流言？</p>
</blockquote>
<p><img src="https://okdkbnczs.qnssl.com/image/movies/heidiC1.png" alt="爷爷的话1"><br><img src="https://okdkbnczs.qnssl.com/image/movies/heidiC.png" alt="爷爷的话2"></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;另一处就是当彼得把克拉拉的轮椅推下悬崖之后爷爷察觉到了对彼得说话的场景，真的是帅爆了！！！</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;爷爷忍受着寂寞，无视着他人的眼光，封闭地过着，但幸运的是他遇到了海蒂，他放开了他自己。真的很让人欣慰。</p>
<h3 id="克拉拉"><a href="#克拉拉" class="headerlink" title="克拉拉"></a>克拉拉</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;克拉拉不是脾气古怪，只是太孤独了。没有同龄人的陪伴，没有了父母的陪伴，被困在家里，造就了她内心的忧郁。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;因此当她知道海蒂要离开时的，是那么的失态，那么的耍大小姐脾气，她的痛苦，恐怕只有她自己才能理解。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;不过正是有了海蒂，她的痛苦才会被隐藏，而海蒂走的时候，那种绝望，又再次扑面而来。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;其实她是一个性格很好的人，她也有着温暖的笑容~</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;而在阿尔卑斯山上，看到那一望无际的美景，看到飞舞的蝴蝶，再加上友情，她的伤终于痊愈，她也勇敢的站了起来，终于她克服了内心的障碍，重新开始了行走~</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;丢掉了轮椅的同时，锁着内心的锁链也丢掉了，她完全打开了内心，她重新找到了自我~</p>
<h3 id="彼得"><a href="#彼得" class="headerlink" title="彼得"></a>彼得</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这是一个比较矛盾的人，他偷吃海蒂的东西，他在海蒂被姨妈强行接走的时候不向爷爷说情况，他把克拉拉的轮椅推下悬崖。他性格古怪，嫉妒，自我。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;不过从背后我们可以看出彼得并不是那么一无是处，至少他陪海蒂度过了那么多个白天，他是海蒂的好朋友。而我相信海蒂一定也让他改变了不少~</p>
<h3 id="姨妈"><a href="#姨妈" class="headerlink" title="姨妈"></a>姨妈</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;姨妈出现的场景虽然不多，但总是很狼狈，放下海蒂之后狼狈地逃走，狼狈地被爷爷赶走，狼狈地抓着海蒂逃走233。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;她为了一点钱不惜让海蒂，爷爷，彼得得生活都改变了。自私，不负责任，两面三刀的形象跃然于荧幕之上。</p>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;影片真的让人觉得暖暖的~最后的结局也十分棒~情节也比较紧凑，真的有好多可以回味的内容~</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;还有克拉拉妹子也很漂亮呀~</p>
<p><img src="https://okdkbnczs.qnssl.com/image/movies/heidi2.jpg" alt="原来妹子这么高～"></p>
<h2 id="评分"><a href="#评分" class="headerlink" title="评分"></a>评分</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9/10。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;剧情丰富，情节温暖，人物性格丰满，好片~</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;《海蒂和爷爷》&quot;&gt;&lt;a href=&quot;#《海蒂和爷爷》&quot; class=&quot;headerlink&quot; title=&quot;《海蒂和爷爷》&quot;&gt;&lt;/a&gt;《海蒂和爷爷》&lt;/h1&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前
    
    </summary>
    
      <category term="电影" scheme="https://blog.patrickcty.cc/categories/%E7%94%B5%E5%BD%B1/"/>
    
    
      <category term="电影" scheme="https://blog.patrickcty.cc/tags/%E7%94%B5%E5%BD%B1/"/>
    
  </entry>
  
  <entry>
    <title>《摆渡人》</title>
    <link href="https://blog.patrickcty.cc/2017/02/11/%E3%80%8A%E6%91%86%E6%B8%A1%E4%BA%BA%E3%80%8B/"/>
    <id>https://blog.patrickcty.cc/2017/02/11/《摆渡人》/</id>
    <published>2017-02-11T05:01:34.000Z</published>
    <updated>2017-02-11T05:06:57.325Z</updated>
    
    <content type="html"><![CDATA[<h1 id="《摆渡人》"><a href="#《摆渡人》" class="headerlink" title="《摆渡人》"></a>《摆渡人》</h1><h2 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;一开听到这个名字我是拒绝的，原因就是那个之前微博上大家都喜欢，然而网友却不认可的事情。还好这本同名的书与这件事并没有任何关系。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;其实一开始的剧情是十分吸引人的，本来以为是一个普通的看望父亲的旅途，没想到火车出现了事故，本来以为只女主一个人活下来了，没想到她原来是在这次事故中丧生了。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;前半本书讲述的就是迪伦和崔斯坦一起穿越荒原的过程。从一开始的怀疑，到之后的初步了解，然后是深厚友谊，最后终于变成了爱情。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这一部分描写得还不错，关系也发展得很合理，不过我总觉得这部分很乏味。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;但是当最后的时候，迪伦的感情开始爆发，他们又不得不分开。比较巧妙的一点就是迪伦的情绪会直接影响到环境，特别是最后在湖面上那一部分，表现得尤其到位。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;第二部分是穿过荒原以后，后来穿过荒原之后迪伦坚定了对崔斯坦的感情，并且决定做出一个没有人成功的行动：返回荒原，寻找崔斯坦。她独自克服重重困难以后他们终于又汇合了，最后他们一起回到了现实世界，并且崔斯坦也终于成为了一个真正的人。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这本书最大的亮点就是人物心理活动的描写，人物的情感一直十分到位。不过我还是喜欢剧情类的……所以这本书看起来有时候会很乏味……</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;比较有趣的就是崔斯坦这个人，摆渡了无数人，那些人在意的却只是他们自己，迪伦是第一个也是唯一一个关心在意他的人。或许正是迪伦改变了他，他不再只是一个冷冰冰的摆渡机器，迪伦让他成为了一个真正的人。他也是一个会犹豫迟疑的人类，而不是无畏万能的摆渡人。正是因为这样，他才和迪伦一起，回到人类世界，成为真正的人类。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;很幸运再这么久的孤独之后，他终于能遇到对的人，在渡别人的时候把自己也渡了。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;最后的结尾也很有意思，迪伦在隧道里被救治，而崔斯坦并不在身边，但当她被抬出隧道，崔斯坦在那个同样的地方等着她。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;爱情真好。(脸红</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;《摆渡人》&quot;&gt;&lt;a href=&quot;#《摆渡人》&quot; class=&quot;headerlink&quot; title=&quot;《摆渡人》&quot;&gt;&lt;/a&gt;《摆渡人》&lt;/h1&gt;&lt;h2 id=&quot;开始之前&quot;&gt;&lt;a href=&quot;#开始之前&quot; class=&quot;headerlink&quot; title=&quot;开始之前&quot;
    
    </summary>
    
      <category term="书籍" scheme="https://blog.patrickcty.cc/categories/%E4%B9%A6%E7%B1%8D/"/>
    
    
      <category term="纯洁的爱情" scheme="https://blog.patrickcty.cc/tags/%E7%BA%AF%E6%B4%81%E7%9A%84%E7%88%B1%E6%83%85/"/>
    
  </entry>
  
  <entry>
    <title>《嫌疑人X的献身》</title>
    <link href="https://blog.patrickcty.cc/2017/02/09/%E3%80%8A%E5%AB%8C%E7%96%91%E4%BA%BAX%E7%9A%84%E7%8C%AE%E8%BA%AB%E3%80%8B/"/>
    <id>https://blog.patrickcty.cc/2017/02/09/《嫌疑人X的献身》/</id>
    <published>2017-02-09T15:49:44.000Z</published>
    <updated>2017-02-11T06:53:17.018Z</updated>
    
    <content type="html"><![CDATA[<h1 id="《嫌疑人X的献身》"><a href="#《嫌疑人X的献身》" class="headerlink" title="《嫌疑人X的献身》"></a>《嫌疑人X的献身》</h1><h2 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这是我在kindle上看完的第一本书，我个人是对悬疑比较抗拒的，但是因为在家实在太无聊以及坑爹的网速于是我就点开了沉睡在kindle中的这本书。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这本书的悬疑还是到位的，在叙述中一直隐藏了一个真相直到书的最后才揭露。故事情节不就不多说了，人物以及人物背后的情感才是给我留下来最深印象的部分。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这本书里有三种爱情。</p>
<h3 id="死缠烂打不择手段的爱情——富坚"><a href="#死缠烂打不择手段的爱情——富坚" class="headerlink" title="死缠烂打不择手段的爱情——富坚"></a>死缠烂打不择手段的爱情——富坚</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;他就是造成这一切的男人，在失业之后，他的本性暴露：一个暴躁无能的男人，用暴力来发泄自己的无能。即使分手之后依旧死缠烂打，用流氓的行为来纠缠，最后不慎被靖子勒死。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这种人，可以说是最差劲的男友的模板，也是最令人厌恶的前男友的模板。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;现在对家庭暴力以及离婚后的纠缠不休似乎并没有什么好的处理方法，特别是国内，家庭暴力一般都被大事化小小事化了，如果法律的武器能严惩这类人那就再好不过啦，不过这中间似乎还有很长的路要走呢。</p>
<h3 id="隐忍不逾界的爱情——工藤"><a href="#隐忍不逾界的爱情——工藤" class="headerlink" title="隐忍不逾界的爱情——工藤"></a>隐忍不逾界的爱情——工藤</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;工藤先生对靖子的帮助不可谓不大，当靖子还在酒廊的时候他就照顾她的生意，即使开房的要求被拒绝了也还是继续像朋友那样。当得知靖子已经结婚后就保持了距离，不再私下单独见面。当发现富坚对她不好之后更是出钱请律师帮她摆脱渣男。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;容易让人诟病的是上面的这些事都是在他有妻子女儿的时候做的，书里的说法是因为妻子重病，工藤为了寻找心里的慰藉而去酒廊。这也算是在情理之中吧。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在得知靖子的前老公死亡后，他出现了，并且想和靖子在一起。为什么不早点时间找到靖子呢？因为他有家室，因为他没有理由再去找她。而现在，他的妻子已亡，孩子也不在他的身边，再加上她的前男友刚刚去世，这是一个绝佳的时机。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;对于这样一个君子，叫君子应该不为过，我是十分佩服的，如果他和靖子在一起了我想她一定会幸福的。</p>
<h3 id="大爱无言——石神"><a href="#大爱无言——石神" class="headerlink" title="大爱无言——石神"></a>大爱无言——石神</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;而石神的爱情则是本书中最为壮烈又深沉的，因此我把它放在了最后。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;爱情的起源是因为靖子“救了”他，当他感觉人生灰暗没有意义准备上吊自杀的时候，靖子出现了，点亮了他灰暗的人生。但是他并没有采取什么特别的行动，只是默默注意着靖子，并且每次在靖子在的时候去照顾他的生意。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;而当靖子杀死富坚之后他又帮靖子处理尸体，出谋划策甚至为了他不惜杀死另一个人来帮她掩盖真相。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;即使知道靖子喜欢的不是自己，即使知道靖子对工藤的感觉，即使他吃了醋，给工藤发了骚扰信息（也许只是为了掩盖案情？），但最后石神还是牺牲了自己想让靖子和工藤一起过上幸福的生活。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;究竟是什么让他付出了这么多？我想一是因为靖子对于他来说就是救赎，再加上他的那个做出自认为最合理行为的性格，于是就有了为了自己的救赎把自己都搭进去的行为。尽管小说中把石神描述得很神：天才数学家，设局把警察耍得团团转，十分冷静…但是书中从细节还流露出了他也是一个有血有肉的人，他也会因为有喜欢的人而在意外表，他也会吃醋。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这份爱情是如此的厚重，又如此的隐蔽，只是这爱情可惜结局并不好。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;而靖子无疑是一个幸运又不幸的人，他被这么多人爱，没没有得到自己的爱情。</p>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;珍爱生命，远离渣男…</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;《嫌疑人X的献身》&quot;&gt;&lt;a href=&quot;#《嫌疑人X的献身》&quot; class=&quot;headerlink&quot; title=&quot;《嫌疑人X的献身》&quot;&gt;&lt;/a&gt;《嫌疑人X的献身》&lt;/h1&gt;&lt;h2 id=&quot;开始之前&quot;&gt;&lt;a href=&quot;#开始之前&quot; class=&quot;headerli
    
    </summary>
    
      <category term="书籍" scheme="https://blog.patrickcty.cc/categories/%E4%B9%A6%E7%B1%8D/"/>
    
    
      <category term="悬疑" scheme="https://blog.patrickcty.cc/tags/%E6%82%AC%E7%96%91/"/>
    
      <category term="小说" scheme="https://blog.patrickcty.cc/tags/%E5%B0%8F%E8%AF%B4/"/>
    
  </entry>
  
  <entry>
    <title>《断背山》</title>
    <link href="https://blog.patrickcty.cc/2017/02/09/%E3%80%8A%E6%96%AD%E8%83%8C%E5%B1%B1%E3%80%8B/"/>
    <id>https://blog.patrickcty.cc/2017/02/09/《断背山》/</id>
    <published>2017-02-09T07:41:52.000Z</published>
    <updated>2017-02-11T09:39:18.946Z</updated>
    
    <content type="html"><![CDATA[<h1 id="《断背山》"><a href="#《断背山》" class="headerlink" title="《断背山》"></a>《断背山》</h1><h2 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这是一部经典的电影，我说这个，相信很多人会笑。尽管题材比较敏感，但不可否认的是这确实是一部好电影。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;看之前我还很忐忑，因为害怕可能有些不适应以及那些敏感的原因，不过在看的时候，我真的完全抛开这些了。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这是一部很克制的电影，特别是男主的爱情表现上很克制，但是他们的爱情却并不克制。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;他们相遇于断背山，相爱与断背山，可以说断背山就是他们爱情的象征。但是由于工作结束了，他们不得不分开，从此多年杳无音讯。多年后他们又相见了…</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;剧情这部分<a href="https://zh.m.wikipedia.org/zh-cn/%E6%96%B7%E8%83%8C%E5%B1%B1" target="_blank" rel="external">维基百科</a>写得很好，一些细节也指出来了。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;他们的爱情是如此克制，因为世俗不让他们光明正大的那么做，同性恋被人仇恨，他们也都有家室。他们是最苦的异地恋，每年只有很少的时间可以相见。也因为这个，恩尼斯也与妻子离婚，后来谈的女友也没有走到一起，而杰克过的生活也不幸福，每天都被思念所困扰。最后杰克在轮胎打气的时候死亡，恩尼斯也一个人过着生活…</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;杰克是那个主动的一个，也是将两人的煎熬表现出来的那一个，两人的开始也是因为杰克不知觉的行为。而恩尼斯是那个默默忍受，很少言语的那个，尽管他没有明确表达出他的感情，不过我相信他承受的一定不比杰克少。最让我触动的是他们最后一次见面在断背山的那一幕场景，这是他们相遇的第二十个年头，生活太残酷了，他们也不得不低头，杰克梦想中的那种美好的日子也是再也没办法继续了…</p>
<p><img src="https://okdkbnczs.qnssl.com/image/movies/brokebackM.png" alt="嗯哼"></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;结尾的场景也十分动人，借用维基百科的段落：</p>
<blockquote>
<p>最后，艾尼斯的大女儿驱车来访，邀请他参加她的婚礼，艾尼斯默然，忆起杰克，过往的沧海桑田，对比女儿走向婚姻的结局，是喜悦，更多的是怅然。一直未能尽人父关怀的艾尼斯答应了女儿的邀约，女儿展露笑容。目送女儿走后，艾尼斯打开衣柜，柜门钉著一张断背山的明信片，两件老衬衣挂在明信片下，但此回艾尼斯已将自己的衬衣“包裹”住杰克了。艾尼斯蹙眉，轻声呢喃：“杰克，我发誓……”。</p>
</blockquote>
<h2 id="评分"><a href="#评分" class="headerlink" title="评分"></a>评分</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9/10。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;经典不必多说，情节很让人触动。即使是很久之前看的电影，但是一回想起来，脑海还是会被忧伤占据。</p>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;说实话，写这一篇的时候我也不知道说些什么，因此内容也比较凌乱。那种悲伤的感觉，很难表达出来。所以就只能这样了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;《断背山》&quot;&gt;&lt;a href=&quot;#《断背山》&quot; class=&quot;headerlink&quot; title=&quot;《断背山》&quot;&gt;&lt;/a&gt;《断背山》&lt;/h1&gt;&lt;h2 id=&quot;开始之前&quot;&gt;&lt;a href=&quot;#开始之前&quot; class=&quot;headerlink&quot; title=&quot;开始之前&quot;
    
    </summary>
    
      <category term="电影" scheme="https://blog.patrickcty.cc/categories/%E7%94%B5%E5%BD%B1/"/>
    
    
      <category term="同性" scheme="https://blog.patrickcty.cc/tags/%E5%90%8C%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>一加三T使用体验</title>
    <link href="https://blog.patrickcty.cc/2017/02/05/%E4%B8%80%E5%8A%A0%E4%B8%89T%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/"/>
    <id>https://blog.patrickcty.cc/2017/02/05/一加三T使用体验/</id>
    <published>2017-02-05T14:56:55.000Z</published>
    <updated>2017-02-11T07:03:17.382Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一加3T使用体验"><a href="#一加3T使用体验" class="headerlink" title="一加3T使用体验"></a>一加3T使用体验</h1><h2 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;前段时间，手机屏幕摔坏了，因为早就有了换手机的想法，于是也就不打算继续用下去了。但是当时市面上一直没有比较完美的手机，各方面比较符合我要求的就是S7 Edge了，然而由于是比较旧的机型，用的还是Micro USB接口，再就是在京东上看到的那些屏幕品控差的一些评价，最重要的是国行依旧昂贵的价格，让我放弃了。港行还有其他渠道的话，虽然比较便宜，但是因为这是一个大坑，我也不敢去趟，于是还是放弃了。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;后来我想到，既然一部手机不能满足我的要求，那两部呢？最后锁定在了一加3T和荣耀8。一加的拍照和性能，荣耀的小屏和吊炸天的玻璃后壳，如果两者可以合并那简直是完美啊。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;再考虑到拍照和Google的方便程度之后，我先选择的是一加3T。到现在为止已经挺长时间了，这么长的深度使用时间，再加上家里没网，正好只能安心写了233。</p>
<h2 id="总体评价"><a href="#总体评价" class="headerlink" title="总体评价"></a>总体评价</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;是一部好手机，性能没的说，日常使用也很舒服，只是有一些小毛病让人感觉系统优化还需要继续加油。</p>
<h2 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h2><ul>
<li>屏幕</li>
</ul>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这一代饱受诟病的就是这块5.5’1080P的Amoled屏幕，很多人都说辣眼睛，然而我可是用过pro5的5.7’1080P的Amoled屏幕，所以其实并没有网上说的那么不好。只不过自动亮度真的是太坑爹了，每次都特别亮，还是得手动调…还是pro5自动亮度优化得好。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;然后经过大米的推荐我开了屏幕的sRGB模式，第一次感觉非常偏黄，不过用久了感觉就是之前的屏幕加上了一个LOMO风格滤镜，现在用久了看起来完全没有什么不适应的感觉。</p>
<ul>
<li>外观</li>
</ul>
<p><img src="https://okdkbnczs.qnssl.com/image/others358033289.jpg" alt="俯视图"></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;说实话，外观比照片好看多了，到手之前我觉得背后的摄像头十分的丑，其实拿到手之后感觉整体真的很棒：后壳的弧度，以及简约的设计，硬朗的边角不至于下滑，那个摄像头的外观反而不重要了。而且这次耳机的开孔在下面！终于移到下面来了！之前在上面总感觉十分的违和…而且这次放到下面使得机身顶部没有开孔！一体化！</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;另外就是纳米注塑条真的很优雅，不知道比pro5的金属三段式高到哪里去了，pro5后盖的那些裂纹真的太操蛋了，而且超级容易裂开…从此金属三段式一生黑…</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;一个槽点就是音量键和电源键十分松动，而且似乎还不是个例…不过我还可以接受吧…</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;颜色也挺好！自从用了pro5的黑色前面板之后，就不想再用白色面板了，因为现在的黑边设计，总是会有一些黑边出现，和白色就有些冲突，而黑色就完全一体化了～因此在枪灰和薄荷金之间果断选择了枪灰。这个颜色还挺不错的，类似于淡淡的咖啡色，看起来也很大气。（要是有黑色就最好了。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;另外值得一提的就是三段式按键，真的很方便啊，之前切换静音状态总是要好几步动作，现在直接一按就方便了～</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;home键也挺好用，尽管不能按压但是完全不会不习惯啊，倒是另外两个按键感觉一般，还是魅族的mBack要方便的多！至少完全避免了误触的问题！而且一个键的功能非要放在三个键上感觉还是有点太不简洁了。不过好的地方是按键可以自定义长按，双击的功能，这一点还是很好的～</p>
<ul>
<li>软件</li>
</ul>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;直接内置Google Service真的不能更爽！安了Play市场之后就自动激活了！之前用的pro5 Play市场一直是只能看不能下载软件的…终于可以更新shadowsocks了。(逃</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;氢OS的简约真的很棒，很多地方都接近于原生，这一点是我最喜欢的！</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;天气的app简直不能再棒！整体简约风格真的美极了！而且没有乱七八糟的资讯什么的功能！没有莫名其妙消不掉的红点！最棒的是重力感应的天气动画！炫酷到爆啊有木有！</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;氢视窗也很棒，把功能整合到一起了，桌面再也不需要小部件了～尽管现在用的频率还不多，不过真的很方便啊！</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;不过还是有不少地方用起来不爽的，比如把图标拖到文件夹里面去，有多困难只有用过的知道…还有桌面的背景，为什么其他界面都是毛玻璃啊，为什么图标一行只有三个…之前用的Nova，但是看在氢视窗于是就没有换回Nova，不过这图标排列还是需要我去适应orz。还有就是一些细节比如多任务如果锁定了就不能手动把这一个删掉，而之前flyme，MIUI都可以直接删掉的…另一个比较严重的问题就是误触，真的好容易误触…动不动就点不动了…原来是误触。之前还没意识到这个的严重性，现在我只想心疼一下用Z11和S7e的兄弟233。要吐槽的是滚动截图…虽然支持这个功能，不过只是单纯的把图拼起来…中间还有黑边…</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;细节的问题还有不少，不过类似原生真的太棒了，权限管理也够用，至少不用让我下载第三方的控制后台什么的app了！现在升了7.0终于摆脱了pro5万年的5.1~233。</p>
<ul>
<li>拍照</li>
</ul>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;尽管排的比较少，不过现在感觉还不错，不过可能是心理作用233，毕竟评测的都给这个摄像头很高的分233。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;之前用3T拍过夜景，感觉用了假的光学防抖…拍出来的照片都发虚…看着论坛上面对这个吐槽也很大…而且还是相位对焦…似乎是单色温闪光灯…这种地方就不要节省成本啦！</p>
<ul>
<li>续航</li>
</ul>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;并不尿崩并不尿崩并不尿崩！3400mAh感觉真的不错啊，有时候用一天还剩20%的电，至少现在对我来说是不错的。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Dash闪充的话，比起魅族的mCharge还是差了一点，明显感觉充电比pro5慢，但是可能是电池容量的问题，不过24W还是比20W高一些的。Dash这个速度已经很棒了，至少比某果万年的5V1A要好得多233。</p>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;似乎没有什么可说的了，总体而言一加3T使用体验真的很棒，因为我不玩游戏所以性能对我来说绝对是大大的够用的，也没有卡顿，2799的价格也能接受，比某爱国品牌还是要好一些滴。只是官方的保护壳太贵了orz，虽然材料看起来真的很棒啊。还在纠结要不要入一个中233。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;期待一加能做的越来越好把，氢OS也不要发展成ADUI那样就好了，继续轻且有趣～继续Never Settle！</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一加3T使用体验&quot;&gt;&lt;a href=&quot;#一加3T使用体验&quot; class=&quot;headerlink&quot; title=&quot;一加3T使用体验&quot;&gt;&lt;/a&gt;一加3T使用体验&lt;/h1&gt;&lt;h2 id=&quot;开始之前&quot;&gt;&lt;a href=&quot;#开始之前&quot; class=&quot;headerlink&quot; 
    
    </summary>
    
      <category term="其他" scheme="https://blog.patrickcty.cc/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="手机" scheme="https://blog.patrickcty.cc/tags/%E6%89%8B%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>那些很棒的设计</title>
    <link href="https://blog.patrickcty.cc/2017/02/03/%E9%82%A3%E4%BA%9B%E5%BE%88%E6%A3%92%E7%9A%84%E8%AE%BE%E8%AE%A1/"/>
    <id>https://blog.patrickcty.cc/2017/02/03/那些很棒的设计/</id>
    <published>2017-02-03T01:52:11.000Z</published>
    <updated>2017-02-03T01:53:00.794Z</updated>
    
    <content type="html"><![CDATA[<h1 id="那些很棒的设计"><a href="#那些很棒的设计" class="headerlink" title="那些很棒的设计"></a>那些很棒的设计</h1><ul>
<li>大的盒装牛奶</li>
</ul>
<p><img src="https://okdkbnczs.qnssl.com/image/others/milk.jpg" alt="大的盒装牛奶"></p>
<p>就像标签上描述的一样，当你打开盖子的时候，也就顺便把牛奶打开了，不然徒手打开锡纸可没那么简单。</p>
<ul>
<li>麦斯威尔的速溶咖啡</li>
</ul>
<p><img src="https://okdkbnczs.qnssl.com/image/others/coffee.jpg" alt="麦斯威尔的速溶咖啡"></p>
<p>左侧那个热熔的区域，让撕开变成一个更简单的事情了，尽管从另一边也可以比较轻松地撕开，不过这个设计，让人眼前一亮～</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;那些很棒的设计&quot;&gt;&lt;a href=&quot;#那些很棒的设计&quot; class=&quot;headerlink&quot; title=&quot;那些很棒的设计&quot;&gt;&lt;/a&gt;那些很棒的设计&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;大的盒装牛奶&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://okdkb
    
    </summary>
    
      <category term="其他" scheme="https://blog.patrickcty.cc/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="设计" scheme="https://blog.patrickcty.cc/tags/%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="生活" scheme="https://blog.patrickcty.cc/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>我们各自乘风破浪</title>
    <link href="https://blog.patrickcty.cc/2017/02/02/%E6%88%91%E4%BB%AC%E5%90%84%E8%87%AA%E4%B9%98%E9%A3%8E%E7%A0%B4%E6%B5%AA/"/>
    <id>https://blog.patrickcty.cc/2017/02/02/我们各自乘风破浪/</id>
    <published>2017-02-02T15:04:38.000Z</published>
    <updated>2017-02-11T07:07:06.038Z</updated>
    
    <content type="html"><![CDATA[<h1 id="我们各自乘风破浪"><a href="#我们各自乘风破浪" class="headerlink" title="我们各自乘风破浪"></a>我们各自乘风破浪</h1><h2 id="《乘风破浪》"><a href="#《乘风破浪》" class="headerlink" title="《乘风破浪》"></a>《乘风破浪》</h2><blockquote>
<p>我欲乘风破浪，踏遍黄沙海洋</p>
<p>与其误会一场，也要不负勇往</p>
<p>–Jam《七月上》</p>
</blockquote>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当我看到这个电影名的时候，这两句歌词马上跃然于我的脑海。看过电影之后才发现无论是旋律还是歌词都十分符合电影的意境。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;乘风破浪，和后会无期一样，这个名字也十分有韩寒特色，也是一个一看到就让人有无穷联想的名字。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这是一个关于兄弟义气的故事，这是一个好故事，老套，却又别有韵味。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;今天我们四人帮再度聚首，也是一年中难得的所有人都能到的时候了。四个不同的城市，各自有各自所忙的事情，各自有各自的生活，再也不是学校中的友谊就是一切了。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;不过总算是聚到了一起，大家还是熟悉的大家。之后，一起去看了《乘风破浪》。</p>
<p><img src="https://okdkbnczs.qnssl.com/image/diary1828665460.jpg" alt="老图1！～"></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;说实话，对这部片子我的第一印象是不是很好的，因为一是看了预告片感觉整部片子拍的乱七八糟，二是之前乘风破浪歌歌词内容所引起的争议，不过因为其他两部新年档的似乎更烂，于是决定看这一部，不过看完之后整体感觉剧情并不像预告片那样乱，整体还是挺好的。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;内容比较老套，感觉和《夏洛特烦恼》以及《重返二十岁》有点类似。主角在一次带着父亲飙车的过程中被火车撞到，昏迷之际穿越回了父亲年轻时的那个年代。认识到了父亲的讲义气，好的一面，并且和父亲一起出生入死。直到见证了自己的出生才终于醒来，回到了正常的时间。结局设置的还不错，留下了充分的想象空间。</p>
<blockquote>
<p>究竟他是不是真正穿越回了过去？<br>那个手势他的父亲还记得。但是如果真的穿越了父亲一定会知道关于阿浪的事情。没穿越的话孩子又是谁照顾的？</p>
</blockquote>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;想象空间留的比较足所以bug并不能算是真的存在。</p>
<h2 id="人物"><a href="#人物" class="headerlink" title="人物"></a>人物</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;另外，和《后会无期》一样，这部电影的人物也都十分活灵活现。讲义气，固执，神经大条，中二，热血，靠谱的阿正。傻乎乎，同样讲义气，中二的六一。以及不合群，默默离开的小马。温柔，在背后支撑着阿正的小花。还有同样讲义气，逗逼的阿浪。这一个个鲜活又平凡的人物构成了一个平凡又精彩的故事，即使出场比较少的小马，人物表现得也十分出彩。可以说人物是本片的一大亮点。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;但是一个人是可能改变的，阿浪原本眼中的老爸，就和年轻时时的形象完全不同，这种反差，也值得人仔细思考。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;得一友如阿正，得一妻如阿花，人生之幸运也。</p>
<h2 id="评分"><a href="#评分" class="headerlink" title="评分"></a>评分</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;总分8/10。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;人物9/10，情节7/10，结尾9/10。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;人物刻画以及结尾都比较出彩，情节还是比较老套。和兄弟一起看还是比较爽的。</p>
<h2 id="回归标题"><a href="#回归标题" class="headerlink" title="回归标题"></a>回归标题</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这次聚会之后，下次再次见面又不知道时何时，今后大家只怕会是更加忙碌，更难再见面了，但现在的我们也不是以前那个懵懂的少年了，我们有自己的目标，有自己的想法，有自己的安排，有属于自己的未来，这样也就够了。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;能抽出一天的时间，大家一起闲扯，一起打牌，一起看电影，一起吃饭，岂不也是人生一件快乐的事情？嗯哼？</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;以后嘛，就要各自乘风破浪咯～</p>
<p><img src="https://okdkbnczs.qnssl.com/image/diary495860735.jpg" alt="老图2～"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;我们各自乘风破浪&quot;&gt;&lt;a href=&quot;#我们各自乘风破浪&quot; class=&quot;headerlink&quot; title=&quot;我们各自乘风破浪&quot;&gt;&lt;/a&gt;我们各自乘风破浪&lt;/h1&gt;&lt;h2 id=&quot;《乘风破浪》&quot;&gt;&lt;a href=&quot;#《乘风破浪》&quot; class=&quot;headerli
    
    </summary>
    
      <category term="日记" scheme="https://blog.patrickcty.cc/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="日记" scheme="https://blog.patrickcty.cc/tags/%E6%97%A5%E8%AE%B0/"/>
    
      <category term="电影" scheme="https://blog.patrickcty.cc/tags/%E7%94%B5%E5%BD%B1/"/>
    
      <category term="怀旧" scheme="https://blog.patrickcty.cc/tags/%E6%80%80%E6%97%A7/"/>
    
  </entry>
  
  <entry>
    <title>《一个叫欧维的男人决定去死》</title>
    <link href="https://blog.patrickcty.cc/2017/02/01/%E3%80%8A%E4%B8%80%E4%B8%AA%E5%8F%AB%E6%AC%A7%E7%BB%B4%E7%9A%84%E7%94%B7%E4%BA%BA%E5%86%B3%E5%AE%9A%E5%8E%BB%E6%AD%BB%E3%80%8B/"/>
    <id>https://blog.patrickcty.cc/2017/02/01/《一个叫欧维的男人决定去死》/</id>
    <published>2017-02-01T13:47:27.000Z</published>
    <updated>2017-02-01T13:56:42.973Z</updated>
    
    <content type="html"><![CDATA[<h1 id="《一个叫欧维的男人决定去死》"><a href="#《一个叫欧维的男人决定去死》" class="headerlink" title="《一个叫欧维的男人决定去死》"></a>《一个叫欧维的男人决定去死》</h1><h2 id="简短感受"><a href="#简短感受" class="headerlink" title="简短感受"></a>简短感受</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;受过伤的人，会把自己的内心封闭起来，会披上一身的刺。只有再次遇到愿意拥抱这身刺的人，他才会愿意暴露自己的脆弱，拿出自己的真心。受过伤的，是欧维，而去拥抱的，是帕维娜。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;欧维是一个命途多舛的人，在很小的时候，母亲就过世了，这时候父亲抚平了他内心的伤痕；而当他成为青年，父亲因为看到欧维的成绩太高兴以至于没注意被火车撞死，索尼娅的出现，帮助她走过了阴霾区，他们也过上了一段时间的幸福生活；然而之后的大巴车坠落山坡的事故中，索尼娅肚子中的孩子不幸夭折，索尼娅也被困在了轮椅上，后来索尼娅被癌症带走，无人可以抚慰他让他封闭了内心，成为了“刺头”；最后击垮他的是他被工厂辞退，他决定去死。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;说实话，欧维确实是一个令人烦的邻居，大事小事都要去管，并且态度很差，但是其实大家都知道他是一个深深爱着社区的人，是一个刀子嘴豆腐心的人，他也给了邻居们还有其他人很多帮助，而这些帮助也多次挽救了他的性命。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;故事是以欧维的几次自杀为分割来进行的，中间穿插着对过去的回忆，在临死之际，在不清醒的时候，回想着过去那些开心或者痛苦的时刻。邻居帕维纳的出现，阻止了好几次欧维的自杀，同是也慢慢的让欧维逐渐脱去了他那尖锐的外衣。欧维在她的“指导”下，去修了邻居的暖气，去教她开车，去接纳一个同志，去和其他人一起巡视，去收养那只受伤的猫……最后也是在帕维纳的帮助下，欧维说出了他的悲伤的过去，也让他得到了解脱，他开始找到了久违的幸福。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;而穿插的回忆，也很值得一提。从以前开始，欧维就是责任感，正义感爆棚却又十分木讷的人。尽管不善言语，尽管脾气很糟，但是他的行为，依旧为他带来了索尼娅，而索尼娅也让他成为了一个幸福的人，一个不那么暴躁的人。让我印象比较深刻的是，当知道他即将有孩子，他马上着手去做一个摇篮；为了妻子能好好进出教室，他冒着雨连夜做出了辅导。我想，正是因为看到了欧维的这些优点，索尼娅才决定把自己的一生托付给这个木讷的男人吧。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;生活中的灾难和变故真的很能摧残一个人，爱情也能让一个人变得更好。我突然想到了五月天《好好》中的那句歌词“我们都要把自己照顾好，好到遗憾无法打扰”，无论怎样，我们都要把自己照顾好，这样我们才能以最好的状态迎接我们的“索尼娅”以及“帕维纳”——那些能走进你心的人。</p>
<h2 id="评分"><a href="#评分" class="headerlink" title="评分"></a>评分</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;8.5/10。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;叙述方法很棒，感情很到位，只是比较琐碎，也是适合在安静的时候观看，最后也会有一种如沐春风的感觉～</p>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;平淡生活中的爱情才是真正的爱情。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;那些遗憾，就让它随风而去吧～</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;《一个叫欧维的男人决定去死》&quot;&gt;&lt;a href=&quot;#《一个叫欧维的男人决定去死》&quot; class=&quot;headerlink&quot; title=&quot;《一个叫欧维的男人决定去死》&quot;&gt;&lt;/a&gt;《一个叫欧维的男人决定去死》&lt;/h1&gt;&lt;h2 id=&quot;简短感受&quot;&gt;&lt;a href=&quot;#简
    
    </summary>
    
      <category term="电影" scheme="https://blog.patrickcty.cc/categories/%E7%94%B5%E5%BD%B1/"/>
    
    
      <category term="电影" scheme="https://blog.patrickcty.cc/tags/%E7%94%B5%E5%BD%B1/"/>
    
      <category term="温暖" scheme="https://blog.patrickcty.cc/tags/%E6%B8%A9%E6%9A%96/"/>
    
  </entry>
  
  <entry>
    <title>写完Java无聊于是就有了这样的一篇安利</title>
    <link href="https://blog.patrickcty.cc/2017/02/01/%E5%86%99%E5%AE%8CJava%E6%97%A0%E8%81%8A%E4%BA%8E%E6%98%AF%E5%B0%B1%E6%9C%89%E4%BA%86%E8%BF%99%E6%A0%B7%E7%9A%84%E4%B8%80%E7%AF%87%E5%AE%89%E5%88%A9/"/>
    <id>https://blog.patrickcty.cc/2017/02/01/写完Java无聊于是就有了这样的一篇安利/</id>
    <published>2017-02-01T13:43:24.000Z</published>
    <updated>2017-02-01T13:43:56.430Z</updated>
    
    <content type="html"><![CDATA[<h3 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h3><p>必然是ubuntu</p>
<ul>
<li>可定制性高(好吧说白了我对linux了解不多，主要是因为好看方便才用的)</li>
<li>对开发者友好：安装什么模块之类的一行代码就解决了</li>
<li>流畅：谁用谁知道</li>
<li>逼格高</li>
</ul>
<p>当然我不玩游戏</p>
<p>当然我也想体验macOS</p>
<p>如果是习惯windows又想试试linux，装Deepin吧</p>
<h3 id="编程工具"><a href="#编程工具" class="headerlink" title="编程工具"></a>编程工具</h3><p>我选IDE</p>
<ul>
<li>相比编辑器，一体成型，不用折腾</li>
<li>看着顺眼（Vim的logo太丑，逃</li>
<li>不会用Vim这些…</li>
<li>学习成本相比Vim这些低太多了…</li>
<li>集成了数据库，控制台，终端…真心方便</li>
</ul>
<h3 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h3><p>必然Chrome</p>
<ul>
<li>火狐一天崩溃一百次的flash</li>
<li>丰富的插件</li>
<li>logo很漂亮…</li>
<li>Google光环加成</li>
<li>就是很吃内存…</li>
</ul>
<h3 id="笔记工具"><a href="#笔记工具" class="headerlink" title="笔记工具"></a>笔记工具</h3><p>有道云笔记</p>
<ul>
<li>一开始在支持MarkDown之前我还是无感的</li>
<li>然后这个MarkDown编辑器真的好用到没边</li>
<li>MarkDown是个好东西，不知道？自己学，五分钟上手</li>
<li>就是没有Linux的桌面版，然后网页版很捉急分屏的时候全部挤在一坨了…</li>
</ul>
<h3 id="暂时就想到这些了"><a href="#暂时就想到这些了" class="headerlink" title="暂时就想到这些了"></a>暂时就想到这些了</h3><p>以后有想法再更新吧</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;操作系统&quot;&gt;&lt;a href=&quot;#操作系统&quot; class=&quot;headerlink&quot; title=&quot;操作系统&quot;&gt;&lt;/a&gt;操作系统&lt;/h3&gt;&lt;p&gt;必然是ubuntu&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可定制性高(好吧说白了我对linux了解不多，主要是因为好看方便才用的)&lt;/l
    
    </summary>
    
      <category term="其他" scheme="https://blog.patrickcty.cc/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="个人推荐" scheme="https://blog.patrickcty.cc/tags/%E4%B8%AA%E4%BA%BA%E6%8E%A8%E8%8D%90/"/>
    
      <category term="工具" scheme="https://blog.patrickcty.cc/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>《无间道》</title>
    <link href="https://blog.patrickcty.cc/2017/02/01/%E3%80%8A%E6%97%A0%E9%97%B4%E9%81%93%E3%80%8B/"/>
    <id>https://blog.patrickcty.cc/2017/02/01/《无间道》/</id>
    <published>2017-02-01T13:41:07.000Z</published>
    <updated>2017-02-01T13:43:00.359Z</updated>
    
    <content type="html"><![CDATA[<h1 id="《无间道》"><a href="#《无间道》" class="headerlink" title="《无间道》"></a>《无间道》</h1><h2 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这部电影的名字一直如雷贯耳，最近翻豆瓣电影的时候在很高的排名看到了这部电影，并且小米请了梁朝伟做了代言人，于是就决定去看了～</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;说实话，这部片子不太适合我，因为这种让我看得提心吊胆的片子我看的时候总会感觉不太舒服233。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这部片子足够精彩更足够刺激，两个组织以及两个卧底的相互博弈。片中梁朝伟和刘德华的演技都足够好，都演出了作为卧底的在那种时刻内心的焦虑等等。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;比较遗憾的是梁朝伟在电影中最终还是死了，说实话我挺喜欢这个角色的～</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;电影还探讨了一些其他方面的内容，关于正义与邪恶的选择。做卧底真的是一件很难的事情，特别是在黑社会中，随时都可能有生命危险，而且还会被几乎所有人误解，如果不是有一颗坚强的心脏以及出色的硬件条件，一个人是很容易走上不归路的。我庆幸阿仁也就是梁朝伟饰演的角色在剧中做到了，尽管如此艰难，在那十年中，他坚持住了自己，他依然信奉着绝对的正义，但也是因为这个，他最后被另一个卧底给击毙了。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;而刘德华饰演的刘警官，则是改邪归正，在黄警官死后，他的观点改变了，他亲手了结了他曾经的boss，浪子回头，千金不换。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;又想起了《湄公河行动》里面的那些军人，正是有了他们的奉献，我们才能过上如此安逸的生活，向他们送上我由衷的感谢！</p>
<h2 id="评分"><a href="#评分" class="headerlink" title="评分"></a>评分</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9/10。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;情节内涵都好的没话说，只是不是很适合我233。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;《无间道》&quot;&gt;&lt;a href=&quot;#《无间道》&quot; class=&quot;headerlink&quot; title=&quot;《无间道》&quot;&gt;&lt;/a&gt;《无间道》&lt;/h1&gt;&lt;h2 id=&quot;开始之前&quot;&gt;&lt;a href=&quot;#开始之前&quot; class=&quot;headerlink&quot; title=&quot;开始之前&quot;
    
    </summary>
    
      <category term="电影" scheme="https://blog.patrickcty.cc/categories/%E7%94%B5%E5%BD%B1/"/>
    
    
      <category term="电影" scheme="https://blog.patrickcty.cc/tags/%E7%94%B5%E5%BD%B1/"/>
    
      <category term="黑帮" scheme="https://blog.patrickcty.cc/tags/%E9%BB%91%E5%B8%AE/"/>
    
  </entry>
  
  <entry>
    <title>《我是传奇》</title>
    <link href="https://blog.patrickcty.cc/2017/02/01/%E3%80%8A%E6%88%91%E6%98%AF%E4%BC%A0%E5%A5%87%E3%80%8B/"/>
    <id>https://blog.patrickcty.cc/2017/02/01/《我是传奇》/</id>
    <published>2017-02-01T13:38:23.000Z</published>
    <updated>2017-02-01T13:40:44.677Z</updated>
    
    <content type="html"><![CDATA[<h1 id="《我是传奇》"><a href="#《我是传奇》" class="headerlink" title="《我是传奇》"></a>《我是传奇》</h1><h2 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;看到是威尔史密斯主演的就很有看的欲望～本以为是一部末日片结果没想到是一部丧尸片233。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;故事的背景是人类研制出了一种抗癌的药物，可以治疗癌症，但是没想到这种药物产生了一种严重的病毒，很多生物都被感染了变成了“夜魔”——攻击性很强，头脑退化，见不得阳光的类似于丧尸的状态。这种病毒通过空气传播，只有很少人可以免疫，而主角是纽约唯一一个幸存者。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;故事情节比较普通，就是主角一人生活在纽约，白天搜寻幸存者打猎，晚上待在屋子里防止被夜魔袭击并且在地下室研制治疗的药物。有一些槽点就是明明已经过去了三年，结果屋子里还是有电…而且水和粮食都比较充足…这种只有一个人在的世界最大的问题不就应该是这种生活用品么…不过好在也不是很影响…倒是没有这些反而不太好发展剧情了233。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;白天就是描述主角的日常活动，晚上则是插叙病毒刚到来时候与家人分别到家人死去的过程。其中主角神边那只狗狗真的很通人性啊～可惜在一次事故中主角中了夜魔的圈套狗狗也在这次中被感染不得不被杀死了，主角也因此想自杀，好在最后女主及时赶来救了他。女主在一个多小时的时候才出现233。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;最后的结局倒是挺值得一提，这部电影有两个结局。我个人比较喜欢第一个：原来那些夜魔袭击主角是因为夜魔头的女朋友被男主抓到实验室做实验了，男主把她还回去之后他们就停止攻击了，这时候药物应该成功研制出来了，男主和女主也踏上了旅途。比较引人思考的是夜魔居然有相当的智慧，而且女主所说的幸存者大本营也不知道是否存在，两人带着希望上路了。这两个地方都留下了充分的想象空间。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;另外一个结局就是当夜魔攻破了玻璃门的时候，男主和他们同归于尽了，女主就带着研制成功的药去到了大本营。看了这个结局之后再看第一个结局就更加觉得第一个结局比较有深意了，不过都挺不错的～</p>
<h2 id="评分"><a href="#评分" class="headerlink" title="评分"></a>评分</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7/10。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;一开始看的时候室友都不在…一个人看有点方233。故事中规中矩，第一个结局比较有深意。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;《我是传奇》&quot;&gt;&lt;a href=&quot;#《我是传奇》&quot; class=&quot;headerlink&quot; title=&quot;《我是传奇》&quot;&gt;&lt;/a&gt;《我是传奇》&lt;/h1&gt;&lt;h2 id=&quot;开始之前&quot;&gt;&lt;a href=&quot;#开始之前&quot; class=&quot;headerlink&quot; title=&quot;开
    
    </summary>
    
      <category term="电影" scheme="https://blog.patrickcty.cc/categories/%E7%94%B5%E5%BD%B1/"/>
    
    
      <category term="电影" scheme="https://blog.patrickcty.cc/tags/%E7%94%B5%E5%BD%B1/"/>
    
      <category term="科幻" scheme="https://blog.patrickcty.cc/tags/%E7%A7%91%E5%B9%BB/"/>
    
      <category term="一个人的世界" scheme="https://blog.patrickcty.cc/tags/%E4%B8%80%E4%B8%AA%E4%BA%BA%E7%9A%84%E4%B8%96%E7%95%8C/"/>
    
  </entry>
  
</feed>
